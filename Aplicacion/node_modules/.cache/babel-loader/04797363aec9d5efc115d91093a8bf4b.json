{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGmsqrt = void 0;\n\nvar Wrapper_js_1 = require(\"../Wrapper.js\");\n\nvar msqrt_js_1 = require(\"../../common/Wrappers/msqrt.js\");\n\nvar msqrt_js_2 = require(\"../../../core/MmlTree/MmlNodes/msqrt.js\");\n\nvar SVGmsqrt = function (_super) {\n  __extends(SVGmsqrt, _super);\n\n  function SVGmsqrt() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.dx = 0;\n    return _this;\n  }\n\n  SVGmsqrt.prototype.toSVG = function (parent) {\n    var surd = this.childNodes[this.surd];\n    var base = this.childNodes[this.base];\n    var root = this.root ? this.childNodes[this.root] : null;\n    var sbox = surd.getBBox();\n    var bbox = base.getOuterBBox();\n    var q = this.getPQ(sbox)[1];\n    var t = this.font.params.rule_thickness * this.bbox.scale;\n    var H = bbox.h + q + t;\n    var SVG = this.standardSVGnode(parent);\n    var BASE = this.adaptor.append(SVG, this.svg('g'));\n    this.addRoot(SVG, root, sbox, H);\n    surd.toSVG(SVG);\n    surd.place(this.dx, H - sbox.h);\n    base.toSVG(BASE);\n    base.place(this.dx + sbox.w, 0);\n    this.adaptor.append(SVG, this.svg('rect', {\n      width: this.fixed(bbox.w),\n      height: this.fixed(t),\n      x: this.fixed(this.dx + sbox.w),\n      y: this.fixed(H - t)\n    }));\n  };\n\n  SVGmsqrt.prototype.addRoot = function (_ROOT, _root, _sbox, _H) {};\n\n  SVGmsqrt.kind = msqrt_js_2.MmlMsqrt.prototype.kind;\n  return SVGmsqrt;\n}((0, msqrt_js_1.CommonMsqrtMixin)(Wrapper_js_1.SVGWrapper));\n\nexports.SVGmsqrt = SVGmsqrt;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AACA;;AAEA;;AAUA;EAAuCA;;EAAvC;IAAA;;IAUSC,WAAa,CAAb;;EA+CR;;EA1CQC,2BAAP,UAAaC,MAAb,EAAsB;IACpB,IAAMC,IAAI,GAAG,KAAKC,UAAL,CAAgB,KAAKD,IAArB,CAAb;IACA,IAAME,IAAI,GAAG,KAAKD,UAAL,CAAgB,KAAKC,IAArB,CAAb;IACA,IAAMC,IAAI,GAAI,KAAKA,IAAL,GAAY,KAAKF,UAAL,CAAgB,KAAKE,IAArB,CAAZ,GAAyC,IAAvD;IAIA,IAAMC,IAAI,GAAGJ,IAAI,CAACK,OAAL,EAAb;IACA,IAAMC,IAAI,GAAGJ,IAAI,CAACK,YAAL,EAAb;IACA,IAAMC,CAAC,GAAG,KAAKC,KAAL,CAAWL,IAAX,EAAiB,CAAjB,CAAV;IACA,IAAMM,CAAC,GAAG,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,cAAjB,GAAkC,KAAKP,IAAL,CAAUQ,KAAtD;IACA,IAAMC,CAAC,GAAGT,IAAI,CAACU,CAAL,GAASR,CAAT,GAAaE,CAAvB;IAIA,IAAMO,GAAG,GAAG,KAAKC,eAAL,CAAqBnB,MAArB,CAAZ;IACA,IAAMoB,IAAI,GAAG,KAAKC,OAAL,CAAaC,MAAb,CAAoBJ,GAApB,EAAyB,KAAKK,GAAL,CAAS,GAAT,CAAzB,CAAb;IAIA,KAAKC,OAAL,CAAaN,GAAb,EAAkBd,IAAlB,EAAwBC,IAAxB,EAA8BW,CAA9B;IACAf,IAAI,CAACwB,KAAL,CAAWP,GAAX;IACAjB,IAAI,CAACyB,KAAL,CAAW,KAAKC,EAAhB,EAAoBX,CAAC,GAAGX,IAAI,CAACY,CAA7B;IACAd,IAAI,CAACsB,KAAL,CAAWL,IAAX;IACAjB,IAAI,CAACuB,KAAL,CAAW,KAAKC,EAAL,GAAUtB,IAAI,CAACuB,CAA1B,EAA6B,CAA7B;IACA,KAAKP,OAAL,CAAaC,MAAb,CAAoBJ,GAApB,EAAyB,KAAKK,GAAL,CAAS,MAAT,EAAiB;MACxCM,KAAK,EAAE,KAAKC,KAAL,CAAWvB,IAAI,CAACqB,CAAhB,CADiC;MACbG,MAAM,EAAE,KAAKD,KAAL,CAAWnB,CAAX,CADK;MAExCqB,CAAC,EAAE,KAAKF,KAAL,CAAW,KAAKH,EAAL,GAAUtB,IAAI,CAACuB,CAA1B,CAFqC;MAEPK,CAAC,EAAE,KAAKH,KAAL,CAAWd,CAAC,GAAGL,CAAf;IAFI,CAAjB,CAAzB;EAID,CA7BM;;EAuCGZ,6BAAV,UAAkBmC,KAAlB,EAA4BC,KAA5B,EAAwDC,KAAxD,EAAqEC,EAArE,EAA+E,CAC9E,CADS;;EAjDItC,gBAAOuC,oBAASC,SAAT,CAAmBC,IAA1B;EAoDhB;AAAC,CAzDD,CAAuC,iCAAgDC,uBAAhD,CAAvC;;AAAaC","names":["__extends","_this","SVGmsqrt","parent","surd","childNodes","base","root","sbox","getBBox","bbox","getOuterBBox","q","getPQ","t","font","params","rule_thickness","scale","H","h","SVG","standardSVGnode","BASE","adaptor","append","svg","addRoot","toSVG","place","dx","w","width","fixed","height","x","y","_ROOT","_root","_sbox","_H","msqrt_js_2","prototype","kind","Wrapper_js_1","exports"],"sourceRoot":"","sources":["../../../../ts/output/svg/Wrappers/msqrt.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}