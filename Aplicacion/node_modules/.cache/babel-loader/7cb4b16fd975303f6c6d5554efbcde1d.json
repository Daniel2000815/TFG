{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\Graph.js\";\nimport React from \"react\";\nimport { useCallback, useEffect } from \"react\";\nimport ReactFlow, { addEdge, Background, useNodesState, useEdgesState, MarkerType } from \"react-flow-renderer\";\nimport ButtonEdge from \"./ButtonEdge.js\";\nimport PrimitiveNode from \"./PrimitiveNode.js\";\nimport BooleanNode from \"./BooleanNode.js\";\nimport CustomContext from \"./CustomContext\";\nimport \"./styles.css\";\nvar initialNodes = [{\n  id: \"node-0\",\n  type: \"booleanNode\",\n  position: {\n    x: 0,\n    y: 0\n  },\n  data: {\n    sdf: \"sphere(1.0)\"\n  }\n}, {\n  id: \"node-1\",\n  type: \"primitiveNode\",\n  position: {\n    x: 250,\n    y: 0\n  },\n  data: {\n    sdf: \"box(1.0, 1.0, 1.0)\"\n  }\n}, {\n  id: \"node-2\",\n  type: \"primitiveNode\",\n  position: {\n    x: 250,\n    y: -300\n  },\n  data: {\n    sdf: \"\"\n  }\n}];\nvar initialEdges = [];\nvar nodeTypes = {\n  primitiveNode: PrimitiveNode,\n  booleanNode: BooleanNode\n};\n\nvar onInit = function onInit(reactFlowInstance) {\n  return console.log(\"flow loaded:\", reactFlowInstance);\n};\n\nexport default function Graph() {\n  var _useNodesState = useNodesState([]),\n      _useNodesState2 = _slicedToArray(_useNodesState, 3),\n      nodes = _useNodesState2[0],\n      setNodes = _useNodesState2[1],\n      onNodesChange = _useNodesState2[2];\n\n  var _useEdgesState = useEdgesState([]),\n      _useEdgesState2 = _slicedToArray(_useEdgesState, 3),\n      edges = _useEdgesState2[0],\n      setEdges = _useEdgesState2[1],\n      onEdgesChange = _useEdgesState2[2];\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      id = _React$useState2[0],\n      setId = _React$useState2[1];\n\n  var updateNodeSdf = function updateNodeSdf(id, newSdf) {\n    console.log(\"ACTUALIZADO SDF\");\n    setNodes(function (nds) {\n      return nds.map(function (node) {\n        if (node.id === id) {\n          node.data = _objectSpread(_objectSpread({}, node.data), {}, {\n            sdf: newSdf\n          });\n        }\n\n        return node;\n      });\n    });\n  };\n\n  var connectSdf = function connectSdf(sourceId, targetId, params) {// console.log(nodes);\n    // const sourceNode = nodes.find(n => n.id===sourceId);\n    // const targetNode = nodes.find(n => n.id===targetId);\n    // setNodes((nds) =>\n    //   nds.map((node) => {\n    //     if (node.id === targetId) {\n    //       node.data = {\n    //         ...node.data,\n    //         sdfs: [...node.data.sdfs.concat(sourceNode.data.sdf)],\n    //       };\n    //     }\n    //     return node;\n    //   })\n    // );\n  };\n\n  var sharedFunctions = {\n    updateNodeSdf: updateNodeSdf,\n    connectSdf: connectSdf\n  };\n  var onConnect = useCallback(function (params) {\n    var sourceNode = nodes.find(function (n) {\n      return n.id === params.source;\n    });\n    setEdges(function (eds) {\n      return addEdge(_objectSpread(_objectSpread({}, params), {}, {\n        animated: true,\n        markerEnd: {\n          type: MarkerType.Arrow,\n          color: \"#000\"\n        },\n        data: {}\n      }), eds);\n    });\n  }, []);\n  useEffect(function () {\n    console.log(\"NUEVO EDGE:\");\n    console.log(edges);\n  }, [edges]);\n\n  var newPrimitiveNode = function newPrimitiveNode() {\n    setId(id + 1);\n    return {\n      id: \"node-\".concat(id),\n      type: \"primitiveNode\",\n      position: {\n        x: 0,\n        y: 0\n      },\n      data: {\n        sdf: \"sphere(p, 1.0)\",\n        onChangeSdf: updateNodeSdf,\n        onConnectHandle: connectSdf\n      }\n    };\n  };\n\n  var newBooleanNode = function newBooleanNode() {\n    setId(id + 1);\n    return {\n      id: \"node-\".concat(id),\n      type: \"booleanNode\",\n      position: {\n        x: 0,\n        y: 0\n      },\n      data: {\n        sdfs: []\n      }\n    };\n  };\n\n  var handleKey = function handleKey(e) {\n    // SPACE BAR\n    if (e.key === \"p\") {\n      var node = newPrimitiveNode();\n      nodes.push(node);\n      onNodesChange([node]); // Para actualizar\n    } else if (e.key === \"b\") {\n      var _node = newBooleanNode();\n\n      nodes.push(_node);\n      onNodesChange([_node]); // Para actualizar\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100vh\"\n    },\n    tabIndex: \"0\",\n    onKeyDown: handleKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CustomContext.Provider, {\n    value: sharedFunctions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, nodes.length, /*#__PURE__*/React.createElement(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    onConnect: onConnect // onDisconnect={onDisconnect}\n    ,\n    nodeTypes: nodeTypes,\n    onInit: onInit,\n    onEdgeClick: function onEdgeClick(ev, edge) {\n      return setEdges(edges.filter(function (e) {\n        return e.id != edge.id;\n      }));\n    },\n    snapToGrid: true,\n    fitView: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Background, {\n    color: \"#aaa\",\n    gap: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"names":["React","useCallback","useEffect","ReactFlow","addEdge","Background","useNodesState","useEdgesState","MarkerType","ButtonEdge","PrimitiveNode","BooleanNode","CustomContext","initialNodes","id","type","position","x","y","data","sdf","initialEdges","nodeTypes","primitiveNode","booleanNode","onInit","reactFlowInstance","console","log","Graph","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","useState","setId","updateNodeSdf","newSdf","nds","map","node","connectSdf","sourceId","targetId","params","sharedFunctions","onConnect","sourceNode","find","n","source","eds","animated","markerEnd","Arrow","color","newPrimitiveNode","onChangeSdf","onConnectHandle","newBooleanNode","sdfs","handleKey","e","key","push","height","length","ev","edge","filter"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/Graph.js"],"sourcesContent":["import React from \"react\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  useNodesState,\r\n  useEdgesState,\r\n  MarkerType,\r\n} from \"react-flow-renderer\";\r\nimport ButtonEdge from \"./ButtonEdge.js\";\r\nimport PrimitiveNode from \"./PrimitiveNode.js\";\r\nimport BooleanNode from \"./BooleanNode.js\";\r\nimport CustomContext from \"./CustomContext\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst initialNodes = [\r\n  {\r\n    id: \"node-0\",\r\n    type: \"booleanNode\",\r\n    position: { x: 0, y: 0 },\r\n    data: { sdf: \"sphere(1.0)\" },\r\n  },\r\n  {\r\n    id: \"node-1\",\r\n    type: \"primitiveNode\",\r\n    position: { x: 250, y: 0 },\r\n    data: { sdf: \"box(1.0, 1.0, 1.0)\" },\r\n  },\r\n  {\r\n    id: \"node-2\",\r\n    type: \"primitiveNode\",\r\n    position: { x: 250, y: -300 },\r\n    data: { sdf: \"\" },\r\n  },\r\n];\r\n\r\nconst initialEdges = [];\r\n\r\nconst nodeTypes = { primitiveNode: PrimitiveNode, booleanNode: BooleanNode };\r\n\r\nconst onInit = (reactFlowInstance) =>\r\n  console.log(\"flow loaded:\", reactFlowInstance);\r\n\r\nexport default function Graph() {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [id, setId] = React.useState(0);\r\n\r\n  const updateNodeSdf = (id, newSdf) => {\r\n    console.log(\"ACTUALIZADO SDF\");\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === id) {\r\n          node.data = {\r\n            ...node.data,\r\n            sdf: newSdf,\r\n          };\r\n        }\r\n\r\n        return node;\r\n      })\r\n    );\r\n  };\r\n\r\n  const connectSdf = (sourceId, targetId, params) => {\r\n    // console.log(nodes);\r\n    // const sourceNode = nodes.find(n => n.id===sourceId);\r\n    // const targetNode = nodes.find(n => n.id===targetId);\r\n    // setNodes((nds) =>\r\n    //   nds.map((node) => {\r\n    //     if (node.id === targetId) {\r\n    //       node.data = {\r\n    //         ...node.data,\r\n    //         sdfs: [...node.data.sdfs.concat(sourceNode.data.sdf)],\r\n    //       };\r\n    //     }\r\n    //     return node;\r\n    //   })\r\n    // );\r\n  };\r\n\r\n  const sharedFunctions = {\r\n    updateNodeSdf,\r\n    connectSdf,\r\n  };\r\n\r\n  const onConnect = useCallback((params) => {\r\n    const sourceNode = nodes.find((n) => n.id === params.source);\r\n\r\n    setEdges((eds) =>\r\n      addEdge(\r\n        {\r\n          ...params,\r\n          animated: true,\r\n          markerEnd: { type: MarkerType.Arrow, color: \"#000\" },\r\n          data: {},\r\n        },\r\n        eds\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"NUEVO EDGE:\");\r\n    console.log(edges);\r\n  }, [edges]);\r\n\r\n  const newPrimitiveNode = () => {\r\n    setId(id + 1);\r\n    return {\r\n      id: `node-${id}`,\r\n      type: \"primitiveNode\",\r\n      position: { x: 0, y: 0 },\r\n      data: {\r\n        sdf: \"sphere(p, 1.0)\",\r\n        onChangeSdf: updateNodeSdf,\r\n        onConnectHandle: connectSdf,\r\n      },\r\n    };\r\n  };\r\n\r\n  const newBooleanNode = () => {\r\n    setId(id + 1);\r\n    return {\r\n      id: `node-${id}`,\r\n      type: \"booleanNode\",\r\n      position: { x: 0, y: 0 },\r\n      data: {\r\n        sdfs: [],\r\n      },\r\n    };\r\n  };\r\n\r\n  const handleKey = (e) => {\r\n    // SPACE BAR\r\n    if (e.key === \"p\") {\r\n      const node = newPrimitiveNode();\r\n      nodes.push(node);\r\n\r\n      onNodesChange([node]); // Para actualizar\r\n    } else if (e.key === \"b\") {\r\n      const node = newBooleanNode();\r\n      nodes.push(node);\r\n\r\n      onNodesChange([node]); // Para actualizar\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }} tabIndex=\"0\" onKeyDown={handleKey}>\r\n      <CustomContext.Provider value={sharedFunctions}>\r\n        {nodes.length}\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          // onDisconnect={onDisconnect}\r\n\r\n          nodeTypes={nodeTypes}\r\n          onInit={onInit}\r\n          onEdgeClick={(ev, edge) =>\r\n            setEdges(edges.filter((e) => e.id != edge.id))\r\n          }\r\n          snapToGrid={true}\r\n          fitView\r\n        >\r\n          <Background color=\"#aaa\" gap={10} />\r\n        </ReactFlow>\r\n      </CustomContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}