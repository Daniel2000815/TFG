{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMsMixin = void 0;\n\nfunction CommonMsMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;\n\n      var attributes = _this.node.attributes;\n      var quotes = attributes.getList('lquote', 'rquote');\n\n      if (_this.variant !== 'monospace') {\n        if (!attributes.isSet('lquote') && quotes.lquote === '\"') quotes.lquote = \"\\u201C\";\n        if (!attributes.isSet('rquote') && quotes.rquote === '\"') quotes.rquote = \"\\u201D\";\n      }\n\n      _this.childNodes.unshift(_this.createText(quotes.lquote));\n\n      _this.childNodes.push(_this.createText(quotes.rquote));\n\n      return _this;\n    }\n\n    class_1.prototype.createText = function (text) {\n      var node = this.wrap(this.mmlText(text));\n      node.parent = this;\n      return node;\n    };\n\n    return class_1;\n  }(Base);\n}\n\nexports.CommonMsMixin = CommonMsMixin;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA,SAAgBA,aAAhB,CAA4DC,IAA5D,EAAmE;EAEjE;IAAqBC;;IAOnB;MAAY;;WAAA,yCAAc;QAAdC;;;MAAZ,wDACWA,IADX,GACe,KADf,MACe,IADf;;MAEE,IAAMC,UAAU,GAAGC,KAAI,CAACC,IAAL,CAAUF,UAA7B;MACA,IAAIG,MAAM,GAAGH,UAAU,CAACI,OAAX,CAAmB,QAAnB,EAA6B,QAA7B,CAAb;;MACA,IAAIH,KAAI,CAACI,OAAL,KAAiB,WAArB,EAAkC;QAChC,IAAI,CAACL,UAAU,CAACM,KAAX,CAAiB,QAAjB,CAAD,IAA+BH,MAAM,CAACI,MAAP,KAAkB,GAArD,EAA0DJ,MAAM,CAACI,MAAP,GAAgB,QAAhB;QAC1D,IAAI,CAACP,UAAU,CAACM,KAAX,CAAiB,QAAjB,CAAD,IAA+BH,MAAM,CAACK,MAAP,KAAkB,GAArD,EAA0DL,MAAM,CAACK,MAAP,GAAgB,QAAhB;MAC3D;;MACDP,KAAI,CAACQ,UAAL,CAAgBC,OAAhB,CAAwBT,KAAI,CAACU,UAAL,CAAgBR,MAAM,CAACI,MAAvB,CAAxB;;MACAN,KAAI,CAACQ,UAAL,CAAgBG,IAAhB,CAAqBX,KAAI,CAACU,UAAL,CAAgBR,MAAM,CAACK,MAAvB,CAArB;;;IACD;;IAQMK,+BAAP,UAAkBC,IAAlB,EAA8B;MAC5B,IAAMZ,IAAI,GAAG,KAAKa,IAAL,CAAU,KAAKC,OAAL,CAAaF,IAAb,CAAV,CAAb;MACAZ,IAAI,CAACe,MAAL,GAAc,IAAd;MACA,OAAOf,IAAP;IACD,CAJM;;IAKT;EAAC,CA9BD,CAAqBL,IAArB;AAgCD;;AAlCDqB","names":["CommonMsMixin","Base","__extends","args","attributes","_this","node","quotes","getList","variant","isSet","lquote","rquote","childNodes","unshift","createText","push","class_1","text","wrap","mmlText","parent","exports"],"sourceRoot":"","sources":["../../../../ts/output/common/Wrappers/ms.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}