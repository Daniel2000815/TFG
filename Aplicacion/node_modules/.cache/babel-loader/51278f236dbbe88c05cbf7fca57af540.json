{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMfencedMixin = void 0;\n\nfunction CommonMfencedMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;\n\n      _this.mrow = null;\n\n      _this.createMrow();\n\n      _this.addMrowChildren();\n\n      return _this;\n    }\n\n    class_1.prototype.createMrow = function () {\n      var mmlFactory = this.node.factory;\n      var mrow = mmlFactory.create('inferredMrow');\n      mrow.inheritAttributesFrom(this.node);\n      this.mrow = this.wrap(mrow);\n      this.mrow.parent = this;\n    };\n\n    class_1.prototype.addMrowChildren = function () {\n      var e_1, _a;\n\n      var mfenced = this.node;\n      var mrow = this.mrow;\n      this.addMo(mfenced.open);\n\n      if (this.childNodes.length) {\n        mrow.childNodes.push(this.childNodes[0]);\n      }\n\n      var i = 0;\n\n      try {\n        for (var _b = __values(this.childNodes.slice(1)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n          this.addMo(mfenced.separators[i++]);\n          mrow.childNodes.push(child);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      this.addMo(mfenced.close);\n      mrow.stretchChildren();\n    };\n\n    class_1.prototype.addMo = function (node) {\n      if (!node) return;\n      var mo = this.wrap(node);\n      this.mrow.childNodes.push(mo);\n      mo.parent = this.mrow;\n    };\n\n    class_1.prototype.computeBBox = function (bbox, recompute) {\n      if (recompute === void 0) {\n        recompute = false;\n      }\n\n      bbox.updateFrom(this.mrow.getOuterBBox());\n      this.setChildPWidths(recompute);\n    };\n\n    return class_1;\n  }(Base);\n}\n\nexports.CommonMfencedMixin = CommonMfencedMixin;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA,SAAgBA,kBAAhB,CAAiEC,IAAjE,EAAwE;EAEtE;IAAqBC;;IAWnB;MAAY;;WAAA,yCAAc;QAAdC;;;MAAZ,wDACWA,IADX,GACe,KADf,MACe,IADf;;MANOC,aAA2B,IAA3B;;MAQLA,KAAI,CAACC,UAAL;;MACAD,KAAI,CAACE,eAAL;;;IACD;;IAKMC,+BAAP;MACE,IAAMC,UAAU,GAAI,KAAKC,IAAL,CAA8BC,OAAlD;MACA,IAAMC,IAAI,GAAGH,UAAU,CAACI,MAAX,CAAkB,cAAlB,CAAb;MACAD,IAAI,CAACE,qBAAL,CAA2B,KAAKJ,IAAhC;MACA,KAAKE,IAAL,GAAY,KAAKG,IAAL,CAAUH,IAAV,CAAZ;MACA,KAAKA,IAAL,CAAUI,MAAV,GAAmB,IAAnB;IACD,CANM;;IAaAR,oCAAP;;;MACE,IAAMS,OAAO,GAAG,KAAKP,IAArB;MACA,IAAME,IAAI,GAAG,KAAKA,IAAlB;MACA,KAAKM,KAAL,CAAWD,OAAO,CAACE,IAAnB;;MACA,IAAI,KAAKC,UAAL,CAAgBC,MAApB,EAA4B;QAC1BT,IAAI,CAACQ,UAAL,CAAgBE,IAAhB,CAAqB,KAAKF,UAAL,CAAgB,CAAhB,CAArB;MACD;;MACD,IAAIG,CAAC,GAAG,CAAR;;;QACA,KAAoB,uBAAKH,UAAL,CAAgBI,KAAhB,CAAsB,CAAtB,IAAwBC,cAA5C,EAA4C,QAA5C,EAA4CA,cAA5C,EAA8C;UAAzC,IAAMC,KAAK,WAAX;UACH,KAAKR,KAAL,CAAWD,OAAO,CAACU,UAAR,CAAmBJ,CAAC,EAApB,CAAX;UACAX,IAAI,CAACQ,UAAL,CAAgBE,IAAhB,CAAqBI,KAArB;QACD;;;;;;;;;;;;;MACD,KAAKR,KAAL,CAAWD,OAAO,CAACW,KAAnB;MACAhB,IAAI,CAACiB,eAAL;IACD,CAdM;;IAqBArB,0BAAP,UAAaE,IAAb,EAA0B;MACxB,IAAI,CAACA,IAAL,EAAW;MACX,IAAMoB,EAAE,GAAG,KAAKf,IAAL,CAAUL,IAAV,CAAX;MACA,KAAKE,IAAL,CAAUQ,UAAV,CAAqBE,IAArB,CAA0BQ,EAA1B;MACAA,EAAE,CAACd,MAAH,GAAY,KAAKJ,IAAjB;IACD,CALM;;IAUAJ,gCAAP,UAAmBuB,IAAnB,EAA+BC,SAA/B,EAAyD;MAA1B;QAAAA;MAA0B;;MACvDD,IAAI,CAACE,UAAL,CAAgB,KAAKrB,IAAL,CAAUsB,YAAV,EAAhB;MACA,KAAKC,eAAL,CAAqBH,SAArB;IACD,CAHM;;IAKT;EAAC,CArED,CAAqB9B,IAArB;AAuED;;AAzEDkC","names":["CommonMfencedMixin","Base","__extends","args","_this","createMrow","addMrowChildren","class_1","mmlFactory","node","factory","mrow","create","inheritAttributesFrom","wrap","parent","mfenced","addMo","open","childNodes","length","push","i","slice","_c","child","separators","close","stretchChildren","mo","bbox","recompute","updateFrom","getOuterBBox","setChildPWidths","exports"],"sourceRoot":"","sources":["../../../../ts/output/common/Wrappers/mfenced.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}