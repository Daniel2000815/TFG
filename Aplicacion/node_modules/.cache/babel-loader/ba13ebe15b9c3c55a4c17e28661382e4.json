{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbstractEmptyNode = exports.AbstractNode = void 0;\n\nvar AbstractNode = function () {\n  function AbstractNode(factory, properties, children) {\n    var e_1, _a;\n\n    if (properties === void 0) {\n      properties = {};\n    }\n\n    if (children === void 0) {\n      children = [];\n    }\n\n    this.factory = factory;\n    this.parent = null;\n    this.properties = {};\n    this.childNodes = [];\n\n    try {\n      for (var _b = __values(Object.keys(properties)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var name_1 = _c.value;\n        this.setProperty(name_1, properties[name_1]);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    if (children.length) {\n      this.setChildren(children);\n    }\n  }\n\n  Object.defineProperty(AbstractNode.prototype, \"kind\", {\n    get: function get() {\n      return 'unknown';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  AbstractNode.prototype.setProperty = function (name, value) {\n    this.properties[name] = value;\n  };\n\n  AbstractNode.prototype.getProperty = function (name) {\n    return this.properties[name];\n  };\n\n  AbstractNode.prototype.getPropertyNames = function () {\n    return Object.keys(this.properties);\n  };\n\n  AbstractNode.prototype.getAllProperties = function () {\n    return this.properties;\n  };\n\n  AbstractNode.prototype.removeProperty = function () {\n    var e_2, _a;\n\n    var names = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      names[_i] = arguments[_i];\n    }\n\n    try {\n      for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {\n        var name_2 = names_1_1.value;\n        delete this.properties[name_2];\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  };\n\n  AbstractNode.prototype.isKind = function (kind) {\n    return this.factory.nodeIsKind(this, kind);\n  };\n\n  AbstractNode.prototype.setChildren = function (children) {\n    var e_3, _a;\n\n    this.childNodes = [];\n\n    try {\n      for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n        var child = children_1_1.value;\n        this.appendChild(child);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n\n  AbstractNode.prototype.appendChild = function (child) {\n    this.childNodes.push(child);\n    child.parent = this;\n    return child;\n  };\n\n  AbstractNode.prototype.replaceChild = function (newChild, oldChild) {\n    var i = this.childIndex(oldChild);\n\n    if (i !== null) {\n      this.childNodes[i] = newChild;\n      newChild.parent = this;\n      oldChild.parent = null;\n    }\n\n    return newChild;\n  };\n\n  AbstractNode.prototype.removeChild = function (child) {\n    var i = this.childIndex(child);\n\n    if (i !== null) {\n      this.childNodes.splice(i, 1);\n      child.parent = null;\n    }\n\n    return child;\n  };\n\n  AbstractNode.prototype.childIndex = function (node) {\n    var i = this.childNodes.indexOf(node);\n    return i === -1 ? null : i;\n  };\n\n  AbstractNode.prototype.copy = function () {\n    var e_4, _a;\n\n    var node = this.factory.create(this.kind);\n    node.properties = __assign({}, this.properties);\n\n    try {\n      for (var _b = __values(this.childNodes || []), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n\n        if (child) {\n          node.appendChild(child.copy());\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    return node;\n  };\n\n  AbstractNode.prototype.findNodes = function (kind) {\n    var nodes = [];\n    this.walkTree(function (node) {\n      if (node.isKind(kind)) {\n        nodes.push(node);\n      }\n    });\n    return nodes;\n  };\n\n  AbstractNode.prototype.walkTree = function (func, data) {\n    var e_5, _a;\n\n    func(this, data);\n\n    try {\n      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n\n        if (child) {\n          child.walkTree(func, data);\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    return data;\n  };\n\n  AbstractNode.prototype.toString = function () {\n    return this.kind + '(' + this.childNodes.join(',') + ')';\n  };\n\n  return AbstractNode;\n}();\n\nexports.AbstractNode = AbstractNode;\n\nvar AbstractEmptyNode = function (_super) {\n  __extends(AbstractEmptyNode, _super);\n\n  function AbstractEmptyNode() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AbstractEmptyNode.prototype.setChildren = function (_children) {};\n\n  AbstractEmptyNode.prototype.appendChild = function (child) {\n    return child;\n  };\n\n  AbstractEmptyNode.prototype.replaceChild = function (_newChild, oldChild) {\n    return oldChild;\n  };\n\n  AbstractEmptyNode.prototype.childIndex = function (_node) {\n    return null;\n  };\n\n  AbstractEmptyNode.prototype.walkTree = function (func, data) {\n    func(this, data);\n    return data;\n  };\n\n  AbstractEmptyNode.prototype.toString = function () {\n    return this.kind;\n  };\n\n  return AbstractEmptyNode;\n}(AbstractNode);\n\nexports.AbstractEmptyNode = AbstractEmptyNode;","map":{"version":3,"mappings":"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","names":["factory","properties","children","keys","_c","name_1","setProperty","length","setChildren","Object","AbstractNode","name","value","names","names_1_1","name_2","kind","nodeIsKind","childNodes","children_1_1","child","appendChild","push","parent","newChild","oldChild","i","childIndex","splice","node","indexOf","create","__assign","copy","nodes","walkTree","isKind","func","data","join","exports","__extends","AbstractEmptyNode","_children","_newChild","_node"],"sourceRoot":"","sources":["../../../ts/core/Tree/Node.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}