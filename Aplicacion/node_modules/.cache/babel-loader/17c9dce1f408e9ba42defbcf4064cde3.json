{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\ShaderNode.js\";\nimport React, { useState } from \"react\";\nimport { Handle } from \"react-flow-renderer\";\nimport { Button } from \"rsuite\";\nimport Shader from \"./Shader.js\";\nimport { fs } from \"./fragmentShader.js\";\nimport InputVector3 from \"./InputVector3.js\";\n\nfunction InputHandle() {\n  return /*#__PURE__*/React.createElement(Handle, {\n    type: \"target\",\n    position: \"left\",\n    id: \"a\",\n    className: \"custom-handle\",\n    isConnectable: true,\n    onConnect: function onConnect(params) {\n      return console.log('handle onConnect', params);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction OutputHandle() {\n  return /*#__PURE__*/React.createElement(Handle, {\n    type: \"source\",\n    position: \"right\",\n    id: \"a\",\n    className: \"custom-handle\",\n    isConnectable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }\n  });\n}\n\nexport default function ShaderNode(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState([1.0, 0.0, 0.0]),\n      _useState2 = _slicedToArray(_useState, 2),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-node\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-node-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Ejemplo:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputHandle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(OutputHandle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return setColor([Math.random(), Math.random(), Math.random()]);\n    },\n    appearance: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Change Color\"), /*#__PURE__*/React.createElement(Shader, {\n    shader: fs(),\n    uniforms: {\n      color: {\n        type: \"3fv\",\n        value: color\n      }\n    },\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InputVector3, {\n    onChange: function onChange(x, y, z) {\n      return console.log(\"NUEVOS VALORES: \" + x + \", \" + y + \", \" + z);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    appearance: \"primary\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"a\"));\n}","map":{"version":3,"names":["React","useState","Handle","Button","Shader","fs","InputVector3","InputHandle","params","console","log","OutputHandle","ShaderNode","data","color","setColor","Math","random","type","value","margin","x","y","z"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/ShaderNode.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {Handle} from \"react-flow-renderer\";\r\nimport { Button } from \"rsuite\";\r\nimport Shader from \"./Shader.js\";\r\nimport { fs } from \"./fragmentShader.js\";\r\nimport InputVector3 from \"./InputVector3.js\";\r\n\r\nfunction InputHandle(){\r\n   return ( \r\n    <Handle\r\n        type=\"target\"\r\n        position=\"left\"\r\n        id=\"a\"\r\n        className=\"custom-handle\"\r\n        isConnectable={true}\r\n        onConnect={(params) => console.log('handle onConnect', params)}\r\n    />\r\n   );\r\n}\r\n\r\nfunction OutputHandle(){\r\n    return ( \r\n     <Handle\r\n         type=\"source\"\r\n         position=\"right\"\r\n         id=\"a\"\r\n         className=\"custom-handle\"\r\n         isConnectable={true}\r\n     />\r\n    );\r\n}\r\n\r\nexport default function ShaderNode({ data }) {\r\n    const [color, setColor] = useState([1.0, 0.0, 0.0]);\r\n  \r\n    return (\r\n      <div className=\"custom-node\">\r\n        <div className=\"custom-node-header\">Ejemplo:</div>\r\n        <div>\r\n          <InputHandle/>\r\n        </div>\r\n        <div>\r\n          <OutputHandle/>\r\n        </div>\r\n        <Button\r\n          onClick={() => setColor([Math.random(), Math.random(), Math.random()])}\r\n          appearance=\"primary\"\r\n        >\r\n          Change Color\r\n        </Button>\r\n        <Shader\r\n          shader={fs()}\r\n          uniforms={{ color: { type: \"3fv\", value: color } }}\r\n          style={{ margin: \"10px\" }}\r\n        />\r\n          <InputVector3 onChange={(x,y,z) => console.log(\"NUEVOS VALORES: \" + x + \", \" + y + \", \" + z)}/>\r\n          <Button appearance=\"primary\" block>\r\n            a\r\n          </Button>\r\n      </div>\r\n    );\r\n  }"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,MAAR,QAAqB,qBAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,EAAT,QAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,SAASC,WAAT,GAAsB;EACnB,oBACC,oBAAC,MAAD;IACI,IAAI,EAAC,QADT;IAEI,QAAQ,EAAC,MAFb;IAGI,EAAE,EAAC,GAHP;IAII,SAAS,EAAC,eAJd;IAKI,aAAa,EAAE,IALnB;IAMI,SAAS,EAAE,mBAACC,MAAD;MAAA,OAAYC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,MAAhC,CAAZ;IAAA,CANf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADD;AAUF;;AAED,SAASG,YAAT,GAAuB;EACnB,oBACC,oBAAC,MAAD;IACI,IAAI,EAAC,QADT;IAEI,QAAQ,EAAC,OAFb;IAGI,EAAE,EAAC,GAHP;IAII,SAAS,EAAC,eAJd;IAKI,aAAa,EAAE,IALnB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADD;AASH;;AAED,eAAe,SAASC,UAAT,OAA8B;EAAA,IAARC,IAAQ,QAARA,IAAQ;;EACzC,gBAA0BZ,QAAQ,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAD,CAAlC;EAAA;EAAA,IAAOa,KAAP;EAAA,IAAcC,QAAd;;EAEA,oBACE;IAAK,SAAS,EAAC,aAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,oBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cADF,eAEE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,WAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAFF,eAKE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,YAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CALF,eAQE,oBAAC,MAAD;IACE,OAAO,EAAE;MAAA,OAAMA,QAAQ,CAAC,CAACC,IAAI,CAACC,MAAL,EAAD,EAAgBD,IAAI,CAACC,MAAL,EAAhB,EAA+BD,IAAI,CAACC,MAAL,EAA/B,CAAD,CAAd;IAAA,CADX;IAEE,UAAU,EAAC,SAFb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBARF,eAcE,oBAAC,MAAD;IACE,MAAM,EAAEZ,EAAE,EADZ;IAEE,QAAQ,EAAE;MAAES,KAAK,EAAE;QAAEI,IAAI,EAAE,KAAR;QAAeC,KAAK,EAAEL;MAAtB;IAAT,CAFZ;IAGE,KAAK,EAAE;MAAEM,MAAM,EAAE;IAAV,CAHT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAdF,eAmBI,oBAAC,YAAD;IAAc,QAAQ,EAAE,kBAACC,CAAD,EAAGC,CAAH,EAAKC,CAAL;MAAA,OAAWd,OAAO,CAACC,GAAR,CAAY,qBAAqBW,CAArB,GAAyB,IAAzB,GAAgCC,CAAhC,GAAoC,IAApC,GAA2CC,CAAvD,CAAX;IAAA,CAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAnBJ,eAoBI,oBAAC,MAAD;IAAQ,UAAU,EAAC,SAAnB;IAA6B,KAAK,MAAlC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OApBJ,CADF;AA0BD"},"metadata":{},"sourceType":"module"}