{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nimport { createMatAlgo12xSfs } from '../../type/matrix/utils/matAlgo12xSfs.js';\nimport { createMatAlgo14xDs } from '../../type/matrix/utils/matAlgo14xDs.js';\nvar name = 'fix';\nvar dependencies = ['typed', 'Complex', 'matrix', 'ceil', 'floor', 'equalScalar', 'zeros', 'DenseMatrix'];\nexport var createFixNumber = /* #__PURE__ */factory(name, ['typed', 'ceil', 'floor'], function (_ref) {\n  var typed = _ref.typed,\n      ceil = _ref.ceil,\n      floor = _ref.floor;\n  return typed(name, {\n    number: function number(x) {\n      return x > 0 ? floor(x) : ceil(x);\n    },\n    'number, number': function numberNumber(x, n) {\n      return x > 0 ? floor(x, n) : ceil(x, n);\n    }\n  });\n});\nexport var createFix = /* #__PURE__ */factory(name, dependencies, function (_ref2) {\n  var typed = _ref2.typed,\n      _Complex = _ref2.Complex,\n      matrix = _ref2.matrix,\n      ceil = _ref2.ceil,\n      floor = _ref2.floor,\n      equalScalar = _ref2.equalScalar,\n      zeros = _ref2.zeros,\n      DenseMatrix = _ref2.DenseMatrix;\n  var matAlgo12xSfs = createMatAlgo12xSfs({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var matAlgo14xDs = createMatAlgo14xDs({\n    typed: typed\n  });\n  var fixNumber = createFixNumber({\n    typed: typed,\n    ceil: ceil,\n    floor: floor\n  });\n  /**\r\n   * Round a value towards zero.\r\n   * For matrices, the function is evaluated element wise.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.fix(x)\r\n   *    math.fix(x,n)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.fix(3.2)                // returns number 3\r\n   *    math.fix(3.8)                // returns number 3\r\n   *    math.fix(-4.2)               // returns number -4\r\n   *    math.fix(-4.7)               // returns number -4\r\n   *\r\n   *    math.fix(3.12, 1)                // returns number 3.1\r\n   *    math.fix(3.18, 1)                // returns number 3.1\r\n   *    math.fix(-4.12, 1)               // returns number -4.1\r\n   *    math.fix(-4.17, 1)               // returns number -4.1\r\n   *\r\n   *    const c = math.complex(3.22, -2.78)\r\n   *    math.fix(c)                  // returns Complex 3 - 2i\r\n   *    math.fix(c, 1)               // returns Complex 3.2 -2.7i\r\n   *\r\n   *    math.fix([3.2, 3.8, -4.7])      // returns Array [3, 3, -4]\r\n   *    math.fix([3.2, 3.8, -4.7], 1)   // returns Array [3.2, 3.8, -4.7]\r\n   *\r\n   * See also:\r\n   *\r\n   *    ceil, floor, round\r\n   *\r\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x    Number to be rounded\r\n   * @param  {number | BigNumber | Array} [n=0]                             Number of decimals\r\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix}     Rounded value\r\n   */\n\n  return typed('fix', {\n    number: fixNumber.signatures.number,\n    'number, number | BigNumber': fixNumber.signatures['number,number'],\n    Complex: function Complex(x) {\n      return new _Complex(x.re > 0 ? Math.floor(x.re) : Math.ceil(x.re), x.im > 0 ? Math.floor(x.im) : Math.ceil(x.im));\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    'Complex, BigNumber': function ComplexBigNumber(x, bn) {\n      var n = bn.toNumber();\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    BigNumber: function BigNumber(x) {\n      return x.isNegative() ? ceil(x) : floor(x);\n    },\n    'BigNumber, number | BigNumber': function BigNumberNumberBigNumber(x, n) {\n      return x.isNegative() ? ceil(x, n) : floor(x, n);\n    },\n    Fraction: function Fraction(x) {\n      return x.s < 0 ? x.ceil() : x.floor();\n    },\n    'Fraction, number | BigNumber': function FractionNumberBigNumber(x, n) {\n      return x.s < 0 ? ceil(x, n) : floor(x, n);\n    },\n    'Array | Matrix': typed.referToSelf(function (self) {\n      return function (x) {\n        // deep map collection, skip zeros since fix(0) = 0\n        return deepMap(x, self, true);\n      };\n    }),\n    'Array | Matrix, number | BigNumber': typed.referToSelf(function (self) {\n      return function (x, n) {\n        // deep map collection, skip zeros since fix(0) = 0\n        return deepMap(x, function (i) {\n          return self(i, n);\n        }, true);\n      };\n    }),\n    'number | Complex | Fraction | BigNumber, Array': typed.referToSelf(function (self) {\n      return function (x, y) {\n        // use matrix implementation\n        return matAlgo14xDs(matrix(y), x, self, true).valueOf();\n      };\n    }),\n    'number | Complex | Fraction | BigNumber, Matrix': typed.referToSelf(function (self) {\n      return function (x, y) {\n        if (equalScalar(x, 0)) return zeros(y.size(), y.storage());\n\n        if (y.storage() === 'dense') {\n          return matAlgo14xDs(y, x, self, true);\n        }\n\n        return matAlgo12xSfs(y, x, self, true);\n      };\n    })\n  });\n});","map":{"version":3,"names":["factory","deepMap","createMatAlgo12xSfs","createMatAlgo14xDs","name","dependencies","createFixNumber","_ref","typed","ceil","floor","number","x","numberNumber","n","createFix","_ref2","_Complex","Complex","matrix","equalScalar","zeros","DenseMatrix","matAlgo12xSfs","matAlgo14xDs","fixNumber","signatures","re","Math","im","ComplexNumber","ComplexBigNumber","bn","toNumber","BigNumber","isNegative","BigNumberNumberBigNumber","Fraction","s","FractionNumberBigNumber","referToSelf","self","i","y","valueOf","size","storage"],"sources":["C:/Users/daniz/TFG/Aplicacion/node_modules/mathjs/lib/esm/function/arithmetic/fix.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\r\nimport { deepMap } from '../../utils/collection.js';\r\nimport { createMatAlgo12xSfs } from '../../type/matrix/utils/matAlgo12xSfs.js';\r\nimport { createMatAlgo14xDs } from '../../type/matrix/utils/matAlgo14xDs.js';\r\nvar name = 'fix';\r\nvar dependencies = ['typed', 'Complex', 'matrix', 'ceil', 'floor', 'equalScalar', 'zeros', 'DenseMatrix'];\r\nexport var createFixNumber = /* #__PURE__ */factory(name, ['typed', 'ceil', 'floor'], _ref => {\r\n  var {\r\n    typed,\r\n    ceil,\r\n    floor\r\n  } = _ref;\r\n  return typed(name, {\r\n    number: function number(x) {\r\n      return x > 0 ? floor(x) : ceil(x);\r\n    },\r\n    'number, number': function numberNumber(x, n) {\r\n      return x > 0 ? floor(x, n) : ceil(x, n);\r\n    }\r\n  });\r\n});\r\nexport var createFix = /* #__PURE__ */factory(name, dependencies, _ref2 => {\r\n  var {\r\n    typed,\r\n    Complex: _Complex,\r\n    matrix,\r\n    ceil,\r\n    floor,\r\n    equalScalar,\r\n    zeros,\r\n    DenseMatrix\r\n  } = _ref2;\r\n  var matAlgo12xSfs = createMatAlgo12xSfs({\r\n    typed,\r\n    DenseMatrix\r\n  });\r\n  var matAlgo14xDs = createMatAlgo14xDs({\r\n    typed\r\n  });\r\n  var fixNumber = createFixNumber({\r\n    typed,\r\n    ceil,\r\n    floor\r\n  });\r\n  /**\r\n   * Round a value towards zero.\r\n   * For matrices, the function is evaluated element wise.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.fix(x)\r\n   *    math.fix(x,n)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.fix(3.2)                // returns number 3\r\n   *    math.fix(3.8)                // returns number 3\r\n   *    math.fix(-4.2)               // returns number -4\r\n   *    math.fix(-4.7)               // returns number -4\r\n   *\r\n   *    math.fix(3.12, 1)                // returns number 3.1\r\n   *    math.fix(3.18, 1)                // returns number 3.1\r\n   *    math.fix(-4.12, 1)               // returns number -4.1\r\n   *    math.fix(-4.17, 1)               // returns number -4.1\r\n   *\r\n   *    const c = math.complex(3.22, -2.78)\r\n   *    math.fix(c)                  // returns Complex 3 - 2i\r\n   *    math.fix(c, 1)               // returns Complex 3.2 -2.7i\r\n   *\r\n   *    math.fix([3.2, 3.8, -4.7])      // returns Array [3, 3, -4]\r\n   *    math.fix([3.2, 3.8, -4.7], 1)   // returns Array [3.2, 3.8, -4.7]\r\n   *\r\n   * See also:\r\n   *\r\n   *    ceil, floor, round\r\n   *\r\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x    Number to be rounded\r\n   * @param  {number | BigNumber | Array} [n=0]                             Number of decimals\r\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix}     Rounded value\r\n   */\r\n\r\n  return typed('fix', {\r\n    number: fixNumber.signatures.number,\r\n    'number, number | BigNumber': fixNumber.signatures['number,number'],\r\n    Complex: function Complex(x) {\r\n      return new _Complex(x.re > 0 ? Math.floor(x.re) : Math.ceil(x.re), x.im > 0 ? Math.floor(x.im) : Math.ceil(x.im));\r\n    },\r\n    'Complex, number': function ComplexNumber(x, n) {\r\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\r\n    },\r\n    'Complex, BigNumber': function ComplexBigNumber(x, bn) {\r\n      var n = bn.toNumber();\r\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\r\n    },\r\n    BigNumber: function BigNumber(x) {\r\n      return x.isNegative() ? ceil(x) : floor(x);\r\n    },\r\n    'BigNumber, number | BigNumber': function BigNumberNumberBigNumber(x, n) {\r\n      return x.isNegative() ? ceil(x, n) : floor(x, n);\r\n    },\r\n    Fraction: function Fraction(x) {\r\n      return x.s < 0 ? x.ceil() : x.floor();\r\n    },\r\n    'Fraction, number | BigNumber': function FractionNumberBigNumber(x, n) {\r\n      return x.s < 0 ? ceil(x, n) : floor(x, n);\r\n    },\r\n    'Array | Matrix': typed.referToSelf(self => x => {\r\n      // deep map collection, skip zeros since fix(0) = 0\r\n      return deepMap(x, self, true);\r\n    }),\r\n    'Array | Matrix, number | BigNumber': typed.referToSelf(self => (x, n) => {\r\n      // deep map collection, skip zeros since fix(0) = 0\r\n      return deepMap(x, i => self(i, n), true);\r\n    }),\r\n    'number | Complex | Fraction | BigNumber, Array': typed.referToSelf(self => (x, y) => {\r\n      // use matrix implementation\r\n      return matAlgo14xDs(matrix(y), x, self, true).valueOf();\r\n    }),\r\n    'number | Complex | Fraction | BigNumber, Matrix': typed.referToSelf(self => (x, y) => {\r\n      if (equalScalar(x, 0)) return zeros(y.size(), y.storage());\r\n\r\n      if (y.storage() === 'dense') {\r\n        return matAlgo14xDs(y, x, self, true);\r\n      }\r\n\r\n      return matAlgo12xSfs(y, x, self, true);\r\n    })\r\n  });\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}