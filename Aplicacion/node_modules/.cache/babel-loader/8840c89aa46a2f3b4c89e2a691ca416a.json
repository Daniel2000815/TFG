{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.factorial = void 0;\n\nvar Vector_1 = require(\"../../../Types/Vector\");\n\nvar Matrix_1 = require(\"../../../Types/Matrix\");\n\nvar Settings_1 = require(\"../../../Settings\");\n\nvar Utils_1 = require(\"../../../Core/Utils\");\n\nvar Math2_1 = require(\"../../Math2\");\n\nvar Frac_1 = require(\"../../../Types/Frac\");\n\nvar add_1 = require(\"../operations/add\");\n\nvar Symbol_1 = require(\"../../../Types/Symbol\");\n\nvar index_1 = require(\"../index\");\n\nvar Parser_1 = require(\"../../../Parser/Parser\");\n/**\n * The factorial function\n * @param {Symbol} symbol\n * @return {Symbol}\n */\n\n\nfunction factorial(symbol) {\n  var retval;\n\n  if ((0, Utils_1.isVector)(symbol)) {\n    var V = new Vector_1.Vector();\n    symbol.each(function (x, i) {\n      //i start at one.\n      V.set(i - 1, factorial(x));\n    });\n    return V;\n  }\n\n  if ((0, Utils_1.isMatrix)(symbol)) {\n    var M = new Matrix_1.Matrix();\n    symbol.each(function (x, i, j) {\n      //i start at one.\n      M.set(i, j, factorial(x));\n    });\n    return M;\n  }\n\n  if (Settings_1.Settings.PARSE2NUMBER && symbol.isConstant()) {\n    if ((0, Utils_1.isInt)(symbol)) {\n      retval = Math2_1.Math2.bigfactorial(symbol);\n    } else {\n      retval = Math2_1.Math2.gamma(symbol.multiplier.add(new Frac_1.Frac(1)).toDecimal());\n    }\n\n    retval = (0, Symbol_1.bigConvert)(retval);\n    return retval;\n  } else if (symbol.isConstant()) {\n    var den = symbol.getDenom();\n\n    if (den.equals(2)) {\n      var num = symbol.getNum();\n      var a, b, c, n;\n\n      if (!symbol.multiplier.isNegative()) {\n        n = (0, add_1.add)(num, new Symbol_1.Symbol(1)).multiplier.divide(new Frac_1.Frac(2));\n        a = Math2_1.Math2.bigfactorial(new Frac_1.Frac(2).multiply(n));\n        b = (0, index_1.pow)(new Symbol_1.Symbol(4), new Symbol_1.Symbol(n)).multiplier.multiply(Math2_1.Math2.bigfactorial(n));\n      } else {\n        n = (0, index_1.subtract)(num.negate(), new Symbol_1.Symbol(1)).multiplier.divide(new Frac_1.Frac(2));\n        a = (0, index_1.pow)(new Symbol_1.Symbol(-4), new Symbol_1.Symbol(n)).multiplier.multiply(Math2_1.Math2.bigfactorial(n));\n        b = Math2_1.Math2.bigfactorial(new Frac_1.Frac(2).multiply(n));\n      }\n\n      c = a.divide(b);\n      return (0, index_1.multiply)((0, Parser_1.parse)('sqrt(pi)'), new Symbol_1.Symbol(c));\n    }\n  }\n\n  return (0, Symbol_1.symfunction)(Settings_1.Settings.FACTORIAL, [symbol]);\n}\n\nexports.factorial = factorial;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;AAEA;;;;;;;AAKA,SAAgBA,SAAhB,CAA0BC,MAA1B,EAAgC;EAC5B,IAAIC,MAAJ;;EACA,IAAI,sBAASD,MAAT,CAAJ,EAAsB;IAClB,IAAIE,CAAC,GAAG,IAAIC,eAAJ,EAAR;IACAH,MAAM,CAACI,IAAP,CAAY,UAAUC,CAAV,EAAaC,CAAb,EAAc;MACtB;MACAJ,CAAC,CAACK,GAAF,CAAMD,CAAC,GAAG,CAAV,EAAaP,SAAS,CAACM,CAAD,CAAtB;IACH,CAHD;IAIA,OAAOH,CAAP;EACH;;EACD,IAAI,sBAASF,MAAT,CAAJ,EAAsB;IAClB,IAAIQ,CAAC,GAAG,IAAIC,eAAJ,EAAR;IACAT,MAAM,CAACI,IAAP,CAAY,UAAUC,CAAV,EAAaC,CAAb,EAAgBI,CAAhB,EAAiB;MACzB;MACAF,CAAC,CAACD,GAAF,CAAMD,CAAN,EAASI,CAAT,EAAYX,SAAS,CAACM,CAAD,CAArB;IACH,CAHD;IAIA,OAAOG,CAAP;EACH;;EACD,IAAIG,oBAASC,YAAT,IAAyBZ,MAAM,CAACa,UAAP,EAA7B,EAAkD;IAC9C,IAAI,mBAAMb,MAAN,CAAJ,EAAmB;MACfC,MAAM,GAAGa,cAAMC,YAAN,CAAmBf,MAAnB,CAAT;IACH,CAFD,MAGK;MACDC,MAAM,GAAGa,cAAME,KAAN,CAAYhB,MAAM,CAACiB,UAAP,CAAkBC,GAAlB,CAAsB,IAAIC,WAAJ,CAAS,CAAT,CAAtB,EAAmCC,SAAnC,EAAZ,CAAT;IACH;;IAEDnB,MAAM,GAAG,yBAAWA,MAAX,CAAT;IACA,OAAOA,MAAP;EACH,CAVD,MAWK,IAAID,MAAM,CAACa,UAAP,EAAJ,EAAyB;IAC1B,IAAIQ,GAAG,GAAGrB,MAAM,CAACsB,QAAP,EAAV;;IACA,IAAID,GAAG,CAACE,MAAJ,CAAW,CAAX,CAAJ,EAAmB;MACf,IAAIC,GAAG,GAAGxB,MAAM,CAACyB,MAAP,EAAV;MACA,IAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaC,CAAb;;MAEA,IAAI,CAAC7B,MAAM,CAACiB,UAAP,CAAkBa,UAAlB,EAAL,EAAqC;QACjCD,CAAC,GAAG,eAAIL,GAAJ,EAAS,IAAIO,eAAJ,CAAW,CAAX,CAAT,EAAwBd,UAAxB,CAAmCe,MAAnC,CAA0C,IAAIb,WAAJ,CAAS,CAAT,CAA1C,CAAJ;QACAO,CAAC,GAAGZ,cAAMC,YAAN,CAAmB,IAAII,WAAJ,CAAS,CAAT,EAAYc,QAAZ,CAAqBJ,CAArB,CAAnB,CAAJ;QACAF,CAAC,GAAG,iBAAI,IAAII,eAAJ,CAAW,CAAX,CAAJ,EAAmB,IAAIA,eAAJ,CAAWF,CAAX,CAAnB,EAAkCZ,UAAlC,CAA6CgB,QAA7C,CAAsDnB,cAAMC,YAAN,CAAmBc,CAAnB,CAAtD,CAAJ;MACH,CAJD,MAKK;QACDA,CAAC,GAAG,sBAASL,GAAG,CAACU,MAAJ,EAAT,EAAuB,IAAIH,eAAJ,CAAW,CAAX,CAAvB,EAAsCd,UAAtC,CAAiDe,MAAjD,CAAwD,IAAIb,WAAJ,CAAS,CAAT,CAAxD,CAAJ;QACAO,CAAC,GAAG,iBAAI,IAAIK,eAAJ,CAAW,CAAC,CAAZ,CAAJ,EAAoB,IAAIA,eAAJ,CAAWF,CAAX,CAApB,EAAmCZ,UAAnC,CAA8CgB,QAA9C,CAAuDnB,cAAMC,YAAN,CAAmBc,CAAnB,CAAvD,CAAJ;QACAF,CAAC,GAAGb,cAAMC,YAAN,CAAmB,IAAII,WAAJ,CAAS,CAAT,EAAYc,QAAZ,CAAqBJ,CAArB,CAAnB,CAAJ;MACH;;MACDD,CAAC,GAAGF,CAAC,CAACM,MAAF,CAASL,CAAT,CAAJ;MACA,OAAO,sBAAS,oBAAM,UAAN,CAAT,EAA4B,IAAII,eAAJ,CAAWH,CAAX,CAA5B,CAAP;IACH;EACJ;;EACD,OAAO,0BAAYjB,oBAASwB,SAArB,EAAgC,CAACnC,MAAD,CAAhC,CAAP;AACH;;AAlDDoC","names":["factorial","symbol","retval","V","Vector_1","each","x","i","set","M","Matrix_1","j","Settings_1","PARSE2NUMBER","isConstant","Math2_1","bigfactorial","gamma","multiplier","add","Frac_1","toDecimal","den","getDenom","equals","num","getNum","a","b","c","n","isNegative","Symbol_1","divide","multiply","negate","FACTORIAL","exports"],"sourceRoot":"","sources":["../../../../src/Functions/Core/math/factorial.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}