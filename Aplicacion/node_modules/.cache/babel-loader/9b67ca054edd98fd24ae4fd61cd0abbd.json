{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TeXFont = void 0;\n\nvar FontData_js_1 = require(\"../FontData.js\");\n\nvar tex_js_1 = require(\"../../common/fonts/tex.js\");\n\nvar bold_italic_js_1 = require(\"./tex/bold-italic.js\");\n\nvar bold_js_1 = require(\"./tex/bold.js\");\n\nvar double_struck_js_1 = require(\"./tex/double-struck.js\");\n\nvar fraktur_bold_js_1 = require(\"./tex/fraktur-bold.js\");\n\nvar fraktur_js_1 = require(\"./tex/fraktur.js\");\n\nvar italic_js_1 = require(\"./tex/italic.js\");\n\nvar largeop_js_1 = require(\"./tex/largeop.js\");\n\nvar monospace_js_1 = require(\"./tex/monospace.js\");\n\nvar normal_js_1 = require(\"./tex/normal.js\");\n\nvar sans_serif_bold_italic_js_1 = require(\"./tex/sans-serif-bold-italic.js\");\n\nvar sans_serif_bold_js_1 = require(\"./tex/sans-serif-bold.js\");\n\nvar sans_serif_italic_js_1 = require(\"./tex/sans-serif-italic.js\");\n\nvar sans_serif_js_1 = require(\"./tex/sans-serif.js\");\n\nvar script_bold_js_1 = require(\"./tex/script-bold.js\");\n\nvar script_js_1 = require(\"./tex/script.js\");\n\nvar smallop_js_1 = require(\"./tex/smallop.js\");\n\nvar tex_calligraphic_bold_js_1 = require(\"./tex/tex-calligraphic-bold.js\");\n\nvar tex_calligraphic_js_1 = require(\"./tex/tex-calligraphic.js\");\n\nvar tex_mathit_js_1 = require(\"./tex/tex-mathit.js\");\n\nvar tex_oldstyle_bold_js_1 = require(\"./tex/tex-oldstyle-bold.js\");\n\nvar tex_oldstyle_js_1 = require(\"./tex/tex-oldstyle.js\");\n\nvar tex_size3_js_1 = require(\"./tex/tex-size3.js\");\n\nvar tex_size4_js_1 = require(\"./tex/tex-size4.js\");\n\nvar tex_variant_js_1 = require(\"./tex/tex-variant.js\");\n\nvar delimiters_js_1 = require(\"../../common/fonts/tex/delimiters.js\");\n\nvar TeXFont = function (_super) {\n  __extends(TeXFont, _super);\n\n  function TeXFont(options) {\n    var e_1, _a;\n\n    if (options === void 0) {\n      options = null;\n    }\n\n    var _this = _super.call(this, options) || this;\n\n    var CLASS = _this.constructor;\n\n    try {\n      for (var _b = __values(Object.keys(CLASS.variantCacheIds)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var variant = _c.value;\n        _this.variant[variant].cacheID = 'TEX-' + CLASS.variantCacheIds[variant];\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return _this;\n  }\n\n  TeXFont.defaultDelimiters = delimiters_js_1.delimiters;\n  TeXFont.defaultChars = {\n    'normal': normal_js_1.normal,\n    'bold': bold_js_1.bold,\n    'italic': italic_js_1.italic,\n    'bold-italic': bold_italic_js_1.boldItalic,\n    'double-struck': double_struck_js_1.doubleStruck,\n    'fraktur': fraktur_js_1.fraktur,\n    'bold-fraktur': fraktur_bold_js_1.frakturBold,\n    'script': script_js_1.script,\n    'bold-script': script_bold_js_1.scriptBold,\n    'sans-serif': sans_serif_js_1.sansSerif,\n    'bold-sans-serif': sans_serif_bold_js_1.sansSerifBold,\n    'sans-serif-italic': sans_serif_italic_js_1.sansSerifItalic,\n    'sans-serif-bold-italic': sans_serif_bold_italic_js_1.sansSerifBoldItalic,\n    'monospace': monospace_js_1.monospace,\n    '-smallop': smallop_js_1.smallop,\n    '-largeop': largeop_js_1.largeop,\n    '-size3': tex_size3_js_1.texSize3,\n    '-size4': tex_size4_js_1.texSize4,\n    '-tex-calligraphic': tex_calligraphic_js_1.texCalligraphic,\n    '-tex-bold-calligraphic': tex_calligraphic_bold_js_1.texCalligraphicBold,\n    '-tex-mathit': tex_mathit_js_1.texMathit,\n    '-tex-oldstyle': tex_oldstyle_js_1.texOldstyle,\n    '-tex-bold-oldstyle': tex_oldstyle_bold_js_1.texOldstyleBold,\n    '-tex-variant': tex_variant_js_1.texVariant\n  };\n  TeXFont.variantCacheIds = {\n    'normal': 'N',\n    'bold': 'B',\n    'italic': 'I',\n    'bold-italic': 'BI',\n    'double-struck': 'D',\n    'fraktur': 'F',\n    'bold-fraktur': 'BF',\n    'script': 'S',\n    'bold-script': 'BS',\n    'sans-serif': 'SS',\n    'bold-sans-serif': 'BSS',\n    'sans-serif-italic': 'SSI',\n    'sans-serif-bold-italic': 'SSBI',\n    'monospace': 'M',\n    '-smallop': 'SO',\n    '-largeop': 'LO',\n    '-size3': 'S3',\n    '-size4': 'S4',\n    '-tex-calligraphic': 'C',\n    '-tex-bold-calligraphic': 'BC',\n    '-tex-mathit': 'MI',\n    '-tex-oldstyle': 'OS',\n    '-tex-bold-oldstyle': 'BOS',\n    '-tex-variant': 'V'\n  };\n  return TeXFont;\n}((0, tex_js_1.CommonTeXFontMixin)(FontData_js_1.SVGFontData));\n\nexports.TeXFont = TeXFont;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AAEA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAMA;EACAA;;EAsEE,iBAAYC,OAAZ,EAAsC;;;IAA1B;MAAAA;IAA0B;;IAAtC,YACEC,kBAAMD,OAAN,KAAc,IADhB;;IAKE,IAAME,KAAK,GAAGC,KAAI,CAACC,WAAnB;;;MACA,KAAsB,wBAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,eAAlB,IAAkCC,cAAxD,EAAwD,QAAxD,EAAwDA,cAAxD,EAA0D;QAArD,IAAMC,OAAO,WAAb;QACHL,KAAI,CAACK,OAAL,CAAaA,OAAb,EAAsBC,OAAtB,GAAgC,SAASP,KAAK,CAACI,eAAN,CAAsBE,OAAtB,CAAzC;MACD;;;;;;;;;;;;;;EACF;;EA1EgBE,4BAAoDC,0BAApD;EAKAD,uBAA2C;IAC1D,UAAUE,kBADgD;IAE1D,QAAQC,cAFkD;IAG1D,UAAUC,kBAHgD;IAI1D,eAAeC,2BAJ2C;IAK1D,iBAAiBC,+BALyC;IAM1D,WAAWC,oBAN+C;IAO1D,gBAAgBC,6BAP0C;IAQ1D,UAAUC,kBARgD;IAS1D,eAAeC,2BAT2C;IAU1D,cAAcC,yBAV4C;IAW1D,mBAAmBC,kCAXuC;IAY1D,qBAAqBC,sCAZqC;IAa1D,0BAA0BC,+CAbgC;IAc1D,aAAaC,wBAd6C;IAe1D,YAAYC,oBAf8C;IAgB1D,YAAYC,oBAhB8C;IAiB1D,UAAUC,uBAjBgD;IAkB1D,UAAUC,uBAlBgD;IAmB1D,qBAAqBC,qCAnBqC;IAoB1D,0BAA0BC,8CApBgC;IAqB1D,eAAeC,yBArB2C;IAsB1D,iBAAiBC,6BAtByC;IAuB1D,sBAAsBC,sCAvBoC;IAwB1D,gBAAgBC;EAxB0C,CAA3C;EA8BAzB,0BAA4C;IAC3D,UAAU,GADiD;IAE3D,QAAQ,GAFmD;IAG3D,UAAU,GAHiD;IAI3D,eAAe,IAJ4C;IAK3D,iBAAiB,GAL0C;IAM3D,WAAW,GANgD;IAO3D,gBAAgB,IAP2C;IAQ3D,UAAU,GARiD;IAS3D,eAAe,IAT4C;IAU3D,cAAc,IAV6C;IAW3D,mBAAmB,KAXwC;IAY3D,qBAAqB,KAZsC;IAa3D,0BAA0B,MAbiC;IAc3D,aAAa,GAd8C;IAe3D,YAAY,IAf+C;IAgB3D,YAAY,IAhB+C;IAiB3D,UAAU,IAjBiD;IAkB3D,UAAU,IAlBiD;IAmB3D,qBAAqB,GAnBsC;IAoB3D,0BAA0B,IApBiC;IAqB3D,eAAe,IArB4C;IAsB3D,iBAAiB,IAtB0C;IAuB3D,sBAAsB,KAvBqC;IAwB3D,gBAAgB;EAxB2C,CAA5C;EAyCnB;AAAC,CAlFD,CACA,iCAAuF0B,yBAAvF,CADA;;AAAaC","names":["__extends","options","_super","CLASS","_this","constructor","keys","variantCacheIds","_c","variant","cacheID","TeXFont","delimiters_js_1","normal_js_1","bold_js_1","italic_js_1","bold_italic_js_1","double_struck_js_1","fraktur_js_1","fraktur_bold_js_1","script_js_1","script_bold_js_1","sans_serif_js_1","sans_serif_bold_js_1","sans_serif_italic_js_1","sans_serif_bold_italic_js_1","monospace_js_1","smallop_js_1","largeop_js_1","tex_size3_js_1","tex_size4_js_1","tex_calligraphic_js_1","tex_calligraphic_bold_js_1","tex_mathit_js_1","tex_oldstyle_js_1","tex_oldstyle_bold_js_1","tex_variant_js_1","FontData_js_1","exports"],"sourceRoot":"","sources":["../../../../ts/output/svg/fonts/tex.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}