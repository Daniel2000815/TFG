{"ast":null,"code":"export var primitives = function primitives() {\n  return \"\\n    float sphere( vec3 p, float radius )\\n    {\\n    return length(p)-radius;\\n    }\\n\\n    float box( vec3 p, vec3 size )\\n    {\\n    vec3 q = abs(p) - size;\\n    return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\\n    }\\n\\n    float torus( vec3 p, vec2 size )\\n    {\\n    vec2 q = vec2(length(p.xz)-size.x,p.y);\\n    return length(q)-size.y;\\n    }\\n\\n    float cylinder( vec3 p, float h, float r )\\n    {\\n    vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\\n    return min(max(d.x,d.y),0.0) + length(max(d,0.0));\\n    }\\n\\n\";\n};","map":{"version":3,"names":["primitives"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/primitives.js"],"sourcesContent":["export const primitives = () => `\r\n    float sphere( vec3 p, float radius )\r\n    {\r\n    return length(p)-radius;\r\n    }\r\n\r\n    float box( vec3 p, vec3 size )\r\n    {\r\n    vec3 q = abs(p) - size;\r\n    return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\r\n    }\r\n\r\n    float torus( vec3 p, vec2 size )\r\n    {\r\n    vec2 q = vec2(length(p.xz)-size.x,p.y);\r\n    return length(q)-size.y;\r\n    }\r\n\r\n    float cylinder( vec3 p, float h, float r )\r\n    {\r\n    vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\r\n    return min(max(d.x,d.y),0.0) + length(max(d,0.0));\r\n    }\r\n\r\n`"],"mappings":"AAAA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa;EAAA;AAAA,CAAnB"},"metadata":{},"sourceType":"module"}