{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.log = void 0;\nvar Symbol_1 = require(\"../../../Types/Symbol\");\nvar Settings_1 = require(\"../../../Settings\");\nvar Errors_1 = require(\"../../../Core/Errors\");\nvar Complex_1 = require(\"../../Complex\");\nvar Groups_1 = require(\"../../../Types/Groups\");\nvar add_1 = require(\"../operations/add\");\nvar index_1 = require(\"../index\");\nvar Utils_1 = require(\"../../../Core/Utils\");\nvar Parser_1 = require(\"../../../Parser/Parser\");\n/**\n * The log function\n * @param {Symbol} symbol\n * @param {Symbol} base\n * @returns {Symbol}\n */\nfunction log(symbol, base) {\n  if (symbol.equals(1)) {\n    return new Symbol_1.Symbol(0);\n  }\n  var retval;\n  if (symbol.fname === Settings_1.Settings.SQRT && symbol.multiplier.equals(1)) {\n    retval = (0, index_1.divide)(log(symbol.args[0]), new Symbol_1.Symbol(2));\n    if (symbol.power.sign() < 0) {\n      retval.negate();\n    }\n    // Exit early\n    return retval;\n  }\n  //log(0) is undefined so complain\n  if (symbol.equals(0)) {\n    throw new Errors_1.UndefinedError(Settings_1.Settings.LOG + '(0) is undefined!');\n  }\n  //deal with imaginary values\n  if (symbol.isImaginary()) {\n    return Complex_1.Complex.evaluate(symbol, Settings_1.Settings.LOG);\n  }\n  if (symbol.isConstant() && typeof base !== 'undefined' && base.isConstant()) {\n    var log_sym = Math.log(symbol);\n    var log_base = Math.log(base);\n    retval = new Symbol_1.Symbol(log_sym / log_base);\n  } else if (symbol.group === Groups_1.Groups.EX && symbol.power.multiplier.lessThan(0) || symbol.power.toString() === '-1') {\n    symbol.power.negate();\n    //move the negative outside but keep the positive inside :)\n    retval = log(symbol).negate();\n  } else if (symbol.value === 'e' && symbol.multiplier.equals(1)) {\n    var p = symbol.power;\n    retval = (0, Utils_1.isSymbol)(p) ? p : new Symbol_1.Symbol(p);\n  } else if (symbol.group === Groups_1.Groups.FN && symbol.fname === 'exp') {\n    var s = symbol.args[0];\n    if (symbol.multiplier.equals(1)) retval = (0, index_1.multiply)(s, new Symbol_1.Symbol(symbol.power));else retval = (0, Symbol_1.symfunction)(Settings_1.Settings.LOG, [symbol]);\n  } else if (Settings_1.Settings.PARSE2NUMBER && (0, Utils_1.isNumericSymbol)(symbol)) {\n    // Parse for safety.\n    symbol = (0, Parser_1.parse)(symbol);\n    var img_part;\n    if (symbol.multiplier.lessThan(0)) {\n      symbol.negate();\n      img_part = (0, index_1.multiply)(new Symbol_1.Symbol(Math.PI), new Symbol_1.Symbol('i'));\n    }\n    retval = new Symbol_1.Symbol(Math.log(symbol.multiplier.toDecimal()));\n    if (img_part) {\n      retval = (0, add_1.add)(retval, img_part);\n    }\n  } else {\n    var s;\n    if (!symbol.power.equals(1) && !symbol.contains('e')) {\n      s = symbol.group === Groups_1.Groups.EX ? symbol.power : new Symbol_1.Symbol(symbol.power);\n      symbol.toLinear();\n    }\n    //log(a,a) = 1 since the base is allowed to be changed.\n    //This was pointed out by Happypig375 in issue #280\n    if (arguments.length > 1 && allSame(arguments)) {\n      retval = new Symbol_1.Symbol(1);\n    } else {\n      retval = (0, Symbol_1.symfunction)(Settings_1.Settings.LOG, arguments);\n    }\n    if (s) retval = (0, index_1.multiply)(s, retval);\n  }\n  return retval;\n}\nexports.log = log;","map":{"version":3,"mappings":"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","names":["log","symbol","base","equals","Symbol_1","retval","fname","Settings_1","SQRT","multiplier","args","power","sign","negate","Errors_1","LOG","isImaginary","Complex_1","evaluate","isConstant","log_sym","Math","log_base","group","Groups_1","EX","lessThan","toString","value","p","FN","s","PARSE2NUMBER","img_part","PI","toDecimal","contains","toLinear","arguments","length","allSame","exports"],"sourceRoot":"","sources":["../../../../src/Functions/Core/math/log.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}