{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonInferredMrowMixin = exports.CommonMrowMixin = void 0;\n\nvar BBox_js_1 = require(\"../../../util/BBox.js\");\n\nfunction CommonMrowMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      var e_1, _a;\n\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;\n\n      _this.stretchChildren();\n\n      try {\n        for (var _b = __values(_this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n\n          if (child.bbox.pwidth) {\n            _this.bbox.pwidth = BBox_js_1.BBox.fullWidth;\n            break;\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      return _this;\n    }\n\n    Object.defineProperty(class_1.prototype, \"fixesPWidth\", {\n      get: function get() {\n        return false;\n      },\n      enumerable: false,\n      configurable: true\n    });\n\n    class_1.prototype.stretchChildren = function () {\n      var e_2, _a, e_3, _b, e_4, _c;\n\n      var stretchy = [];\n\n      try {\n        for (var _d = __values(this.childNodes), _e = _d.next(); !_e.done; _e = _d.next()) {\n          var child = _e.value;\n\n          if (child.canStretch(1)) {\n            stretchy.push(child);\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n\n      var count = stretchy.length;\n      var nodeCount = this.childNodes.length;\n\n      if (count && nodeCount > 1) {\n        var H = 0,\n            D = 0;\n        var all = count > 1 && count === nodeCount;\n\n        try {\n          for (var _f = __values(this.childNodes), _g = _f.next(); !_g.done; _g = _f.next()) {\n            var child = _g.value;\n            var noStretch = child.stretch.dir === 0;\n\n            if (all || noStretch) {\n              var _h = child.getOuterBBox(noStretch),\n                  h = _h.h,\n                  d = _h.d,\n                  rscale = _h.rscale;\n\n              h *= rscale;\n              d *= rscale;\n              if (h > H) H = h;\n              if (d > D) D = d;\n            }\n          }\n        } catch (e_3_1) {\n          e_3 = {\n            error: e_3_1\n          };\n        } finally {\n          try {\n            if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n          } finally {\n            if (e_3) throw e_3.error;\n          }\n        }\n\n        try {\n          for (var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()) {\n            var child = stretchy_1_1.value;\n            child.coreMO().getStretchedVariant([H, D]);\n          }\n        } catch (e_4_1) {\n          e_4 = {\n            error: e_4_1\n          };\n        } finally {\n          try {\n            if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);\n          } finally {\n            if (e_4) throw e_4.error;\n          }\n        }\n      }\n    };\n\n    return class_1;\n  }(Base);\n}\n\nexports.CommonMrowMixin = CommonMrowMixin;\n\nfunction CommonInferredMrowMixin(Base) {\n  return function (_super) {\n    __extends(class_2, _super);\n\n    function class_2() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    class_2.prototype.getScale = function () {\n      this.bbox.scale = this.parent.bbox.scale;\n      this.bbox.rscale = 1;\n    };\n\n    return class_2;\n  }(Base);\n}\n\nexports.CommonInferredMrowMixin = CommonInferredMrowMixin;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;AA0BA,SAAgBA,eAAhB,CAA8DC,IAA9D,EAAqE;EAEnE;IAAqBC;;IAanB;;;MAAY;;WAAA,yCAAc;QAAdC;;;MAAZ,wDACWA,IADX,GACe,KADf,MACe,IADf;;MAEEC,KAAI,CAACC,eAAL;;;QACA,KAAoB,uBAAI,CAACC,UAAL,GAAeC,cAAnC,EAAmC,QAAnC,EAAmCA,cAAnC,EAAqC;UAAhC,IAAMC,KAAK,WAAX;;UACH,IAAIA,KAAK,CAACC,IAAN,CAAWC,MAAf,EAAuB;YACrBN,KAAI,CAACK,IAAL,CAAUC,MAAV,GAAmBC,eAAKC,SAAxB;YACA;UACD;QACF;;;;;;;;;;;;;;IACF;;IAjBDC,sBAAIC,iBAAJ,EAAI,aAAJ,EAAe;WAAf;QACE,OAAO,KAAP;MACD,CAFc;uBAAA;;IAAA,CAAf;;IAuBOA,oCAAP;;;MACE,IAAIC,QAAQ,GAAiB,EAA7B;;;QAIA,KAAoB,uBAAKT,UAAL,GAAeU,cAAnC,EAAmC,QAAnC,EAAmCA,cAAnC,EAAqC;UAAhC,IAAMR,KAAK,WAAX;;UACH,IAAIA,KAAK,CAACS,UAAN,CAAgB,CAAhB,CAAJ,EAA0C;YACxCF,QAAQ,CAACG,IAAT,CAAcV,KAAd;UACD;QACF;;;;;;;;;;;;;MACD,IAAIW,KAAK,GAAGJ,QAAQ,CAACK,MAArB;MACA,IAAIC,SAAS,GAAG,KAAKf,UAAL,CAAgBc,MAAhC;;MACA,IAAID,KAAK,IAAIE,SAAS,GAAG,CAAzB,EAA4B;QAC1B,IAAIC,CAAC,GAAG,CAAR;QAAA,IAAWC,CAAC,GAAG,CAAf;QAMA,IAAIC,GAAG,GAAIL,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAKE,SAAlC;;;UACA,KAAoB,uBAAKf,UAAL,GAAemB,cAAnC,EAAmC,QAAnC,EAAmCA,cAAnC,EAAqC;YAAhC,IAAMjB,KAAK,WAAX;YACH,IAAMkB,SAAS,GAAIlB,KAAK,CAACmB,OAAN,CAAcC,GAAd,KAAiB,CAApC;;YACA,IAAIJ,GAAG,IAAIE,SAAX,EAAsB;cAChB,SAAiBlB,KAAK,CAACqB,YAAN,CAAmBH,SAAnB,CAAjB;cAAA,IAACI,CAAC,OAAF;cAAA,IAAIC,CAAC,OAAL;cAAA,IAAOC,MAAM,YAAb;;cACJF,CAAC,IAAIE,MAAL;cACAD,CAAC,IAAIC,MAAL;cACA,IAAIF,CAAC,GAAGR,CAAR,EAAWA,CAAC,GAAGQ,CAAJ;cACX,IAAIC,CAAC,GAAGR,CAAR,EAAWA,CAAC,GAAGQ,CAAJ;YACZ;UACF;;;;;;;;;;;;;;UAID,KAAoB,qCAAQE,gCAA5B,EAA4B,kBAA5B,EAA4BA,gCAA5B,EAA8B;YAAzB,IAAMzB,KAAK,qBAAX;YACFA,KAAK,CAAC0B,MAAN,GAA4BC,mBAA5B,CAAgD,CAACb,CAAD,EAAIC,CAAJ,CAAhD;UACF;;;;;;;;;;;;MACF;IACF,CArCM;;IAuCT;EAAC,CAnED,CAAqBtB,IAArB;AAoED;;AAtEDmC;;AA2FA,SAAgBC,uBAAhB,CAAmEpC,IAAnE,EAA0E;EAExE;IAAqBC;;IAAd;;IAYN;;IAJQoC,6BAAP;MACE,KAAK7B,IAAL,CAAU8B,KAAV,GAAkB,KAAKC,MAAL,CAAY/B,IAAZ,CAAiB8B,KAAnC;MACA,KAAK9B,IAAL,CAAUuB,MAAV,GAAmB,CAAnB;IACD,CAHM;;IAIT;EAAC,CAZD,CAAqB/B,IAArB;AAcD;;AAhBDmC","names":["CommonMrowMixin","Base","__extends","args","_this","stretchChildren","childNodes","_c","child","bbox","pwidth","BBox_js_1","fullWidth","Object","class_1","stretchy","_e","canStretch","push","count","length","nodeCount","H","D","all","_g","noStretch","stretch","dir","getOuterBBox","h","d","rscale","stretchy_1_1","coreMO","getStretchedVariant","exports","CommonInferredMrowMixin","class_2","scale","parent"],"sourceRoot":"","sources":["../../../../ts/output/common/Wrappers/mrow.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}