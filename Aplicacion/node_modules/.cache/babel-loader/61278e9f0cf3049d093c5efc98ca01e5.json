{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\GrobnerPage\\\\GrobnerPage.js\";\nimport React, { useState, useEfect } from \"react\";\nimport Grid from '@mui/material/Grid';\nimport Divider from '@mui/material/Divider';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport newId from '../uniqueIdHook';\nexport default function GrobnerPage() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      dividendo = _useState2[0],\n      setDividendo = _useState2[1];\n\n  var _useState3 = useState([\"2x\", \"3x\"]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      divisores = _useState4[0],\n      setDivisores = _useState4[1];\n\n  var handleDivisoresChange = function handleDivisoresChange(idx, val) {\n    var newDivisores = _toConsumableArray(divisores);\n\n    newDivisores[idx] = val;\n    setDivisores(newDivisores);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    spacing: 10,\n    padding: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }\n  }, exp('2x^2 + y^3'), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PolynomialInput, {\n    label: \"f\",\n    val: dividendo,\n    handleChange: function handleChange(v) {\n      return setDividendo(v);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"DIVIDERS\"), divisores.map(function (divisor, idx) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: \"dividerInput_\".concat(idx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(PolynomialInput, {\n      label: \"f\".concat(idx + 1),\n      val: divisor,\n      handleChange: function handleChange(v) {\n        return handleDivisoresChange(idx, v);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    })));\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"TODO\"));\n}","map":{"version":3,"names":["React","useState","useEfect","Grid","Divider","TextField","InputAdornment","newId","GrobnerPage","dividendo","setDividendo","divisores","setDivisores","handleDivisoresChange","idx","val","newDivisores","exp","v","map","divisor"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/GrobnerPage/GrobnerPage.js"],"sourcesContent":["import React, { useState, useEfect } from \"react\";\r\nimport Grid from '@mui/material/Grid';\r\nimport Divider from '@mui/material/Divider';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport newId from '../uniqueIdHook';\r\n\r\n\r\nexport default function GrobnerPage() {\r\n    const [dividendo, setDividendo] = useState(\"\");\r\n    const [divisores, setDivisores] = useState([\"2x\", \"3x\"]);\r\n\r\n    const handleDivisoresChange = (idx, val) => {\r\n        let newDivisores = [...divisores];\r\n        newDivisores[idx] = val;\r\n        setDivisores(newDivisores);\r\n    }\r\n\r\n    return <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n        spacing={10}\r\n        padding={2}\r\n    >\r\n        {exp('2x^2 + y^3')}\r\n        <Grid item xs={6}>\r\n            <PolynomialInput label={`f`} val={dividendo} handleChange={(v) => setDividendo(v)} />\r\n            <Divider>DIVIDERS</Divider>\r\n            {divisores.map(function (divisor, idx) {\r\n                return (\r\n                    <div key={`dividerInput_${idx}`}>\r\n                        <Grid item xs={12}>\r\n                            <PolynomialInput label={`f${idx + 1}`} val={divisor} handleChange={(v) => handleDivisoresChange(idx, v)} />\r\n                        </Grid>\r\n                    </div>\r\n                );\r\n            })}\r\n\r\n        </Grid>\r\n        <Grid item xs={6}>TODO</Grid>\r\n    </Grid >;\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAGA,eAAe,SAASC,WAAT,GAAuB;EAClC,gBAAkCP,QAAQ,CAAC,EAAD,CAA1C;EAAA;EAAA,IAAOQ,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAAkCT,QAAQ,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,CAA1C;EAAA;EAAA,IAAOU,SAAP;EAAA,IAAkBC,YAAlB;;EAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,GAAD,EAAMC,GAAN,EAAc;IACxC,IAAIC,YAAY,sBAAOL,SAAP,CAAhB;;IACAK,YAAY,CAACF,GAAD,CAAZ,GAAoBC,GAApB;IACAH,YAAY,CAACI,YAAD,CAAZ;EACH,CAJD;;EAMA,oBAAO,oBAAC,IAAD;IACH,SAAS,MADN;IAEH,SAAS,EAAC,KAFP;IAGH,cAAc,EAAC,YAHZ;IAIH,UAAU,EAAC,YAJR;IAKH,OAAO,EAAE,EALN;IAMH,OAAO,EAAE,CANN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAQFC,GAAG,CAAC,YAAD,CARD,eASH,oBAAC,IAAD;IAAM,IAAI,MAAV;IAAW,EAAE,EAAE,CAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,eAAD;IAAiB,KAAK,KAAtB;IAA6B,GAAG,EAAER,SAAlC;IAA6C,YAAY,EAAE,sBAACS,CAAD;MAAA,OAAOR,YAAY,CAACQ,CAAD,CAAnB;IAAA,CAA3D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAEI,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cAFJ,EAGKP,SAAS,CAACQ,GAAV,CAAc,UAAUC,OAAV,EAAmBN,GAAnB,EAAwB;IACnC,oBACI;MAAK,GAAG,yBAAkBA,GAAlB,CAAR;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI,oBAAC,IAAD;MAAM,IAAI,MAAV;MAAW,EAAE,EAAE,EAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI,oBAAC,eAAD;MAAiB,KAAK,aAAMA,GAAG,GAAG,CAAZ,CAAtB;MAAuC,GAAG,EAAEM,OAA5C;MAAqD,YAAY,EAAE,sBAACF,CAAD;QAAA,OAAOL,qBAAqB,CAACC,GAAD,EAAMI,CAAN,CAA5B;MAAA,CAAnE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADJ,CADJ,CADJ;EAOH,CARA,CAHL,CATG,eAuBH,oBAAC,IAAD;IAAM,IAAI,MAAV;IAAW,EAAE,EAAE,CAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,UAvBG,CAAP;AAyBH"},"metadata":{},"sourceType":"module"}