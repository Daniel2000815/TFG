{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbstractDOMAdaptor = void 0;\n\nvar AbstractDOMAdaptor = function () {\n  function AbstractDOMAdaptor(document) {\n    if (document === void 0) {\n      document = null;\n    }\n\n    this.document = document;\n  }\n\n  AbstractDOMAdaptor.prototype.node = function (kind, def, children, ns) {\n    var e_1, _a;\n\n    if (def === void 0) {\n      def = {};\n    }\n\n    if (children === void 0) {\n      children = [];\n    }\n\n    var node = this.create(kind, ns);\n    this.setAttributes(node, def);\n\n    try {\n      for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n        var child = children_1_1.value;\n        this.append(node, child);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return node;\n  };\n\n  AbstractDOMAdaptor.prototype.setAttributes = function (node, def) {\n    var e_2, _a, e_3, _b, e_4, _c;\n\n    if (def.style && typeof def.style !== 'string') {\n      try {\n        for (var _d = __values(Object.keys(def.style)), _e = _d.next(); !_e.done; _e = _d.next()) {\n          var key = _e.value;\n          this.setStyle(node, key.replace(/-([a-z])/g, function (_m, c) {\n            return c.toUpperCase();\n          }), def.style[key]);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    if (def.properties) {\n      try {\n        for (var _f = __values(Object.keys(def.properties)), _g = _f.next(); !_g.done; _g = _f.next()) {\n          var key = _g.value;\n          node[key] = def.properties[key];\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n    }\n\n    try {\n      for (var _h = __values(Object.keys(def)), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var key = _j.value;\n\n        if ((key !== 'style' || typeof def.style === 'string') && key !== 'properties') {\n          this.setAttribute(node, key, def[key]);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n  };\n\n  AbstractDOMAdaptor.prototype.replace = function (nnode, onode) {\n    this.insert(nnode, onode);\n    this.remove(onode);\n    return onode;\n  };\n\n  AbstractDOMAdaptor.prototype.childNode = function (node, i) {\n    return this.childNodes(node)[i];\n  };\n\n  AbstractDOMAdaptor.prototype.allClasses = function (node) {\n    var classes = this.getAttribute(node, 'class');\n    return !classes ? [] : classes.replace(/  +/g, ' ').replace(/^ /, '').replace(/ $/, '').split(/ /);\n  };\n\n  return AbstractDOMAdaptor;\n}();\n\nexports.AbstractDOMAdaptor = AbstractDOMAdaptor;","map":{"version":3,"mappings":"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","names":["document","AbstractDOMAdaptor","kind","def","children","ns","node","create","setAttributes","children_1_1","child","append","style","keys","_e","key","setStyle","replace","_m","c","toUpperCase","properties","_g","_j","setAttribute","nnode","onode","insert","remove","i","childNodes","classes","getAttribute","split","exports"],"sourceRoot":"","sources":["../../ts/core/DOMAdaptor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}