{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\SurfacePage\\\\SurfacePage.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport SurfaceCard from './SurfaceCard';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\nimport Typography from '@mui/material/Typography';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport EquationEditor from 'equation-editor-react';\nimport evaluatex from '../../node_modules/evaluatex/dist/evaluatex';\nimport MathJax from 'react-mathjax';\nimport ButtonCard from '../CustomComponents/ButtonCard';\nimport CustomTable from '../CustomComponents/CustomTable';\nimport { evaluate, create, all } from 'mathjs';\nimport nerdamer from 'nerdamer';\nimport { isImportEqualsDeclaration } from 'typescript';\nimport 'katex/dist/katex.min.css';\nimport Latex from 'react-latex-next';\n\nvar latexEq = function latexEq(eq) {\n  return /*#__PURE__*/React.createElement(Latex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, \"$ \".concat(eq, \" $\"));\n};\n\nvar tableCols = [{\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'implicit',\n  label: 'Implicit',\n  minWidth: 300\n}];\nvar tableRows = [{\n  name: \"ej1\",\n  implicit: latexEq(localStorage.getItem('ej'))\n}];\n\nfunction SurfaceDialog(props) {\n  var nerdamer = require('nerdamer');\n\n  require('nerdamer/Calculus');\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      eqData = _useState2[0],\n      setEqData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      validEq = _useState4[0],\n      setValEq = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      parsedEq = _useState6[0],\n      setParsedEq = _useState6[1];\n  /*\r\n  const handleNewEquation = (newEq) => {\r\n    const math = create(all);\r\n      let f = null;\r\n      try {\r\n      f = math.parse(newEq);\r\n    } catch (error) {\r\n      setValEq(false);\r\n      console.warn(\"ERROR PARSING EQUATION\");\r\n      console.log(f);\r\n      return;\r\n    }\r\n      setValEq(true);\r\n      const x = math.parse('x');\r\n    const y = math.parse('y');\r\n    const z = math.parse('z');\r\n      const dfdx = math.derivative(f, x);\r\n    const dfdy = math.derivative(f, y);\r\n    const dfdz = math.derivative(f, z);\r\n      //const norm = math.sqrt(dfdx*dfdx + dfdy*dfdy + dfdz*dfdz);\r\n    console.log(math.prod(dfdx,dfdx));\r\n    // console.log(\"NORMA: \" + norm);\r\n      let newData = {\r\n      f: f,\r\n      dx: dfdx,\r\n      dy: dfdy,\r\n      dz: dfdz}\r\n      setEqData(eqData => ({\r\n      ...eqData,\r\n      ...newData\r\n    }));\r\n  \r\n      console.log(\"dFdX: \" + dfdx);\r\n    console.log(\"dFdY: \" + dfdy);\r\n    console.log(\"dFdZ: \" + dfdz);\r\n    //console.log(math.norm([dfdx, dfdy, dfdz]));\r\n    console.log(eqData);\r\n  }\r\n  */\n\n\n  var traverseTree = function traverseTree(node) {\n    if (node) {\n      if (node.type === 'VARIABLE_OR_LITERAL') {\n        console.log(\"VARIABLE: \" + node.value);\n        var isVariable = node.value === 'x' || node.value === 'y' || node.value === 'z';\n        return isVariable ? node.value : parseFloat(node.value).toFixed(4);\n      }\n\n      if (node.type === 'OPERATOR') {\n        console.log(\"OPERATOR: \" + node.value);\n        var left = traverseTree(node.left);\n        var right = traverseTree(node.right);\n\n        if (node.value === '^') {\n          console.log(\"pow(\".concat(left, \", \").concat(right, \")\"));\n          return \"pow(\".concat(left, \", \").concat(right, \")\");\n        } else {\n          if (right && left) return \"(\".concat(left, \")\").concat(node.value, \"(\").concat(right, \")\");else if (left) return \"\".concat(node.value, \"(\").concat(left, \")\");else return \"????\";\n        }\n\n        console.log(node.toString());\n        return node.toString();\n      }\n\n      if (node.type === 'FUNCTION') {\n        console.log(\"FUNCTION: \" + node.value);\n\n        var _left = traverseTree(node.left);\n\n        var _right = traverseTree(node.right);\n\n        if (node.value === '^') {\n          console.log(\"pow(\".concat(_left, \", \").concat(_right, \")\"));\n          return \"pow(\".concat(_left, \", \").concat(_right, \")\");\n        } else {\n          if (_right) return \"\".concat(node.value, \"(\").concat(_right, \")\");else return \"????\";\n        }\n      }\n    }\n  };\n\n  var handleNewEquation = function handleNewEquation(newEq) {\n    var f = null;\n\n    try {\n      f = nerdamer(newEq);\n    } catch (error) {\n      setValEq(false);\n      console.warn('ERROR PARSING EQUATION');\n      return;\n    }\n\n    setValEq(true);\n    var dfdx = nerdamer.diff(f, 'x', 1);\n    var dfdy = nerdamer.diff(f, 'y', 1);\n    var dfdz = nerdamer.diff(f, 'z', 1);\n    var norm = nerdamer(\"sqrt((\".concat(dfdx, \")^2 + (\").concat(dfdy, \")^2 + (\").concat(dfdz, \")^2)\"));\n    var sdf = nerdamer(\"(\".concat(f, \")/(\").concat(norm, \")\"));\n    console.log('F: ' + f.toString());\n    console.log('dFdX: ' + dfdx.toString());\n    console.log('dFdY: ' + dfdy.toString());\n    console.log('dFdZ: ' + dfdz.toString());\n    console.log('norm: ' + norm.toString());\n    console.log('sdf: ' + sdf.toString());\n    var x = nerdamer.tree(sdf.toString());\n    console.log(x);\n    setParsedEq(traverseTree(x));\n    setEqData({\n      f: f,\n      dx: dfdx,\n      dy: dfdy,\n      dz: dfdz,\n      norm: norm,\n      sdf: sdf\n    });\n    console.log(eqData);\n  };\n\n  var handleSave = function handleSave() {\n    localStorage.setItem(\"ej\", eqData.f);\n  };\n\n  useEffect(function () {\n    console.log('CHANGE');\n    console.log(eqData);\n  }, [eqData]);\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: props.open,\n    onClose: props.handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, \"New Surface\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, \"EQ: \", eqData.f ? eqData.f.toString() : '', /*#__PURE__*/React.createElement(MathJax.Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, \"Block formula:\"), /*#__PURE__*/React.createElement(MathJax.Node, {\n    formula: eqData.f ? \"\\\\begin{align*} \\n            f(x,y,z) &=  \".concat(nerdamer.convertToLaTeX(eqData.f.toString()), \" \\\\\\\\[10pt]\\n            \\\\nabla f(x,y,z) &= \\\\left( \\n              \").concat(nerdamer.convertToLaTeX(eqData.dx.toString()), \", \\n              \").concat(nerdamer.convertToLaTeX(eqData.dy.toString()), \", \\n              \").concat(nerdamer.convertToLaTeX(eqData.dz.toString()), \"\\n            \\\\right) \\\\\\\\[10pt]\\n            \\\\Vert \\\\nabla f(x,y,z) \\\\Vert &= \").concat(nerdamer.convertToLaTeX(eqData.norm.toString()), \" \\\\\\\\[10pt]\\n            \\\\text{sdf}(x,y,z) &= \").concat(nerdamer.convertToLaTeX(eqData.sdf.toString()), \"\\n          \\\\end{align*}\") : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }), \"salida string: \", parsedEq)), /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, \"Introduce surface information:\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    label: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    sx: {\n      width: '100%'\n    },\n    defaultValue: \"x^2 + y^2 + z^2 - 1\",\n    label: \"Implicit\",\n    onChange: function onChange(e) {\n      return handleNewEquation(e.target.value);\n    },\n    id: \"Implicit\",\n    error: !validEq,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 19\n        }\n      }, \" = 0\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: true,\n    sx: {\n      width: '100%'\n    },\n    id: \"derivative\",\n    label: \"Derivative\",\n    defaultValue: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: props.handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  }, \"Save\")));\n}\n\nexport default function SurfacePage() {\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dialogOpen = _useState8[0],\n      setDialogOpen = _useState8[1];\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    style: {\n      position: 'absolute',\n      bottom: 16,\n      right: 16\n    },\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    onClick: function onClick() {\n      return setDialogOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(CustomTable, {\n    rows: tableRows,\n    columns: tableCols,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SurfaceDialog, {\n    open: dialogOpen,\n    handleClose: function handleClose() {\n      return setDialogOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SurfaceCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SurfaceCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SurfaceCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SurfaceCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SurfaceCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SurfaceCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"names":["React","useState","useEffect","SurfaceCard","Grid","Box","Fab","AddIcon","Typography","InputAdornment","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","EquationEditor","evaluatex","MathJax","ButtonCard","CustomTable","evaluate","create","all","nerdamer","isImportEqualsDeclaration","Latex","latexEq","eq","tableCols","id","label","minWidth","tableRows","name","implicit","localStorage","getItem","SurfaceDialog","props","require","eqData","setEqData","validEq","setValEq","parsedEq","setParsedEq","traverseTree","node","type","console","log","value","isVariable","parseFloat","toFixed","left","right","toString","handleNewEquation","newEq","f","error","warn","dfdx","diff","dfdy","dfdz","norm","sdf","x","tree","dx","dy","dz","handleSave","setItem","open","handleClose","convertToLaTeX","width","e","target","endAdornment","SurfacePage","dialogOpen","setDialogOpen","position","bottom"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/SurfacePage/SurfacePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SurfaceCard from './SurfaceCard';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Button from '@mui/material/Button';\r\nimport EquationEditor from 'equation-editor-react';\r\nimport evaluatex from '../../node_modules/evaluatex/dist/evaluatex';\r\nimport MathJax from 'react-mathjax';\r\nimport ButtonCard from '../CustomComponents/ButtonCard';\r\nimport CustomTable from '../CustomComponents/CustomTable';\r\nimport { evaluate, create, all } from 'mathjs';\r\nimport nerdamer from 'nerdamer';\r\nimport { isImportEqualsDeclaration } from 'typescript';\r\nimport 'katex/dist/katex.min.css'\r\nimport Latex from 'react-latex-next'\r\n\r\n\r\nconst latexEq = (eq) => {\r\n  return (\r\n    <Latex>{`\\$ ${eq} \\$`}</Latex>\r\n  )\r\n}\r\nconst tableCols = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'implicit', label: 'Implicit', minWidth: 300 },\r\n];\r\n\r\nconst tableRows = [\r\n  {name: \"ej1\", implicit: latexEq(localStorage.getItem('ej'))}, \r\n];\r\n\r\nfunction SurfaceDialog(props) {\r\n  var nerdamer = require('nerdamer');\r\n  require('nerdamer/Calculus');\r\n\r\n  const [eqData, setEqData] = useState({});\r\n  const [validEq, setValEq] = useState(true);\r\n  const [parsedEq, setParsedEq] = useState(\"\");\r\n\r\n  /*\r\n  const handleNewEquation = (newEq) => {\r\n    const math = create(all);\r\n\r\n    let f = null;\r\n\r\n    try {\r\n      f = math.parse(newEq);\r\n    } catch (error) {\r\n      setValEq(false);\r\n      console.warn(\"ERROR PARSING EQUATION\");\r\n      console.log(f);\r\n      return;\r\n    }\r\n\r\n    setValEq(true);\r\n\r\n    const x = math.parse('x');\r\n    const y = math.parse('y');\r\n    const z = math.parse('z');\r\n\r\n    const dfdx = math.derivative(f, x);\r\n    const dfdy = math.derivative(f, y);\r\n    const dfdz = math.derivative(f, z);\r\n\r\n    //const norm = math.sqrt(dfdx*dfdx + dfdy*dfdy + dfdz*dfdz);\r\n    console.log(math.prod(dfdx,dfdx));\r\n    // console.log(\"NORMA: \" + norm);\r\n\r\n    let newData = {\r\n      f: f,\r\n      dx: dfdx,\r\n      dy: dfdy,\r\n      dz: dfdz}\r\n\r\n    setEqData(eqData => ({\r\n      ...eqData,\r\n      ...newData\r\n    }));\r\n  \r\n\r\n    console.log(\"dFdX: \" + dfdx);\r\n    console.log(\"dFdY: \" + dfdy);\r\n    console.log(\"dFdZ: \" + dfdz);\r\n    //console.log(math.norm([dfdx, dfdy, dfdz]));\r\n    console.log(eqData);\r\n  }\r\n  */\r\n\r\n  const traverseTree = (node) => {\r\n\r\n    if(node){\r\n      if(node.type === 'VARIABLE_OR_LITERAL'){\r\n        console.log(\"VARIABLE: \" + node.value);\r\n        const isVariable = node.value==='x' || node.value==='y' || node.value==='z';\r\n        return isVariable ? node.value : parseFloat(node.value).toFixed(4);\r\n      }\r\n      if(node.type === 'OPERATOR'){\r\n        console.log(\"OPERATOR: \" + node.value);\r\n        let left = traverseTree(node.left);\r\n        let right = traverseTree(node.right);\r\n\r\n        if(node.value === '^'){\r\n          console.log(`pow(${left}, ${right})`);\r\n          return `pow(${left}, ${right})`;\r\n          \r\n        }\r\n        else{\r\n          if(right && left) return `(${left})${node.value}(${right})`;\r\n          else if(left) return `${node.value}(${left})`;\r\n          else return \"????\";\r\n        }\r\n        \r\n        console.log(node.toString());\r\n        return node.toString();\r\n        \r\n      }\r\n      if(node.type === 'FUNCTION'){\r\n        console.log(\"FUNCTION: \" + node.value);\r\n        let left = traverseTree(node.left);\r\n        let right = traverseTree(node.right);\r\n\r\n        if(node.value === '^'){\r\n          console.log(`pow(${left}, ${right})`);\r\n          return `pow(${left}, ${right})`;\r\n          \r\n        }\r\n        else{\r\n          if(right) return `${node.value}(${right})`;\r\n          else return \"????\";\r\n        }\r\n        \r\n      }\r\n      \r\n\r\n      \r\n    }\r\n  }\r\n\r\n  const handleNewEquation = (newEq) => {\r\n    let f = null;\r\n\r\n    try {\r\n      f = nerdamer(newEq);\r\n    } catch (error) {\r\n      setValEq(false);\r\n      console.warn('ERROR PARSING EQUATION');\r\n\r\n      return;\r\n    }\r\n\r\n    setValEq(true);\r\n\r\n    let dfdx = nerdamer.diff(f, 'x', 1);\r\n    let dfdy = nerdamer.diff(f, 'y', 1);\r\n    let dfdz = nerdamer.diff(f, 'z', 1);\r\n\r\n    let norm = nerdamer(`sqrt((${dfdx})^2 + (${dfdy})^2 + (${dfdz})^2)`);\r\n    let sdf = nerdamer(`(${f})/(${norm})`);\r\n\r\n    console.log('F: ' + f.toString());\r\n    console.log('dFdX: ' + dfdx.toString());\r\n    console.log('dFdY: ' + dfdy.toString());\r\n    console.log('dFdZ: ' + dfdz.toString());\r\n    console.log('norm: ' + norm.toString());\r\n    console.log('sdf: ' + sdf.toString());\r\n\r\n    var x = nerdamer.tree(sdf.toString());\r\n    console.log(x);\r\n    setParsedEq(traverseTree(x));\r\n\r\n    setEqData({\r\n      f: f,\r\n      dx: dfdx,\r\n      dy: dfdy,\r\n      dz: dfdz,\r\n      norm: norm,\r\n      sdf: sdf,\r\n    });\r\n\r\n    console.log(eqData);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    localStorage.setItem(\"ej\", eqData.f);\r\n\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n    console.log('CHANGE');\r\n    console.log(eqData);\r\n  }, [eqData]);\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={props.handleClose}>\r\n      <DialogTitle>New Surface</DialogTitle>\r\n\r\n      <DialogContent>\r\n        EQ: {eqData.f ? eqData.f.toString() : ''}\r\n        <MathJax.Provider>\r\n      <div>\r\n\r\n        <p>Block formula:</p>\r\n        \r\n        <MathJax.Node formula={\r\n          eqData.f ?\r\n          `\\\\begin{align*} \r\n            f(x,y,z) &=  ${nerdamer.convertToLaTeX(eqData.f.toString())} \\\\\\\\[10pt]\r\n            \\\\nabla f(x,y,z) &= \\\\left( \r\n              ${nerdamer.convertToLaTeX(eqData.dx.toString())}, \r\n              ${nerdamer.convertToLaTeX(eqData.dy.toString())}, \r\n              ${nerdamer.convertToLaTeX(eqData.dz.toString())}\r\n            \\\\right) \\\\\\\\[10pt]\r\n            \\\\Vert \\\\nabla f(x,y,z) \\\\Vert &= ${nerdamer.convertToLaTeX(eqData.norm.toString())} \\\\\\\\[10pt]\r\n            \\\\text{sdf}(x,y,z) &= ${nerdamer.convertToLaTeX(eqData.sdf.toString())}\r\n          \\\\end{align*}` : \"\"} \r\n        />\r\n        salida string: {parsedEq} \r\n      </div>\r\n    </MathJax.Provider>\r\n\r\n        <DialogContentText>Introduce surface information:</DialogContentText>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField id=\"name\" label=\"Name\" />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              sx={{ width: '100%' }}\r\n              defaultValue=\"x^2 + y^2 + z^2 - 1\"\r\n              label=\"Implicit\"\r\n              onChange={(e) => handleNewEquation(e.target.value)}\r\n              id=\"Implicit\"\r\n              error={!validEq}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\"> = 0</InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              disabled\r\n              sx={{ width: '100%' }}\r\n              id=\"derivative\"\r\n              label=\"Derivative\"\r\n              defaultValue=\"0\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose}>Cancel</Button>\r\n        <Button onClick={handleSave}>Save</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\n\r\nexport default function SurfacePage() {\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  return (\r\n    <Box>\r\n      <Fab\r\n        style={{ position: 'absolute', bottom: 16, right: 16 }}\r\n        color=\"primary\"\r\n        aria-label=\"add\"\r\n        onClick={() => setDialogOpen(true)}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n      <CustomTable rows={tableRows} columns={tableCols}/>\r\n      <SurfaceDialog\r\n        open={dialogOpen}\r\n        handleClose={() => setDialogOpen(false)}\r\n      />\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n        spacing={2}\r\n      >\r\n        <Grid item>\r\n          <ButtonCard />\r\n        </Grid>\r\n        <Grid item>\r\n          <SurfaceCard />\r\n        </Grid>\r\n        <Grid item>\r\n          <SurfaceCard />\r\n        </Grid>\r\n        <Grid item>\r\n          <SurfaceCard />\r\n        </Grid>\r\n        <Grid item>\r\n          <SurfaceCard />\r\n        </Grid>\r\n        <Grid item>\r\n          <SurfaceCard />\r\n        </Grid>\r\n        <Grid item>\r\n          <SurfaceCard />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}