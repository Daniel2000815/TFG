{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _classCallCheck = require(\"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Core = void 0;\nvar FunctionProvider_1 = require(\"../Providers/FunctionProvider\");\nvar OperatorDictionary_1 = require(\"../Providers/OperatorDictionary\");\nvar VariableDictionary_1 = require(\"../Providers/VariableDictionary\");\nvar Tokenizer_1 = require(\"../Parser/Tokenizer\");\nvar Expression_1 = require(\"../Parser/Expression\");\nvar pow_1 = require(\"../Functions/Core/operations/pow\");\nvar Parser_1 = require(\"../Parser/Parser\");\nvar Settings_1 = require(\"../Settings\");\nvar Math2_1 = require(\"../Functions/Math2\");\nvar Symbol_1 = require(\"../Types/Symbol\");\nvar Utils = __importStar(require(\"./Utils\"));\nvar Errors_1 = require(\"./Errors\");\nvar Groups_1 = require(\"../Types/Groups\");\nvar Frac_1 = require(\"../Types/Frac\");\nvar Vector_1 = require(\"../Types/Vector\");\nvar Matrix_1 = require(\"../Types/Matrix\");\nvar Scientific_1 = __importDefault(require(\"../Types/Scientific\"));\nvar LaTeX_1 = require(\"../LaTeX/LaTeX\");\nvar bigInt_1 = __importDefault(require(\"../3rdparty/bigInt\"));\nvar decimal_js_1 = __importDefault(require(\"decimal.js\"));\nvar exceptions = __importStar(require(\"./Errors\"));\nvar Core = /*#__PURE__*/_createClass(function Core() {\n  _classCallCheck(this, Core);\n  this.groups = Groups_1.Groups;\n  this.Symbol = Symbol_1.Symbol;\n  this.Expression = Expression_1.Expression;\n  this.Frac = Frac_1.Frac;\n  this.Vector = Vector_1.Vector;\n  this.Matrix = Matrix_1.Matrix;\n  this.Parser = Parser_1.Parser;\n  this.Scientific = Scientific_1.default;\n  this.Math2 = Math2_1.Math2;\n  this.LaTeX = LaTeX_1.LaTeX;\n  this.PARENTHESIS = Settings_1.Settings.PARENTHESIS;\n  this.Settings = Settings_1.Settings;\n  this.err = Errors_1.err;\n  this.bigInt = bigInt_1.default;\n  this.bigDec = decimal_js_1.default;\n  this.exceptions = exceptions;\n  var functionProvider = this.functionProvider = new FunctionProvider_1.FunctionProvider();\n  var operators = this.operators = new OperatorDictionary_1.OperatorDictionary();\n  var variableDictionary = this.variableDictionary = new VariableDictionary_1.VariableDictionary();\n  var units = {};\n  var tokenizer = new Tokenizer_1.Tokenizer(functionProvider, operators, units);\n  var peekers = this.peekers = {\n    pre_operator: [],\n    post_operator: [],\n    pre_function: [],\n    post_function: []\n  };\n  var EXPRESSIONS = this.EXPRESSIONS = [];\n  Expression_1.Expression.$EXPRESSIONS = EXPRESSIONS;\n  (0, pow_1.primeFactors)(314146179365);\n  //link the Math2 object to Settings.FUNCTION_MODULES\n  Settings_1.Settings.FUNCTION_MODULES.push(Math2_1.Math2);\n  variableDictionary.reserveNames(Math2_1.Math2); //reserve the names in Math2\n  var parser = new Parser_1.Parser(tokenizer, operators, functionProvider, variableDictionary, peekers, units);\n  Parser_1.ParseDeps.parser = parser;\n  this.PARSER = parser;\n  variableDictionary.reserveNames(variableDictionary.getAllConstants());\n  variableDictionary.reserveNames(functionProvider.getFunctionDescriptors());\n  parser.initConstants();\n  //bug fix for error but needs to be revisited\n  if (!parser.error) parser.error = Errors_1.err;\n  //Store the log and log10 functions\n  Settings_1.Settings.LOG_FNS = {\n    log: functionProvider.getFunctionDescriptor('log'),\n    log10: functionProvider.getFunctionDescriptor('log10')\n  };\n  this.Utils = Object.assign(Object.assign({}, Utils), {\n    clearU: function clearU(u) {\n      return variableDictionary.clearU(u);\n    },\n    getU: function getU(symbol) {\n      return variableDictionary.getU(symbol);\n    },\n    importFunctions: function importFunctions() {\n      return functionProvider.importFunctions();\n    },\n    reserveNames: function reserveNames(module) {\n      return variableDictionary.reserveNames(module);\n    },\n    isReserved: function isReserved(name) {\n      return variableDictionary.isReserved(name);\n    },\n    round: Utils.nround\n  });\n});\nexports.Core = Core;","map":{"version":3,"mappings":"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","names":["Core","Groups_1","Symbol_1","Expression_1","Frac_1","Vector_1","Matrix_1","Parser_1","Scientific_1","Math2_1","LaTeX_1","Settings_1","PARENTHESIS","Errors_1","bigInt_1","decimal_js_1","exceptions","functionProvider","FunctionProvider_1","operators","OperatorDictionary_1","variableDictionary","VariableDictionary_1","units","tokenizer","Tokenizer_1","peekers","pre_operator","post_operator","pre_function","post_function","EXPRESSIONS","$EXPRESSIONS","FUNCTION_MODULES","push","reserveNames","parser","PARSER","getAllConstants","getFunctionDescriptors","initConstants","error","LOG_FNS","log","getFunctionDescriptor","log10","Utils","clearU","u","getU","symbol","importFunctions","module","isReserved","name","round","nround","exports"],"sourceRoot":"","sources":["../../src/Core/Core.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}