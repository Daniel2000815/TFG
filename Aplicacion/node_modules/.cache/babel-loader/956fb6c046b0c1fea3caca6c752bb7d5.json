{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\GrobnerPage\\\\GrobnerPage.js\";\nimport React, { useState, useEfect } from 'react';\nimport Grid from '@mui/material/Grid';\nimport Divider from '@mui/material/Divider';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport newId from '../uniqueIdHook';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport { Maximize, SignalCellularNoSimOutlined } from '@mui/icons-material';\nimport Polynomial from '../Polynomial';\n\nvar nerdamer = require('nerdamer');\n\nrequire('nerdamer/Algebra'); // [variable, exponent] both strings\n// function exp (p) {\n//     const v = ['x', 'y', 'z'];\n//     const degs = [nerdamer(`deg(${p}, x)`).toString(), nerdamer(`deg(${p}, y)`).toString(), nerdamer(`deg(${p}, z)`).toString()];\n//     const max = Math.max(...degs).toString();\n//     return [ v[degs.indexOf(max)] , max];\n// }\n\n\nfunction lexify(p) {\n  var simplified = '';\n\n  try {\n    simplified = nerdamer(\"expand(\".concat(p, \")\")).toString();\n  } catch (error) {\n    console.log(error);\n    return;\n  }\n\n  console.log(simplified);\n  return simplified;\n}\n\nfunction expGrater(a, b) {\n  return a[0] > b[0] || a[0] == b[0] && a[1] > b[1] || a[0] == b[0] && a[1] == b[1] && a[2] > a[2];\n}\n\nfunction exp(p) {\n  var split = p.split(/[-+]+/); // separa por + o -\n\n  var res = ['0', '0', '0'];\n  split.forEach(function (element) {\n    if (element === '') return;\n    var degs = [Number(nerdamer(\"deg(\".concat(element, \", x)\")).toString()), Number(nerdamer(\"deg(\".concat(element, \", y)\")).toString()), Number(nerdamer(\"deg(\".concat(element, \", z)\")).toString())];\n    if (expGrater(degs, res)) res = degs;\n  });\n  return res;\n}\n\nfunction expEq(e1, e2) {\n  return e1[0] == e2[0] && e1[1] == e2[1] && e1[2] == e2[2];\n}\n\nfunction lc(f, variable) {\n  console.log(Polynomial(\"(4+a)*x+3xy\"));\n} // function lc(f, variable) {\n//   let res = '0';\n//   // const split = f.split(/[-+]+/);\n//   // console.log(split);\n//   let split = '';\n//   for(let i=0; i<f.length; i++){\n//     let c = f[i];\n//     if(c==='-' || c==='+'){\n//       res.push(split);\n//       split = c;\n//     }\n//     split += c;\n//   }\n//   split.forEach((element) => {\n//     if (element.includes(variable)) {\n//       if (isNaN(element[0])) res = '1';\n//       else res = element.match(/\\d+/);\n//       return;\n//     }\n//   });\n//   console.log(\"lc:\" + res);\n//   return res;\n//   console.log(`CALCULANDO LC DE ${f} CON VARIABLE ${variable}`);\n//   // const coeffs = nerdamer.coeffs(`${f}`, `${variable}`);\n//   // let lc = '';\n//   // coeffs.each(function(e, i) {\n//   //     console.log(`(${variable})^${i}: ${e.toString()}`);\n//   //     lc = e.toString();\n//   //  });\n//   //  return lc;\n// }\n// function lc(p){\n//     const split = p.split(/[-+]+/); // separa por + o -\n//     const expP = exp(p);\n//     split.forEach(element => {\n//         let expI = exp(nerdamer(`${element}`).toString());\n//         if(expEq(expP, expI))\n//             return\n//     });\n// }\n\n\nfunction expMinus(a, b) {\n  return [a[0] - b[0], a[1] - b[1], a[2] - b[2]];\n} // monomio lider\n\n\nfunction lm(f) {\n  return '';\n}\n\nfunction monomial(exp) {\n  return nerdamer(\"x^(\".concat(exp[0], \")y^(\").concat(exp[1], \")z^(\").concat(exp[2], \")\")).toString();\n}\n\nfunction division(f, dividers) {\n  console.log(\"INIT DIVISION \".concat(f, \" / (\").concat(dividers, \")\"));\n  var nSteps = 0;\n  var steps = {};\n  var step = [];\n  var s = dividers.length;\n  var p = f;\n  var r = 0;\n  var q = new Array(s).fill('0');\n\n  while (p !== '0') {\n    nSteps++;\n    var i = 0;\n    var divFound = 0;\n    console.log(\"========= p = \".concat(p, \" ==============\"));\n    var exp_p = exp(p);\n\n    while (i < s && divFound === 0) {\n      var exp_fi = exp(dividers[i]);\n      var gamma = expMinus(exp_p, exp_fi);\n      step = [];\n      console.log(\"PROBANDO DIVISION POR \".concat(dividers[i]));\n      console.log(\"\\texp(p)-exp(fi) = (\".concat(exp_p, \") - (\").concat(exp_fi, \") = (\").concat(gamma, \")\"));\n\n      if (gamma.every(function (item) {\n        return item >= 0;\n      })) {\n        console.log(\"\\tPODEMOS\");\n        var xGamma = monomial(gamma);\n        var lcp = lc(p, monomial(exp_p));\n        var lcfi = lc(dividers[i], monomial(exp_fi));\n        var coef = nerdamer(\"(\".concat(lcp, \")/(\").concat(lcfi, \") * \").concat(xGamma)).toString();\n        console.log(\"\\t\\tRESTAMOS (\".concat(coef, \") * (\").concat(dividers[i], \")\"));\n        var newQi = nerdamer(\"\".concat(q[i], \" + \").concat(coef)).expand().toString();\n        var newP = nerdamer(\"\".concat(p, \" - (\").concat(coef, \") * (\").concat(dividers[i], \")\")).expand().toString();\n        step.push(\"f = \".concat(p));\n        step.push(\"exp(f) - exp(f_i)= (\".concat(exp_p[0], \", \").concat(exp_p[1], \", \").concat(exp_p[2], \") - (\").concat(exp_fi[0], \", \").concat(exp_fi[1], \", \").concat(exp_fi[2], \") => We can divide\"));\n        step.push(\"q_i = (\".concat(q[i], \") + (\").concat(coef, \") = \").concat(newQi));\n        step.push(\"p = (\".concat(p, \") - (\").concat(coef, \" * (\").concat(dividers[i], \") ) = \").concat(newP));\n        q[i] = newQi;\n        p = newP;\n        divFound = 1;\n      } else {\n        console.log(\"\\tNO PODEMOS\");\n        i++;\n      }\n    }\n\n    if (divFound === 0) {\n      var LC = nerdamer(\"\".concat(lc(p, monomial(exp_p)))).toString();\n      var MON = nerdamer(\"\".concat(monomial(exp_p))).toString();\n      var lt = nerdamer(\"(\".concat(LC, \")*(\").concat(MON, \")\")).toString();\n      console.log(\"NO HEMOS PODIDO DIVIDIR POR NADA, QUITAMOS lt(p)= (\".concat(LC, \") * (\").concat(MON, \") = \").concat(lt));\n      var newR = nerdamer(\"\".concat(r, \" + \").concat(lt)).toString();\n\n      var _newP = nerdamer(\"\".concat(p, \" - \").concat(lt)).toString();\n\n      step.push('No division posible:');\n      step.push(\"lt(p) = (\".concat(LC, \")*(\").concat(MON, \") = \").concat(lt));\n      step.push(\"r = (\".concat(r, \") + lt(p) = \").concat(newR));\n      step.push(\"p = (\".concat(p, \") - lt(p) = \").concat(_newP));\n      r = newR;\n      p = _newP;\n    }\n\n    steps[\"step\".concat(nSteps)] = step;\n  }\n\n  console.log(\"Qs: \".concat(q));\n  console.log(\"R: \".concat(r));\n  console.log('COMPROBANDO...');\n  step = [];\n  var mult = '';\n  step.push(\"r = \".concat(r));\n  q.forEach(function (qi, i) {\n    step.push(\"q_i = \".concat(qi));\n    mult += nerdamer(\"(\".concat(qi, \")*(\").concat(dividers[i], \")\")).toString();\n    if (i < q.length - 1) mult += '+';\n  });\n  steps['result'] = step;\n  console.log(\"q1f1 + \\xB7\\xB7\\xB7 + qsfs = \".concat(mult));\n  var check = nerdamer(\"(\".concat(mult, \")-(\").concat(f, \") + \").concat(r)).expand().toString();\n  console.log(\"(\".concat(mult, \")-(\").concat(f, \") + \").concat(r, \" = \").concat(check));\n  console.log([].concat(_toConsumableArray(q), [r]));\n  console.log(steps);\n  return {\n    quotients: _toConsumableArray(q),\n    remainder: r,\n    steps: steps\n  };\n}\n\nfunction PolynomialInput(props) {\n  return /*#__PURE__*/React.createElement(TextField, {\n    sx: {\n      width: '100%'\n    },\n    value: props.val,\n    onChange: function onChange(e) {\n      return props.handleChange(e.target.value);\n    },\n    id: props.label,\n    error: props.val === '',\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }\n      }, props.label, \" = \")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction arrayCombinations(array) {\n  var result = array.flatMap(function (v, i) {\n    return array.slice(i + 1).map(function (w) {\n      return [v, w];\n    });\n  });\n  return result;\n}\n\nfunction lcm(alfa, beta) {\n  console.log(\"lcm(\".concat(alfa, \", \").concat(beta, \")\"));\n  console.log(typeof alfa);\n  console.log(alfa.length);\n  console.log(alfa[1]);\n\n  if (alfa.length !== beta.length) {\n    console.log(\"ERROR\");\n    return -1;\n  }\n\n  var res = [];\n\n  for (var i = 0; i < alfa.length; i++) {\n    console.log(Math.max(alfa[i], beta[i]));\n    res.push(Math.max(alfa[i], beta[i]));\n  }\n\n  console.log(res);\n  return res;\n}\n\nfunction sPol(f, g) {\n  var alpha = exp(f);\n  var beta = exp(g);\n  var gamma = lcm(alpha, beta);\n  console.log(\"lcm(f,g) = \".concat(gamma));\n  console.log(\"lc(g) = \".concat(lc(g, beta)));\n  var res = nerdamer(\"\\n  (\".concat(lc(g, monomial(beta)), \")*(\").concat(monomial(expMinus(gamma, alpha)), \")*(\").concat(f, \") \\n  - \\n  (\").concat(lc(f, monomial(alpha)), \")*(\").concat(monomial(expMinus(gamma, beta)), \")*(\").concat(g, \")\")).expand().toString();\n  console.log(\"S(\".concat(f, \", \").concat(g, \") = \").concat(res));\n  return res;\n}\n\nfunction Bucherberg(F) {\n  var maxIt = 10;\n  var currIt = 0;\n  var G = F;\n  var added;\n\n  do {\n    currIt++;\n    var newG = G;\n    var fgPairs = arrayCombinations(newG);\n\n    for (var i = 0; i < fgPairs.length; i++) {\n      var r = division(sPol(fgPairs[i][0], fgPairs[i][1]), newG).remainder;\n\n      if (r !== '0') {\n        G.concat(r);\n        added = true;\n      }\n    }\n  } while (added && currIt < maxIt);\n\n  console.log(G);\n  return G;\n}\n\nexport default function GrobnerPage() {\n  var _useState = useState('x^2*y + x*y^2 + y^2'),\n      _useState2 = _slicedToArray(_useState, 2),\n      dividendo = _useState2[0],\n      setDividendo = _useState2[1];\n\n  var _useState3 = useState(['x*y-1', 'y^2-1']),\n      _useState4 = _slicedToArray(_useState3, 2),\n      divisores = _useState4[0],\n      setDivisores = _useState4[1];\n\n  var handleDivisoresChange = function handleDivisoresChange(idx, val) {\n    var newDivisores = _toConsumableArray(divisores);\n\n    newDivisores[idx] = val;\n    setDivisores(newDivisores);\n  };\n\n  var handleDividendoChange = function handleDividendoChange(val) {\n    setDividendo(val);\n    lexify(val);\n  };\n\n  var handleDivision = function handleDivision() {\n    // const res = division(dividendo, divisores);\n    // console.log(res.quotients);\n    lc(2, 2);\n  };\n\n  var handleBase = function handleBase() {\n    Bucherberg(divisores);\n  };\n\n  var p = new Polynomial('-2x -y + x*y + y*z + z*y*z + 2*y*x');\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    spacing: 10,\n    padding: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }\n  }, \"AL ESCRIBIR POLINOMIOS INDICAR TODAS LAS MULTIPLICACIONES: NO xy, SINO x*y\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PolynomialInput, {\n    label: \"f\",\n    val: dividendo,\n    handleChange: function handleChange(v) {\n      return handleDividendoChange(v);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }\n  }, \"DIVIDERS\"), divisores.map(function (divisor, idx) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: \"dividerInput_\".concat(idx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PolynomialInput, {\n      label: \"f\".concat(idx + 1),\n      val: divisor,\n      handleChange: function handleChange(v) {\n        return handleDivisoresChange(idx, v);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: function onClick() {\n        setDivisores(divisores.splice(idx, 1));\n        console.log(divisores);\n      },\n      \"aria-label\": \"delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 19\n      }\n    }))));\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: function onClick() {\n      return setDivisores(divisores.concat(''));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 11\n    }\n  }, \"Add divider\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: function onClick() {\n      return handleDivision();\n    },\n    disabled: !divisores.every(function (item) {\n      return item !== '' && item !== '0';\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 11\n    }\n  }, \"Divide\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: function onClick() {\n      return handleBase();\n    },\n    disabled: !divisores.every(function (item) {\n      return item !== '' && item !== '0';\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 11\n    }\n  }, \"Groebner Base\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }\n  }, \"TODO\"));\n}","map":{"version":3,"names":["React","useState","useEfect","Grid","Divider","TextField","InputAdornment","newId","Button","DeleteIcon","IconButton","Maximize","SignalCellularNoSimOutlined","Polynomial","nerdamer","require","lexify","p","simplified","toString","error","console","log","expGrater","a","b","exp","split","res","forEach","element","degs","Number","expEq","e1","e2","lc","f","variable","expMinus","lm","monomial","division","dividers","nSteps","steps","step","s","length","r","q","Array","fill","i","divFound","exp_p","exp_fi","gamma","every","item","xGamma","lcp","lcfi","coef","newQi","expand","newP","push","LC","MON","lt","newR","mult","qi","check","quotients","remainder","PolynomialInput","props","width","val","e","handleChange","target","value","label","startAdornment","arrayCombinations","array","result","flatMap","v","slice","map","w","lcm","alfa","beta","Math","max","sPol","g","alpha","Bucherberg","F","maxIt","currIt","G","added","newG","fgPairs","concat","GrobnerPage","dividendo","setDividendo","divisores","setDivisores","handleDivisoresChange","idx","newDivisores","handleDividendoChange","handleDivision","handleBase","divisor","splice"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/GrobnerPage/GrobnerPage.js"],"sourcesContent":["import React, { useState, useEfect } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Divider from '@mui/material/Divider';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport newId from '../uniqueIdHook';\r\nimport Button from '@mui/material/Button';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { Maximize, SignalCellularNoSimOutlined } from '@mui/icons-material';\r\nimport Polynomial from '../Polynomial';\r\n\r\nconst nerdamer = require('nerdamer');\r\nrequire('nerdamer/Algebra');\r\n\r\n\r\n// [variable, exponent] both strings\r\n// function exp (p) {\r\n//     const v = ['x', 'y', 'z'];\r\n//     const degs = [nerdamer(`deg(${p}, x)`).toString(), nerdamer(`deg(${p}, y)`).toString(), nerdamer(`deg(${p}, z)`).toString()];\r\n//     const max = Math.max(...degs).toString();\r\n\r\n//     return [ v[degs.indexOf(max)] , max];\r\n// }\r\n\r\nfunction lexify(p) {\r\n  let simplified = '';\r\n\r\n  try {\r\n    simplified = nerdamer(`expand(${p})`).toString();\r\n  } catch (error) {\r\n    console.log(error);\r\n    return;\r\n  }\r\n  console.log(simplified);\r\n  return simplified;\r\n}\r\n\r\nfunction expGrater(a, b) {\r\n  return (\r\n    a[0] > b[0] ||\r\n    (a[0] == b[0] && a[1] > b[1]) ||\r\n    (a[0] == b[0] && a[1] == b[1] && a[2] > a[2])\r\n  );\r\n}\r\n\r\nfunction exp(p) {\r\n  const split = p.split(/[-+]+/); // separa por + o -\r\n  let res = ['0', '0', '0'];\r\n\r\n  split.forEach((element) => {\r\n    if (element === '') return;\r\n\r\n    let degs = [\r\n      Number(nerdamer(`deg(${element}, x)`).toString()),\r\n      Number(nerdamer(`deg(${element}, y)`).toString()),\r\n      Number(nerdamer(`deg(${element}, z)`).toString()),\r\n    ];\r\n\r\n    if (expGrater(degs, res)) res = degs;\r\n  });\r\n\r\n  return res;\r\n}\r\n\r\nfunction expEq(e1, e2) {\r\n  return e1[0] == e2[0] && e1[1] == e2[1] && e1[2] == e2[2];\r\n}\r\n\r\nfunction lc(f, variable){\r\n  console.log(Polynomial(\"(4+a)*x+3xy\"));\r\n}\r\n// function lc(f, variable) {\r\n//   let res = '0';\r\n\r\n//   // const split = f.split(/[-+]+/);\r\n//   // console.log(split);\r\n\r\n//   let split = '';\r\n\r\n//   for(let i=0; i<f.length; i++){\r\n//     let c = f[i];\r\n\r\n//     if(c==='-' || c==='+'){\r\n//       res.push(split);\r\n//       split = c;\r\n\r\n//     }\r\n\r\n//     split += c;\r\n    \r\n//   }\r\n\r\n//   split.forEach((element) => {\r\n//     if (element.includes(variable)) {\r\n//       if (isNaN(element[0])) res = '1';\r\n//       else res = element.match(/\\d+/);\r\n//       return;\r\n//     }\r\n//   });\r\n//   console.log(\"lc:\" + res);\r\n//   return res;\r\n\r\n//   console.log(`CALCULANDO LC DE ${f} CON VARIABLE ${variable}`);\r\n//   // const coeffs = nerdamer.coeffs(`${f}`, `${variable}`);\r\n//   // let lc = '';\r\n//   // coeffs.each(function(e, i) {\r\n//   //     console.log(`(${variable})^${i}: ${e.toString()}`);\r\n//   //     lc = e.toString();\r\n//   //  });\r\n\r\n//   //  return lc;\r\n// }\r\n\r\n// function lc(p){\r\n//     const split = p.split(/[-+]+/); // separa por + o -\r\n//     const expP = exp(p);\r\n\r\n//     split.forEach(element => {\r\n//         let expI = exp(nerdamer(`${element}`).toString());\r\n//         if(expEq(expP, expI))\r\n//             return\r\n//     });\r\n// }\r\n\r\nfunction expMinus(a, b) {\r\n  return [a[0] - b[0], a[1] - b[1], a[2] - b[2]];\r\n}\r\n\r\n// monomio lider\r\nfunction lm(f) {\r\n  return '';\r\n}\r\n\r\nfunction monomial(exp) {\r\n  return nerdamer(`x^(${exp[0]})y^(${exp[1]})z^(${exp[2]})`).toString();\r\n}\r\n\r\nfunction division(f, dividers) {\r\n  console.log(`INIT DIVISION ${f} / (${dividers})`);\r\n  let nSteps = 0;\r\n  let steps = {};\r\n  let step = [];\r\n\r\n  const s = dividers.length;\r\n  let p = f;\r\n  let r = 0;\r\n  let q = new Array(s).fill('0');\r\n\r\n  while (p !== '0') {\r\n    nSteps++;\r\n    let i = 0;\r\n    let divFound = 0;\r\n    console.log(`========= p = ${p} ==============`);\r\n    const exp_p = exp(p);\r\n\r\n    while (i < s && divFound === 0) {\r\n      const exp_fi = exp(dividers[i]);\r\n      const gamma = expMinus(exp_p, exp_fi);\r\n\r\n      step = [];\r\n      console.log(`PROBANDO DIVISION POR ${dividers[i]}`);\r\n      console.log(`\\texp(p)-exp(fi) = (${exp_p}) - (${exp_fi}) = (${gamma})`);\r\n      if (gamma.every((item) => item >= 0)) {\r\n        console.log(`\\tPODEMOS`);\r\n        const xGamma = monomial(gamma);\r\n        const lcp = lc(p, monomial(exp_p));\r\n        const lcfi = lc(dividers[i], monomial(exp_fi));\r\n\r\n        const coef = nerdamer(`(${lcp})/(${lcfi}) * ${xGamma}`).toString();\r\n\r\n        console.log(`\\t\\tRESTAMOS (${coef}) * (${dividers[i]})`);\r\n\r\n        let newQi = nerdamer(`${q[i]} + ${coef}`).expand().toString();\r\n        let newP = nerdamer(`${p} - (${coef}) * (${dividers[i]})`)\r\n          .expand()\r\n          .toString();\r\n\r\n        step.push(`f = ${p}`);\r\n        step.push(\r\n          `exp(f) - exp(f_i)= (${exp_p[0]}, ${exp_p[1]}, ${exp_p[2]}) - (${exp_fi[0]}, ${exp_fi[1]}, ${exp_fi[2]}) => We can divide`\r\n        );\r\n        step.push(`q_i = (${q[i]}) + (${coef}) = ${newQi}`);\r\n        step.push(`p = (${p}) - (${coef} * (${dividers[i]}) ) = ${newP}`);\r\n\r\n        q[i] = newQi;\r\n        p = newP;\r\n        divFound = 1;\r\n      } else {\r\n        console.log(`\\tNO PODEMOS`);\r\n        i++;\r\n      }\r\n    }\r\n    if (divFound === 0) {\r\n      const LC = nerdamer(`${lc(p, monomial(exp_p))}`).toString();\r\n      const MON = nerdamer(`${monomial(exp_p)}`).toString();\r\n\r\n      const lt = nerdamer(`(${LC})*(${MON})`).toString();\r\n\r\n      console.log(\r\n        `NO HEMOS PODIDO DIVIDIR POR NADA, QUITAMOS lt(p)= (${LC}) * (${MON}) = ${lt}`\r\n      );\r\n      const newR = nerdamer(`${r} + ${lt}`).toString();\r\n      const newP = nerdamer(`${p} - ${lt}`).toString();\r\n\r\n      step.push('No division posible:');\r\n      step.push(`lt(p) = (${LC})*(${MON}) = ${lt}`);\r\n      step.push(`r = (${r}) + lt(p) = ${newR}`);\r\n      step.push(`p = (${p}) - lt(p) = ${newP}`);\r\n\r\n      r = newR;\r\n      p = newP;\r\n    }\r\n\r\n    steps[`step${nSteps}`] = step;\r\n  }\r\n\r\n  console.log(`Qs: ${q}`);\r\n  console.log(`R: ${r}`);\r\n\r\n  console.log('COMPROBANDO...');\r\n\r\n  step = [];\r\n\r\n  let mult = '';\r\n  step.push(`r = ${r}`);\r\n  q.forEach((qi, i) => {\r\n    step.push(`q_i = ${qi}`);\r\n    mult += nerdamer(`(${qi})*(${dividers[i]})`).toString();\r\n    if (i < q.length - 1) mult += '+';\r\n  });\r\n\r\n  steps['result'] = step;\r\n\r\n  console.log(`q1f1 + ··· + qsfs = ${mult}`);\r\n  const check = nerdamer(`(${mult})-(${f}) + ${r}`).expand().toString();\r\n  console.log(`(${mult})-(${f}) + ${r} = ${check}`);\r\n\r\n  console.log([...q, r]);\r\n  console.log(steps);\r\n\r\n  return {\r\n    quotients: [...q],\r\n    remainder: r,\r\n    steps: steps,\r\n  };\r\n}\r\n\r\nfunction PolynomialInput(props) {\r\n  return (\r\n    <TextField\r\n      sx={{ width: '100%' }}\r\n      value={props.val}\r\n      onChange={(e) => props.handleChange(e.target.value)}\r\n      id={props.label}\r\n      error={props.val === ''}\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">{props.label} = </InputAdornment>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction arrayCombinations(array) {\r\n  var result = array.flatMap((v, i) => array.slice(i + 1).map((w) => [v, w]));\r\n  return result;\r\n}\r\n\r\nfunction lcm(alfa, beta) {\r\n  console.log(`lcm(${alfa}, ${beta})`);\r\n  console.log(typeof(alfa));\r\n  console.log(alfa.length);\r\n  console.log(alfa[1]);\r\n  if(alfa.length !== beta.length){\r\n    console.log(\"ERROR\");\r\n    return -1;\r\n  }\r\n\r\n  let res = [];\r\n\r\n  for(let i=0; i<alfa.length; i++){\r\n    console.log(Math.max(alfa[i], beta[i]));\r\n    res.push(Math.max(alfa[i], beta[i]));\r\n  }\r\n\r\n  console.log(res);\r\n  return res;\r\n}\r\n\r\nfunction sPol(f, g) {\r\n  const alpha = exp(f);\r\n  const beta = exp(g);\r\n  const gamma = lcm(alpha, beta);\r\n  console.log(`lcm(f,g) = ${gamma}`);\r\n  console.log(`lc(g) = ${lc(g, beta)}`);\r\n  const res = nerdamer(`\r\n  (${lc(g, monomial(beta))})*(${monomial(expMinus(gamma, alpha))})*(${f}) \r\n  - \r\n  (${lc(f, monomial(alpha))})*(${monomial(expMinus(gamma, beta))})*(${g})`)\r\n    .expand()\r\n    .toString();\r\n\r\n  console.log(`S(${f}, ${g}) = ${res}`);\r\n  return res;\r\n}\r\n\r\nfunction Bucherberg(F) {\r\n  const maxIt = 10;\r\n  let currIt = 0;\r\n  let G = F;\r\n  let added;\r\n\r\n  do {\r\n    currIt++;\r\n    let newG = G;\r\n    const fgPairs = arrayCombinations(newG);\r\n\r\n    for (let i = 0; i < fgPairs.length; i++) {\r\n      const r = division(sPol(fgPairs[i][0], fgPairs[i][1]), newG).remainder;\r\n      if (r !== '0') {\r\n        G.concat(r);\r\n        added = true;\r\n      }\r\n    }\r\n  } while (added && currIt<maxIt);\r\n\r\n  console.log(G);\r\n  return G;\r\n}\r\n\r\nexport default function GrobnerPage() {\r\n  const [dividendo, setDividendo] = useState('x^2*y + x*y^2 + y^2');\r\n  const [divisores, setDivisores] = useState(['x*y-1', 'y^2-1']);\r\n\r\n  const handleDivisoresChange = (idx, val) => {\r\n    let newDivisores = [...divisores];\r\n    newDivisores[idx] = val;\r\n    setDivisores(newDivisores);\r\n  };\r\n\r\n  const handleDividendoChange = (val) => {\r\n    setDividendo(val);\r\n    lexify(val);\r\n  };\r\n\r\n  const handleDivision = () => {\r\n    // const res = division(dividendo, divisores);\r\n\r\n    // console.log(res.quotients);\r\n\r\n    lc(2,2);\r\n  };\r\n\r\n  const handleBase = () => {\r\n    Bucherberg(divisores);\r\n  };\r\n\r\n  const p = new Polynomial('-2x -y + x*y + y*z + z*y*z + 2*y*x');\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"flex-start\"\r\n      alignItems=\"flex-start\"\r\n      spacing={10}\r\n      padding={2}\r\n    >\r\n      \r\n      <Grid item xs={12}>\r\n        {/* Hola:{exp('2x^2 + y^3').toString()}\r\n        coefs: {nerdamer.coeffs('x^2 -99x^2+6x-9x^6+y^3+ xy', 'x').toString()   }\r\n        lc: {lc('9x^9+6y^8', 'y')} */}\r\n        AL ESCRIBIR POLINOMIOS INDICAR TODAS LAS MULTIPLICACIONES: NO xy, SINO\r\n        x*y\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <PolynomialInput\r\n          label={`f`}\r\n          val={dividendo}\r\n          handleChange={(v) => handleDividendoChange(v)}\r\n        />\r\n        <Divider>DIVIDERS</Divider>\r\n        {divisores.map(function (divisor, idx) {\r\n          return (\r\n            <div key={`dividerInput_${idx}`}>\r\n              <Grid item xs={10}>\r\n                <PolynomialInput\r\n                  label={`f${idx + 1}`}\r\n                  val={divisor}\r\n                  handleChange={(v) => handleDivisoresChange(idx, v)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    setDivisores(divisores.splice(idx, 1));\r\n                    console.log(divisores);\r\n                  }}\r\n                  aria-label=\"delete\"\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => setDivisores(divisores.concat(''))}\r\n          >\r\n            Add divider\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => handleDivision()}\r\n            disabled={!divisores.every((item) => item !== '' && item !== '0')}\r\n          >\r\n            Divide\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => handleBase()}\r\n            disabled={!divisores.every((item) => item !== '' && item !== '0')}\r\n          >\r\n            Groebner Base\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        TODO\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,QAAT,EAAmBC,2BAAnB,QAAsD,qBAAtD;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,IAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACAA,OAAO,CAAC,kBAAD,CAAP,C,CAGA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,SAASC,MAAT,CAAgBC,CAAhB,EAAmB;EACjB,IAAIC,UAAU,GAAG,EAAjB;;EAEA,IAAI;IACFA,UAAU,GAAGJ,QAAQ,kBAAWG,CAAX,OAAR,CAAyBE,QAAzB,EAAb;EACD,CAFD,CAEE,OAAOC,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACA;EACD;;EACDC,OAAO,CAACC,GAAR,CAAYJ,UAAZ;EACA,OAAOA,UAAP;AACD;;AAED,SAASK,SAAT,CAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;EACvB,OACED,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAR,IACCD,CAAC,CAAC,CAAD,CAAD,IAAQC,CAAC,CAAC,CAAD,CAAT,IAAgBD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CADzB,IAECD,CAAC,CAAC,CAAD,CAAD,IAAQC,CAAC,CAAC,CAAD,CAAT,IAAgBD,CAAC,CAAC,CAAD,CAAD,IAAQC,CAAC,CAAC,CAAD,CAAzB,IAAgCD,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAH3C;AAKD;;AAED,SAASE,GAAT,CAAaT,CAAb,EAAgB;EACd,IAAMU,KAAK,GAAGV,CAAC,CAACU,KAAF,CAAQ,OAAR,CAAd,CADc,CACkB;;EAChC,IAAIC,GAAG,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAV;EAEAD,KAAK,CAACE,OAAN,CAAc,UAACC,OAAD,EAAa;IACzB,IAAIA,OAAO,KAAK,EAAhB,EAAoB;IAEpB,IAAIC,IAAI,GAAG,CACTC,MAAM,CAAClB,QAAQ,eAAQgB,OAAR,UAAR,CAA+BX,QAA/B,EAAD,CADG,EAETa,MAAM,CAAClB,QAAQ,eAAQgB,OAAR,UAAR,CAA+BX,QAA/B,EAAD,CAFG,EAGTa,MAAM,CAAClB,QAAQ,eAAQgB,OAAR,UAAR,CAA+BX,QAA/B,EAAD,CAHG,CAAX;IAMA,IAAII,SAAS,CAACQ,IAAD,EAAOH,GAAP,CAAb,EAA0BA,GAAG,GAAGG,IAAN;EAC3B,CAVD;EAYA,OAAOH,GAAP;AACD;;AAED,SAASK,KAAT,CAAeC,EAAf,EAAmBC,EAAnB,EAAuB;EACrB,OAAOD,EAAE,CAAC,CAAD,CAAF,IAASC,EAAE,CAAC,CAAD,CAAX,IAAkBD,EAAE,CAAC,CAAD,CAAF,IAASC,EAAE,CAAC,CAAD,CAA7B,IAAoCD,EAAE,CAAC,CAAD,CAAF,IAASC,EAAE,CAAC,CAAD,CAAtD;AACD;;AAED,SAASC,EAAT,CAAYC,CAAZ,EAAeC,QAAf,EAAwB;EACtBjB,OAAO,CAACC,GAAR,CAAYT,UAAU,CAAC,aAAD,CAAtB;AACD,C,CACD;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAS0B,QAAT,CAAkBf,CAAlB,EAAqBC,CAArB,EAAwB;EACtB,OAAO,CAACD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAT,EAAcD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAtB,EAA2BD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAnC,CAAP;AACD,C,CAED;;;AACA,SAASe,EAAT,CAAYH,CAAZ,EAAe;EACb,OAAO,EAAP;AACD;;AAED,SAASI,QAAT,CAAkBf,GAAlB,EAAuB;EACrB,OAAOZ,QAAQ,cAAOY,GAAG,CAAC,CAAD,CAAV,iBAAoBA,GAAG,CAAC,CAAD,CAAvB,iBAAiCA,GAAG,CAAC,CAAD,CAApC,OAAR,CAAoDP,QAApD,EAAP;AACD;;AAED,SAASuB,QAAT,CAAkBL,CAAlB,EAAqBM,QAArB,EAA+B;EAC7BtB,OAAO,CAACC,GAAR,yBAA6Be,CAA7B,iBAAqCM,QAArC;EACA,IAAIC,MAAM,GAAG,CAAb;EACA,IAAIC,KAAK,GAAG,EAAZ;EACA,IAAIC,IAAI,GAAG,EAAX;EAEA,IAAMC,CAAC,GAAGJ,QAAQ,CAACK,MAAnB;EACA,IAAI/B,CAAC,GAAGoB,CAAR;EACA,IAAIY,CAAC,GAAG,CAAR;EACA,IAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAUJ,CAAV,EAAaK,IAAb,CAAkB,GAAlB,CAAR;;EAEA,OAAOnC,CAAC,KAAK,GAAb,EAAkB;IAChB2B,MAAM;IACN,IAAIS,CAAC,GAAG,CAAR;IACA,IAAIC,QAAQ,GAAG,CAAf;IACAjC,OAAO,CAACC,GAAR,yBAA6BL,CAA7B;IACA,IAAMsC,KAAK,GAAG7B,GAAG,CAACT,CAAD,CAAjB;;IAEA,OAAOoC,CAAC,GAAGN,CAAJ,IAASO,QAAQ,KAAK,CAA7B,EAAgC;MAC9B,IAAME,MAAM,GAAG9B,GAAG,CAACiB,QAAQ,CAACU,CAAD,CAAT,CAAlB;MACA,IAAMI,KAAK,GAAGlB,QAAQ,CAACgB,KAAD,EAAQC,MAAR,CAAtB;MAEAV,IAAI,GAAG,EAAP;MACAzB,OAAO,CAACC,GAAR,iCAAqCqB,QAAQ,CAACU,CAAD,CAA7C;MACAhC,OAAO,CAACC,GAAR,+BAAmCiC,KAAnC,kBAAgDC,MAAhD,kBAA8DC,KAA9D;;MACA,IAAIA,KAAK,CAACC,KAAN,CAAY,UAACC,IAAD;QAAA,OAAUA,IAAI,IAAI,CAAlB;MAAA,CAAZ,CAAJ,EAAsC;QACpCtC,OAAO,CAACC,GAAR;QACA,IAAMsC,MAAM,GAAGnB,QAAQ,CAACgB,KAAD,CAAvB;QACA,IAAMI,GAAG,GAAGzB,EAAE,CAACnB,CAAD,EAAIwB,QAAQ,CAACc,KAAD,CAAZ,CAAd;QACA,IAAMO,IAAI,GAAG1B,EAAE,CAACO,QAAQ,CAACU,CAAD,CAAT,EAAcZ,QAAQ,CAACe,MAAD,CAAtB,CAAf;QAEA,IAAMO,IAAI,GAAGjD,QAAQ,YAAK+C,GAAL,gBAAcC,IAAd,iBAAyBF,MAAzB,EAAR,CAA2CzC,QAA3C,EAAb;QAEAE,OAAO,CAACC,GAAR,yBAA6ByC,IAA7B,kBAAyCpB,QAAQ,CAACU,CAAD,CAAjD;QAEA,IAAIW,KAAK,GAAGlD,QAAQ,WAAIoC,CAAC,CAACG,CAAD,CAAL,gBAAcU,IAAd,EAAR,CAA8BE,MAA9B,GAAuC9C,QAAvC,EAAZ;QACA,IAAI+C,IAAI,GAAGpD,QAAQ,WAAIG,CAAJ,iBAAY8C,IAAZ,kBAAwBpB,QAAQ,CAACU,CAAD,CAAhC,OAAR,CACRY,MADQ,GAER9C,QAFQ,EAAX;QAIA2B,IAAI,CAACqB,IAAL,eAAiBlD,CAAjB;QACA6B,IAAI,CAACqB,IAAL,+BACyBZ,KAAK,CAAC,CAAD,CAD9B,eACsCA,KAAK,CAAC,CAAD,CAD3C,eACmDA,KAAK,CAAC,CAAD,CADxD,kBACmEC,MAAM,CAAC,CAAD,CADzE,eACiFA,MAAM,CAAC,CAAD,CADvF,eAC+FA,MAAM,CAAC,CAAD,CADrG;QAGAV,IAAI,CAACqB,IAAL,kBAAoBjB,CAAC,CAACG,CAAD,CAArB,kBAAgCU,IAAhC,iBAA2CC,KAA3C;QACAlB,IAAI,CAACqB,IAAL,gBAAkBlD,CAAlB,kBAA2B8C,IAA3B,iBAAsCpB,QAAQ,CAACU,CAAD,CAA9C,mBAA0Da,IAA1D;QAEAhB,CAAC,CAACG,CAAD,CAAD,GAAOW,KAAP;QACA/C,CAAC,GAAGiD,IAAJ;QACAZ,QAAQ,GAAG,CAAX;MACD,CAzBD,MAyBO;QACLjC,OAAO,CAACC,GAAR;QACA+B,CAAC;MACF;IACF;;IACD,IAAIC,QAAQ,KAAK,CAAjB,EAAoB;MAClB,IAAMc,EAAE,GAAGtD,QAAQ,WAAIsB,EAAE,CAACnB,CAAD,EAAIwB,QAAQ,CAACc,KAAD,CAAZ,CAAN,EAAR,CAAsCpC,QAAtC,EAAX;MACA,IAAMkD,GAAG,GAAGvD,QAAQ,WAAI2B,QAAQ,CAACc,KAAD,CAAZ,EAAR,CAA+BpC,QAA/B,EAAZ;MAEA,IAAMmD,EAAE,GAAGxD,QAAQ,YAAKsD,EAAL,gBAAaC,GAAb,OAAR,CAA6BlD,QAA7B,EAAX;MAEAE,OAAO,CAACC,GAAR,8DACwD8C,EADxD,kBACkEC,GADlE,iBAC4EC,EAD5E;MAGA,IAAMC,IAAI,GAAGzD,QAAQ,WAAImC,CAAJ,gBAAWqB,EAAX,EAAR,CAAyBnD,QAAzB,EAAb;;MACA,IAAM+C,KAAI,GAAGpD,QAAQ,WAAIG,CAAJ,gBAAWqD,EAAX,EAAR,CAAyBnD,QAAzB,EAAb;;MAEA2B,IAAI,CAACqB,IAAL,CAAU,sBAAV;MACArB,IAAI,CAACqB,IAAL,oBAAsBC,EAAtB,gBAA8BC,GAA9B,iBAAwCC,EAAxC;MACAxB,IAAI,CAACqB,IAAL,gBAAkBlB,CAAlB,yBAAkCsB,IAAlC;MACAzB,IAAI,CAACqB,IAAL,gBAAkBlD,CAAlB,yBAAkCiD,KAAlC;MAEAjB,CAAC,GAAGsB,IAAJ;MACAtD,CAAC,GAAGiD,KAAJ;IACD;;IAEDrB,KAAK,eAAQD,MAAR,EAAL,GAAyBE,IAAzB;EACD;;EAEDzB,OAAO,CAACC,GAAR,eAAmB4B,CAAnB;EACA7B,OAAO,CAACC,GAAR,cAAkB2B,CAAlB;EAEA5B,OAAO,CAACC,GAAR,CAAY,gBAAZ;EAEAwB,IAAI,GAAG,EAAP;EAEA,IAAI0B,IAAI,GAAG,EAAX;EACA1B,IAAI,CAACqB,IAAL,eAAiBlB,CAAjB;EACAC,CAAC,CAACrB,OAAF,CAAU,UAAC4C,EAAD,EAAKpB,CAAL,EAAW;IACnBP,IAAI,CAACqB,IAAL,iBAAmBM,EAAnB;IACAD,IAAI,IAAI1D,QAAQ,YAAK2D,EAAL,gBAAa9B,QAAQ,CAACU,CAAD,CAArB,OAAR,CAAqClC,QAArC,EAAR;IACA,IAAIkC,CAAC,GAAGH,CAAC,CAACF,MAAF,GAAW,CAAnB,EAAsBwB,IAAI,IAAI,GAAR;EACvB,CAJD;EAMA3B,KAAK,CAAC,QAAD,CAAL,GAAkBC,IAAlB;EAEAzB,OAAO,CAACC,GAAR,wCAAmCkD,IAAnC;EACA,IAAME,KAAK,GAAG5D,QAAQ,YAAK0D,IAAL,gBAAenC,CAAf,iBAAuBY,CAAvB,EAAR,CAAoCgB,MAApC,GAA6C9C,QAA7C,EAAd;EACAE,OAAO,CAACC,GAAR,YAAgBkD,IAAhB,gBAA0BnC,CAA1B,iBAAkCY,CAAlC,gBAAyCyB,KAAzC;EAEArD,OAAO,CAACC,GAAR,8BAAgB4B,CAAhB,IAAmBD,CAAnB;EACA5B,OAAO,CAACC,GAAR,CAAYuB,KAAZ;EAEA,OAAO;IACL8B,SAAS,qBAAMzB,CAAN,CADJ;IAEL0B,SAAS,EAAE3B,CAFN;IAGLJ,KAAK,EAAEA;EAHF,CAAP;AAKD;;AAED,SAASgC,eAAT,CAAyBC,KAAzB,EAAgC;EAC9B,oBACE,oBAAC,SAAD;IACE,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAT,CADN;IAEE,KAAK,EAAED,KAAK,CAACE,GAFf;IAGE,QAAQ,EAAE,kBAACC,CAAD;MAAA,OAAOH,KAAK,CAACI,YAAN,CAAmBD,CAAC,CAACE,MAAF,CAASC,KAA5B,CAAP;IAAA,CAHZ;IAIE,EAAE,EAAEN,KAAK,CAACO,KAJZ;IAKE,KAAK,EAAEP,KAAK,CAACE,GAAN,KAAc,EALvB;IAME,UAAU,EAAE;MACVM,cAAc,eACZ,oBAAC,cAAD;QAAgB,QAAQ,EAAC,OAAzB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAkCR,KAAK,CAACO,KAAxC;IAFQ,CANd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF;AAcD;;AAED,SAASE,iBAAT,CAA2BC,KAA3B,EAAkC;EAChC,IAAIC,MAAM,GAAGD,KAAK,CAACE,OAAN,CAAc,UAACC,CAAD,EAAItC,CAAJ;IAAA,OAAUmC,KAAK,CAACI,KAAN,CAAYvC,CAAC,GAAG,CAAhB,EAAmBwC,GAAnB,CAAuB,UAACC,CAAD;MAAA,OAAO,CAACH,CAAD,EAAIG,CAAJ,CAAP;IAAA,CAAvB,CAAV;EAAA,CAAd,CAAb;EACA,OAAOL,MAAP;AACD;;AAED,SAASM,GAAT,CAAaC,IAAb,EAAmBC,IAAnB,EAAyB;EACvB5E,OAAO,CAACC,GAAR,eAAmB0E,IAAnB,eAA4BC,IAA5B;EACA5E,OAAO,CAACC,GAAR,CAAY,OAAO0E,IAAnB;EACA3E,OAAO,CAACC,GAAR,CAAY0E,IAAI,CAAChD,MAAjB;EACA3B,OAAO,CAACC,GAAR,CAAY0E,IAAI,CAAC,CAAD,CAAhB;;EACA,IAAGA,IAAI,CAAChD,MAAL,KAAgBiD,IAAI,CAACjD,MAAxB,EAA+B;IAC7B3B,OAAO,CAACC,GAAR,CAAY,OAAZ;IACA,OAAO,CAAC,CAAR;EACD;;EAED,IAAIM,GAAG,GAAG,EAAV;;EAEA,KAAI,IAAIyB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC2C,IAAI,CAAChD,MAApB,EAA4BK,CAAC,EAA7B,EAAgC;IAC9BhC,OAAO,CAACC,GAAR,CAAY4E,IAAI,CAACC,GAAL,CAASH,IAAI,CAAC3C,CAAD,CAAb,EAAkB4C,IAAI,CAAC5C,CAAD,CAAtB,CAAZ;IACAzB,GAAG,CAACuC,IAAJ,CAAS+B,IAAI,CAACC,GAAL,CAASH,IAAI,CAAC3C,CAAD,CAAb,EAAkB4C,IAAI,CAAC5C,CAAD,CAAtB,CAAT;EACD;;EAEDhC,OAAO,CAACC,GAAR,CAAYM,GAAZ;EACA,OAAOA,GAAP;AACD;;AAED,SAASwE,IAAT,CAAc/D,CAAd,EAAiBgE,CAAjB,EAAoB;EAClB,IAAMC,KAAK,GAAG5E,GAAG,CAACW,CAAD,CAAjB;EACA,IAAM4D,IAAI,GAAGvE,GAAG,CAAC2E,CAAD,CAAhB;EACA,IAAM5C,KAAK,GAAGsC,GAAG,CAACO,KAAD,EAAQL,IAAR,CAAjB;EACA5E,OAAO,CAACC,GAAR,sBAA0BmC,KAA1B;EACApC,OAAO,CAACC,GAAR,mBAAuBc,EAAE,CAACiE,CAAD,EAAIJ,IAAJ,CAAzB;EACA,IAAMrE,GAAG,GAAGd,QAAQ,gBACjBsB,EAAE,CAACiE,CAAD,EAAI5D,QAAQ,CAACwD,IAAD,CAAZ,CADe,gBACUxD,QAAQ,CAACF,QAAQ,CAACkB,KAAD,EAAQ6C,KAAR,CAAT,CADlB,gBACgDjE,CADhD,0BAGjBD,EAAE,CAACC,CAAD,EAAII,QAAQ,CAAC6D,KAAD,CAAZ,CAHe,gBAGW7D,QAAQ,CAACF,QAAQ,CAACkB,KAAD,EAAQwC,IAAR,CAAT,CAHnB,gBAGgDI,CAHhD,OAAR,CAITpC,MAJS,GAKT9C,QALS,EAAZ;EAOAE,OAAO,CAACC,GAAR,aAAiBe,CAAjB,eAAuBgE,CAAvB,iBAA+BzE,GAA/B;EACA,OAAOA,GAAP;AACD;;AAED,SAAS2E,UAAT,CAAoBC,CAApB,EAAuB;EACrB,IAAMC,KAAK,GAAG,EAAd;EACA,IAAIC,MAAM,GAAG,CAAb;EACA,IAAIC,CAAC,GAAGH,CAAR;EACA,IAAII,KAAJ;;EAEA,GAAG;IACDF,MAAM;IACN,IAAIG,IAAI,GAAGF,CAAX;IACA,IAAMG,OAAO,GAAGvB,iBAAiB,CAACsB,IAAD,CAAjC;;IAEA,KAAK,IAAIxD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyD,OAAO,CAAC9D,MAA5B,EAAoCK,CAAC,EAArC,EAAyC;MACvC,IAAMJ,CAAC,GAAGP,QAAQ,CAAC0D,IAAI,CAACU,OAAO,CAACzD,CAAD,CAAP,CAAW,CAAX,CAAD,EAAgByD,OAAO,CAACzD,CAAD,CAAP,CAAW,CAAX,CAAhB,CAAL,EAAqCwD,IAArC,CAAR,CAAmDjC,SAA7D;;MACA,IAAI3B,CAAC,KAAK,GAAV,EAAe;QACb0D,CAAC,CAACI,MAAF,CAAS9D,CAAT;QACA2D,KAAK,GAAG,IAAR;MACD;IACF;EACF,CAZD,QAYSA,KAAK,IAAIF,MAAM,GAACD,KAZzB;;EAcApF,OAAO,CAACC,GAAR,CAAYqF,CAAZ;EACA,OAAOA,CAAP;AACD;;AAED,eAAe,SAASK,WAAT,GAAuB;EACpC,gBAAkC/G,QAAQ,CAAC,qBAAD,CAA1C;EAAA;EAAA,IAAOgH,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAAkCjH,QAAQ,CAAC,CAAC,OAAD,EAAU,OAAV,CAAD,CAA1C;EAAA;EAAA,IAAOkH,SAAP;EAAA,IAAkBC,YAAlB;;EAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,GAAD,EAAMtC,GAAN,EAAc;IAC1C,IAAIuC,YAAY,sBAAOJ,SAAP,CAAhB;;IACAI,YAAY,CAACD,GAAD,CAAZ,GAAoBtC,GAApB;IACAoC,YAAY,CAACG,YAAD,CAAZ;EACD,CAJD;;EAMA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACxC,GAAD,EAAS;IACrCkC,YAAY,CAAClC,GAAD,CAAZ;IACAhE,MAAM,CAACgE,GAAD,CAAN;EACD,CAHD;;EAKA,IAAMyC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IAC3B;IAEA;IAEArF,EAAE,CAAC,CAAD,EAAG,CAAH,CAAF;EACD,CAND;;EAQA,IAAMsF,UAAU,GAAG,SAAbA,UAAa,GAAM;IACvBnB,UAAU,CAACY,SAAD,CAAV;EACD,CAFD;;EAIA,IAAMlG,CAAC,GAAG,IAAIJ,UAAJ,CAAe,oCAAf,CAAV;EAEA,oBACE,oBAAC,IAAD;IACE,SAAS,MADX;IAEE,cAAc,EAAC,YAFjB;IAGE,UAAU,EAAC,YAHb;IAIE,OAAO,EAAE,EAJX;IAKE,OAAO,EAAE,CALX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAQE,oBAAC,IAAD;IAAM,IAAI,MAAV;IAAW,EAAE,EAAE,EAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gFARF,eAeE,oBAAC,IAAD;IAAM,IAAI,MAAV;IAAW,EAAE,EAAE,CAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,eAAD;IACE,KAAK,KADP;IAEE,GAAG,EAAEoG,SAFP;IAGE,YAAY,EAAE,sBAACtB,CAAD;MAAA,OAAO6B,qBAAqB,CAAC7B,CAAD,CAA5B;IAAA,CAHhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAME,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cANF,EAOGwB,SAAS,CAACtB,GAAV,CAAc,UAAU8B,OAAV,EAAmBL,GAAnB,EAAwB;IACrC,oBACE;MAAK,GAAG,yBAAkBA,GAAlB,CAAR;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,IAAD;MAAM,IAAI,MAAV;MAAW,EAAE,EAAE,EAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,eAAD;MACE,KAAK,aAAMA,GAAG,GAAG,CAAZ,CADP;MAEE,GAAG,EAAEK,OAFP;MAGE,YAAY,EAAE,sBAAChC,CAAD;QAAA,OAAO0B,qBAAqB,CAACC,GAAD,EAAM3B,CAAN,CAA5B;MAAA,CAHhB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF,CADF,eAQE,oBAAC,IAAD;MAAM,IAAI,MAAV;MAAW,EAAE,EAAE,CAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,UAAD;MACE,OAAO,EAAE,mBAAM;QACbyB,YAAY,CAACD,SAAS,CAACS,MAAV,CAAiBN,GAAjB,EAAsB,CAAtB,CAAD,CAAZ;QACAjG,OAAO,CAACC,GAAR,CAAY6F,SAAZ;MACD,CAJH;MAKE,cAAW,QALb;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAOE,oBAAC,UAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAPF,CADF,CARF,CADF;EAsBD,CAvBA,CAPH,eAgCE,oBAAC,IAAD;IAAM,IAAI,MAAV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAD;IACE,OAAO,EAAC,WADV;IAEE,OAAO,EAAE;MAAA,OAAMC,YAAY,CAACD,SAAS,CAACJ,MAAV,CAAiB,EAAjB,CAAD,CAAlB;IAAA,CAFX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBADF,eAOE,oBAAC,MAAD;IACE,OAAO,EAAC,WADV;IAEE,OAAO,EAAE;MAAA,OAAMU,cAAc,EAApB;IAAA,CAFX;IAGE,QAAQ,EAAE,CAACN,SAAS,CAACzD,KAAV,CAAgB,UAACC,IAAD;MAAA,OAAUA,IAAI,KAAK,EAAT,IAAeA,IAAI,KAAK,GAAlC;IAAA,CAAhB,CAHb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAPF,eAcE,oBAAC,MAAD;IACE,OAAO,EAAC,WADV;IAEE,OAAO,EAAE;MAAA,OAAM+D,UAAU,EAAhB;IAAA,CAFX;IAGE,QAAQ,EAAE,CAACP,SAAS,CAACzD,KAAV,CAAgB,UAACC,IAAD;MAAA,OAAUA,IAAI,KAAK,EAAT,IAAeA,IAAI,KAAK,GAAlC;IAAA,CAAhB,CAHb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAdF,CAhCF,CAfF,eAuEE,oBAAC,IAAD;IAAM,IAAI,MAAV;IAAW,EAAE,EAAE,CAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,UAvEF,CADF;AA6ED"},"metadata":{},"sourceType":"module"}