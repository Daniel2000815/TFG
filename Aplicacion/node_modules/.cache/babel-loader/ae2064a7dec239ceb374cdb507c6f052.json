{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MmlMaction = void 0;\n\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\n\nvar MmlMaction = function (_super) {\n  __extends(MmlMaction, _super);\n\n  function MmlMaction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MmlMaction.prototype, \"kind\", {\n    get: function get() {\n      return 'maction';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMaction.prototype, \"arity\", {\n    get: function get() {\n      return 1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMaction.prototype, \"selected\", {\n    get: function get() {\n      var selection = this.attributes.get('selection');\n      var i = Math.max(1, Math.min(this.childNodes.length, selection)) - 1;\n      return this.childNodes[i] || this.factory.create('mrow');\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMaction.prototype, \"isEmbellished\", {\n    get: function get() {\n      return this.selected.isEmbellished;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMaction.prototype, \"isSpacelike\", {\n    get: function get() {\n      return this.selected.isSpacelike;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MmlMaction.prototype.core = function () {\n    return this.selected.core();\n  };\n\n  MmlMaction.prototype.coreMO = function () {\n    return this.selected.coreMO();\n  };\n\n  MmlMaction.prototype.verifyAttributes = function (options) {\n    _super.prototype.verifyAttributes.call(this, options);\n\n    if (this.attributes.get('actiontype') !== 'toggle' && this.attributes.getExplicit('selection') !== undefined) {\n      var attributes = this.attributes.getAllAttributes();\n      delete attributes.selection;\n    }\n  };\n\n  MmlMaction.prototype.setTeXclass = function (prev) {\n    if (this.attributes.get('actiontype') === 'tooltip' && this.childNodes[1]) {\n      this.childNodes[1].setTeXclass(null);\n    }\n\n    var selected = this.selected;\n    prev = selected.setTeXclass(prev);\n    this.updateTeXclass(selected);\n    return prev;\n  };\n\n  MmlMaction.prototype.nextToggleSelection = function () {\n    var selection = Math.max(1, this.attributes.get('selection') + 1);\n\n    if (selection > this.childNodes.length) {\n      selection = 1;\n    }\n\n    this.attributes.set('selection', selection);\n  };\n\n  MmlMaction.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), {\n    actiontype: 'toggle',\n    selection: 1\n  });\n  return MmlMaction;\n}(MmlNode_js_1.AbstractMmlNode);\n\nexports.MmlMaction = MmlMaction;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;AAOA;EAAgCA;;EAAhC;;EAsGC;;EAxFCC,sBAAWC,oBAAX,EAAW,MAAX,EAAe;SAAf;MACE,OAAO,SAAP;IACD,CAFc;qBAAA;;EAAA,CAAf;EAQAD,sBAAWC,oBAAX,EAAW,OAAX,EAAgB;SAAhB;MACE,OAAO,CAAP;IACD,CAFe;qBAAA;;EAAA,CAAhB;EAOAD,sBAAWC,oBAAX,EAAW,UAAX,EAAmB;SAAnB;MACE,IAAMC,SAAS,GAAG,KAAKC,UAAL,CAAgBC,GAAhB,CAAoB,WAApB,CAAlB;MACA,IAAMC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,GAAL,CAAS,KAAKC,UAAL,CAAgBC,MAAzB,EAAiCR,SAAjC,CAAZ,IAA2D,CAArE;MACA,OAAO,KAAKO,UAAL,CAAgBJ,CAAhB,KAAsB,KAAKM,OAAL,CAAaC,MAAb,CAAoB,MAApB,CAA7B;IACD,CAJkB;qBAAA;;EAAA,CAAnB;EASAZ,sBAAWC,oBAAX,EAAW,eAAX,EAAwB;SAAxB;MACE,OAAO,KAAKY,QAAL,CAAcC,aAArB;IACD,CAFuB;qBAAA;;EAAA,CAAxB;EAOAd,sBAAWC,oBAAX,EAAW,aAAX,EAAsB;SAAtB;MACE,OAAO,KAAKY,QAAL,CAAcE,WAArB;IACD,CAFqB;qBAAA;;EAAA,CAAtB;;EAOOd,4BAAP;IACE,OAAO,KAAKY,QAAL,CAAcG,IAAd,EAAP;EACD,CAFM;;EAOAf,8BAAP;IACE,OAAO,KAAKY,QAAL,CAAcI,MAAd,EAAP;EACD,CAFM;;EAOGhB,wCAAV,UAA2BiB,OAA3B,EAAgD;IAC9CC,iBAAMC,gBAAN,CAAsBC,IAAtB,CAAsB,IAAtB,EAAuBH,OAAvB;;IACA,IAAI,KAAKf,UAAL,CAAgBC,GAAhB,CAAoB,YAApB,MAAsC,QAAtC,IACA,KAAKD,UAAL,CAAgBmB,WAAhB,CAA4B,WAA5B,MAA6CC,SADjD,EAC4D;MAC1D,IAAMpB,UAAU,GAAG,KAAKA,UAAL,CAAgBqB,gBAAhB,EAAnB;MACA,OAAOrB,UAAU,CAACD,SAAlB;IACD;EACF,CAPS;;EAeHD,mCAAP,UAAmBwB,IAAnB,EAAgC;IAC9B,IAAI,KAAKtB,UAAL,CAAgBC,GAAhB,CAAoB,YAApB,MAAsC,SAAtC,IAAmD,KAAKK,UAAL,CAAgB,CAAhB,CAAvD,EAA2E;MACzE,KAAKA,UAAL,CAAgB,CAAhB,EAAmBiB,WAAnB,CAA+B,IAA/B;IACD;;IACD,IAAIb,QAAQ,GAAG,KAAKA,QAApB;IACAY,IAAI,GAAGZ,QAAQ,CAACa,WAAT,CAAqBD,IAArB,CAAP;IACA,KAAKE,cAAL,CAAoBd,QAApB;IACA,OAAOY,IAAP;EACD,CARM;;EAaAxB,2CAAP;IACE,IAAIC,SAAS,GAAGI,IAAI,CAACC,GAAL,CAAS,CAAT,EAAa,KAAKJ,UAAL,CAAgBC,GAAhB,CAAoB,WAApB,IAA8C,CAA3D,CAAhB;;IACA,IAAIF,SAAS,GAAG,KAAKO,UAAL,CAAgBC,MAAhC,EAAwC;MACtCR,SAAS,GAAG,CAAZ;IACD;;IACD,KAAKC,UAAL,CAAgByB,GAAhB,CAAoB,WAApB,EAAiC1B,SAAjC;EACD,CANM;;EAzFOD,sBAAQ4B,sBACjBC,6BAAgBC,QADC,GACO;IAC3BC,UAAU,EAAE,QADe;IAE3B9B,SAAS,EAAE;EAFgB,CADP,CAAR;EAiGhB;AAAC,CAtGD,CAAgC4B,4BAAhC;;AAAaG","names":["__extends","Object","MmlMaction","selection","attributes","get","i","Math","max","min","childNodes","length","factory","create","selected","isEmbellished","isSpacelike","core","coreMO","options","_super","verifyAttributes","call","getExplicit","undefined","getAllAttributes","prev","setTeXclass","updateTeXclass","set","__assign","MmlNode_js_1","defaults","actiontype","exports"],"sourceRoot":"","sources":["../../../../ts/core/MmlTree/MmlNodes/maction.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}