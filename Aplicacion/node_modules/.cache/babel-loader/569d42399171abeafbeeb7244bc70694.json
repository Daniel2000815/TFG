{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\SurfacePage\\\\SurfacePage.js\";\nimport React, { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport CustomTable from '../CustomComponents/CustomTable';\nimport nerdamer from 'nerdamer';\nimport 'katex/dist/katex.min.css';\nimport Latex from 'react-latex-next';\nimport useLocalStorage from '../storageHook.js';\nimport SurfaceDialog from './SurfaceDialog';\nvar latexEq = function latexEq(eq) {\n  return /*#__PURE__*/React.createElement(Latex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  }, \"$ \".concat(eq, \" $\"));\n};\nvar tableCols = [{\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'implicit',\n  label: 'Implicit',\n  minWidth: 350\n}, {\n  id: 'sdf',\n  label: 'SDF',\n  minWidth: 10\n}];\nexport default function SurfacePage() {\n  var _useLocalStorage = useLocalStorage('user_implicits', {}),\n    _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n    storage = _useLocalStorage2[0],\n    setStorage = _useLocalStorage2[1];\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    dialogOpen = _useState2[0],\n    setDialogOpen = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    tableRows = _useState4[0],\n    setTableRows = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    editedRow = _useState6[0],\n    setEditedRow = _useState6[1];\n  useEffect(function () {\n    var newRows = [];\n    Object.keys(storage).forEach(function (key, index) {\n      var item = storage[key];\n      newRows.push({\n        id: item.id,\n        name: item.name,\n        implicit: latexEq(nerdamer.convertToLaTeX(item.implicit)),\n        sdf: item.sdf\n      });\n    });\n    setTableRows(newRows);\n  }, [storage]);\n  var handleDelete = function handleDelete(selectedList) {\n    console.log(selectedList);\n    var asArray = Object.entries(storage);\n    var filtered = asArray.filter(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n      return !selectedList.includes(key);\n    });\n\n    // Convert the key/value array back to an object:\n    // `{ name: 'Luke Skywalker', title: 'Jedi Knight' }`\n    var newStorage = Object.fromEntries(filtered);\n    setStorage(newStorage);\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CustomTable, {\n    rows: tableRows,\n    columns: tableCols,\n    handleDelete: handleDelete,\n    handleCreateRow: function handleCreateRow() {\n      setEditedRow(\"\");\n      setDialogOpen(true);\n    },\n    handleRowClick: function handleRowClick(name) {\n      setEditedRow(name);\n      setDialogOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SurfaceDialog, {\n    savedData: editedRow ? storage[editedRow] : null,\n    open: dialogOpen,\n    handleClose: function handleClose() {\n      return setDialogOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useState","useEffect","Box","CustomTable","nerdamer","Latex","useLocalStorage","SurfaceDialog","latexEq","eq","tableCols","id","label","minWidth","SurfacePage","storage","setStorage","dialogOpen","setDialogOpen","tableRows","setTableRows","editedRow","setEditedRow","newRows","Object","keys","forEach","key","index","item","push","name","implicit","convertToLaTeX","sdf","handleDelete","selectedList","console","log","asArray","entries","filtered","filter","value","includes","newStorage","fromEntries"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/SurfacePage/SurfacePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport CustomTable from '../CustomComponents/CustomTable';\r\nimport nerdamer from 'nerdamer';\r\nimport 'katex/dist/katex.min.css';\r\nimport Latex from 'react-latex-next';\r\nimport useLocalStorage from '../storageHook.js';\r\nimport SurfaceDialog from './SurfaceDialog';\r\n\r\nconst latexEq = (eq) => {\r\n  return <Latex>{`$ ${eq} $`}</Latex>;\r\n};\r\nconst tableCols = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'implicit', label: 'Implicit', minWidth: 350 },\r\n  { id: 'sdf', label: 'SDF', minWidth: 10 },\r\n];\r\n\r\nexport default function SurfacePage() {\r\n  const [storage, setStorage] = useLocalStorage('user_implicits', {});\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [tableRows, setTableRows] = useState([]);\r\n  const [editedRow, setEditedRow] = useState('');\r\n\r\n  useEffect(() => {\r\n    let newRows = [];\r\n\r\n    Object.keys(storage).forEach(function (key, index) {\r\n      const item = storage[key];\r\n\r\n      newRows.push({\r\n        id: item.id,\r\n        name: item.name,\r\n        implicit: latexEq(nerdamer.convertToLaTeX(item.implicit)),\r\n        sdf: item.sdf,\r\n      });\r\n    });\r\n\r\n    setTableRows(newRows);\r\n  }, [storage]);\r\n\r\n  const handleDelete = (selectedList) => {\r\n    console.log(selectedList);\r\n    const asArray = Object.entries(storage);\r\n    const filtered = asArray.filter(\r\n      ([key, value]) => !selectedList.includes(key)\r\n    );\r\n\r\n    // Convert the key/value array back to an object:\r\n    // `{ name: 'Luke Skywalker', title: 'Jedi Knight' }`\r\n    const newStorage = Object.fromEntries(filtered);\r\n    setStorage(newStorage);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n\r\n      <CustomTable\r\n        rows={tableRows}\r\n        columns={tableCols}\r\n        handleDelete={handleDelete}\r\n        handleCreateRow={() => { setEditedRow(\"\"); setDialogOpen(true) }}\r\n        handleRowClick={(name) => { setEditedRow(name); setDialogOpen(true) }}\r\n      />\r\n\r\n      <SurfaceDialog\r\n        savedData={editedRow ? storage[editedRow] : null}\r\n        open={dialogOpen}\r\n        handleClose={() => setDialogOpen(false)}\r\n      />\r\n\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}