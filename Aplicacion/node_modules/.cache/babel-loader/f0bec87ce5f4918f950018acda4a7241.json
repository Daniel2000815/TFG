{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar MmlNode_js_1 = require(\"../../core/MmlTree/MmlNode.js\");\n\nvar mo_js_1 = require(\"../../core/MmlTree/MmlNodes/mo.js\");\n\nvar NodeUtil;\n\n(function (NodeUtil) {\n  var attrs = new Map([['autoOP', true], ['fnOP', true], ['movesupsub', true], ['subsupOK', true], ['texprimestyle', true], ['useHeight', true], ['variantForm', true], ['withDelims', true], ['mathaccent', true], ['open', true], ['close', true]]);\n\n  function createEntity(code) {\n    return String.fromCodePoint(parseInt(code, 16));\n  }\n\n  NodeUtil.createEntity = createEntity;\n\n  function getChildren(node) {\n    return node.childNodes;\n  }\n\n  NodeUtil.getChildren = getChildren;\n\n  function getText(node) {\n    return node.getText();\n  }\n\n  NodeUtil.getText = getText;\n\n  function appendChildren(node, children) {\n    var e_1, _a;\n\n    try {\n      for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n        var child = children_1_1.value;\n        node.appendChild(child);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  }\n\n  NodeUtil.appendChildren = appendChildren;\n\n  function setAttribute(node, attribute, value) {\n    node.attributes.set(attribute, value);\n  }\n\n  NodeUtil.setAttribute = setAttribute;\n\n  function setProperty(node, property, value) {\n    node.setProperty(property, value);\n  }\n\n  NodeUtil.setProperty = setProperty;\n\n  function setProperties(node, properties) {\n    var e_2, _a;\n\n    try {\n      for (var _b = __values(Object.keys(properties)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var name_1 = _c.value;\n        var value = properties[name_1];\n\n        if (name_1 === 'texClass') {\n          node.texClass = value;\n          node.setProperty(name_1, value);\n        } else if (name_1 === 'movablelimits') {\n          node.setProperty('movablelimits', value);\n\n          if (node.isKind('mo') || node.isKind('mstyle')) {\n            node.attributes.set('movablelimits', value);\n          }\n        } else if (name_1 === 'inferred') {} else if (attrs.has(name_1)) {\n          node.setProperty(name_1, value);\n        } else {\n          node.attributes.set(name_1, value);\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  }\n\n  NodeUtil.setProperties = setProperties;\n\n  function getProperty(node, property) {\n    return node.getProperty(property);\n  }\n\n  NodeUtil.getProperty = getProperty;\n\n  function getAttribute(node, attr) {\n    return node.attributes.get(attr);\n  }\n\n  NodeUtil.getAttribute = getAttribute;\n\n  function removeProperties(node) {\n    var properties = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      properties[_i - 1] = arguments[_i];\n    }\n\n    node.removeProperty.apply(node, __spreadArray([], __read(properties), false));\n  }\n\n  NodeUtil.removeProperties = removeProperties;\n\n  function getChildAt(node, position) {\n    return node.childNodes[position];\n  }\n\n  NodeUtil.getChildAt = getChildAt;\n\n  function setChild(node, position, child) {\n    var children = node.childNodes;\n    children[position] = child;\n\n    if (child) {\n      child.parent = node;\n    }\n  }\n\n  NodeUtil.setChild = setChild;\n\n  function copyChildren(oldNode, newNode) {\n    var children = oldNode.childNodes;\n\n    for (var i = 0; i < children.length; i++) {\n      setChild(newNode, i, children[i]);\n    }\n  }\n\n  NodeUtil.copyChildren = copyChildren;\n\n  function copyAttributes(oldNode, newNode) {\n    newNode.attributes = oldNode.attributes;\n    setProperties(newNode, oldNode.getAllProperties());\n  }\n\n  NodeUtil.copyAttributes = copyAttributes;\n\n  function isType(node, kind) {\n    return node.isKind(kind);\n  }\n\n  NodeUtil.isType = isType;\n\n  function isEmbellished(node) {\n    return node.isEmbellished;\n  }\n\n  NodeUtil.isEmbellished = isEmbellished;\n\n  function getTexClass(node) {\n    return node.texClass;\n  }\n\n  NodeUtil.getTexClass = getTexClass;\n\n  function getCoreMO(node) {\n    return node.coreMO();\n  }\n\n  NodeUtil.getCoreMO = getCoreMO;\n\n  function isNode(item) {\n    return item instanceof MmlNode_js_1.AbstractMmlNode || item instanceof MmlNode_js_1.AbstractMmlEmptyNode;\n  }\n\n  NodeUtil.isNode = isNode;\n\n  function isInferred(node) {\n    return node.isInferred;\n  }\n\n  NodeUtil.isInferred = isInferred;\n\n  function getForm(node) {\n    var e_3, _a;\n\n    if (!isType(node, 'mo')) {\n      return null;\n    }\n\n    var mo = node;\n    var forms = mo.getForms();\n\n    try {\n      for (var forms_1 = __values(forms), forms_1_1 = forms_1.next(); !forms_1_1.done; forms_1_1 = forms_1.next()) {\n        var form = forms_1_1.value;\n        var symbol = mo_js_1.MmlMo.OPTABLE[form][mo.getText()];\n\n        if (symbol) {\n          return symbol;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (forms_1_1 && !forms_1_1.done && (_a = forms_1.return)) _a.call(forms_1);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    return null;\n  }\n\n  NodeUtil.getForm = getForm;\n})(NodeUtil || (NodeUtil = {}));\n\nexports.default = NodeUtil;","map":{"version":3,"mappings":"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","names":["NodeUtil","attrs","Map","createEntity","code","String","fromCodePoint","parseInt","getChildren","node","childNodes","getText","appendChildren","children","children_1_1","child","appendChild","setAttribute","attribute","value","attributes","set","setProperty","property","setProperties","properties","keys","_c","name_1","texClass","isKind","has","getProperty","getAttribute","attr","get","removeProperties","removeProperty","apply","__spreadArray","getChildAt","position","setChild","parent","copyChildren","oldNode","newNode","i","length","copyAttributes","getAllProperties","isType","kind","isEmbellished","getTexClass","getCoreMO","coreMO","isNode","item","MmlNode_js_1","isInferred","getForm","mo","forms","getForms","forms_1_1","form","symbol","mo_js_1","OPTABLE","exports"],"sourceRoot":"","sources":["../../../ts/input/tex/NodeUtil.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}