{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.primeFactors = exports.pow = void 0;\n\nvar Symbol_1 = require(\"../../../Types/Symbol\");\n\nvar Groups_1 = require(\"../../../Types/Groups\");\n\nvar Settings_1 = require(\"../../../Settings\");\n\nvar Utils_1 = require(\"../../../Core/Utils\");\n\nvar Errors_1 = require(\"../../../Core/Errors\");\n\nvar add_1 = require(\"./add\");\n\nvar decimal_js_1 = __importDefault(require(\"decimal.js\"));\n\nvar Frac_1 = require(\"../../../Types/Frac\");\n\nvar log_1 = require(\"../math/log\");\n\nvar expand_1 = require(\"../math/expand\");\n\nvar abs_1 = require(\"../math/abs\");\n\nvar Matrix_1 = require(\"../../../Types/Matrix\");\n\nvar Math_consts_1 = require(\"../../Math.consts\");\n\nvar index_1 = require(\"../index\");\n\nvar Trig_1 = require(\"../../Trig\");\n\nvar Parser_1 = require(\"../../../Parser/Parser\");\n/**\n * Gets called when the parser finds the ^ operator. See this.add\n * @param {Symbol} a\n * @param {Symbol} b\n * @returns {Symbol}\n */\n\n\nfunction pow(a, b) {\n  var aIsSymbol = (0, Utils_1.isSymbol)(a),\n      bIsSymbol = (0, Utils_1.isSymbol)(b);\n\n  if (aIsSymbol && bIsSymbol) {\n    //it has units then it's the Unit module's problem\n    if (a.unit || b.unit) {\n      return deps.Unit.pow(a, b);\n    } // Handle abs\n\n\n    if (a.group === Groups_1.Groups.FN && a.fname === Settings_1.Settings.ABS && (0, Utils_1.even)(b)) {\n      var m = a.multiplier.clone();\n      var raised = pow(a.args[0], b);\n      raised.multiplier = m;\n      return raised;\n    } // Handle infinity\n\n\n    if (a.isInfinity || b.isInfinity) {\n      if (a.isInfinity && b.isInfinity) throw new Errors_1.UndefinedError('(' + a + ')^(' + b + ') is undefined!');\n\n      if (a.isConstant() && b.isInfinity) {\n        if (a.equals(0)) {\n          if (b.lessThan(0)) throw new Errors_1.UndefinedError('0^Infinity is undefined!');\n          return new Symbol_1.Symbol(0);\n        }\n\n        if (a.equals(1)) throw new Errors_1.UndefinedError('1^' + b.toString() + ' is undefined!'); //a^-oo\n\n        if (b.lessThan(0)) return new Symbol_1.Symbol(0); //a^oo\n\n        if (!a.lessThan(0)) return Symbol_1.Symbol.infinity();\n      }\n\n      if (a.isInfinity && b.isConstant()) {\n        if (b.equals(0)) throw new Errors_1.UndefinedError(a + '^0 is undefined!');\n        if (b.lessThan(0)) return new Symbol_1.Symbol(0);\n        return (0, index_1.multiply)(Symbol_1.Symbol.infinity(), pow(new Symbol_1.Symbol(a.sign()), b.clone()));\n      }\n    }\n\n    var aIsZero = a.equals(0);\n    var bIsZero = b.equals(0);\n    if (aIsZero && bIsZero) throw new Errors_1.UndefinedError('0^0 is undefined!'); // Return 0 right away if possible\n\n    if (aIsZero && b.isConstant() && b.multiplier.greaterThan(0)) return new Symbol_1.Symbol(0);\n    if (bIsZero) return new Symbol_1.Symbol(1);\n    var bIsConstant = b.isConstant(),\n        aIsConstant = a.isConstant(),\n        bIsInt = b.isInteger(),\n        m = a.multiplier,\n        result = a.clone(); // 0^0, 1/0, etc. Complain.\n\n    if (aIsConstant && bIsConstant && a.equals(0) && b.lessThan(0)) throw new Errors_1.UndefinedError('Division by zero is not allowed!'); // Compute imaginary numbers right away\n\n    if (Settings_1.Settings.PARSE2NUMBER && aIsConstant && bIsConstant && a.sign() < 0 && (0, Utils_1.evenFraction)(b)) {\n      var k, re, im;\n      k = Math.PI * b;\n      re = new Symbol_1.Symbol(Math.cos(k));\n      im = (0, index_1.multiply)(Symbol_1.Symbol.imaginary(), new Symbol_1.Symbol(Math.sin(k)));\n      return (0, add_1.add)(re, im);\n    } // Imaginary number under negative nthroot or to the n\n\n\n    if (Settings_1.Settings.PARSE2NUMBER && a.isImaginary() && bIsConstant && (0, Utils_1.isInt)(b) && !b.lessThan(0)) {\n      var re, im, r, theta, nre, nim, phi;\n      re = a.realpart();\n      im = a.imagpart();\n\n      if (re.isConstant('all') && im.isConstant('all')) {\n        phi = Settings_1.Settings.USE_BIG ? (0, Symbol_1.Symbol)(decimal_js_1.default.atan2(i.multiplier.toDecimal(), r.multiplier.toDecimal()).times(b.toString())) : Math.atan2(im, re) * b;\n        theta = new Symbol_1.Symbol(phi);\n        r = pow(Symbol_1.Symbol.hyp(re, im), b);\n        nre = (0, index_1.multiply)(r.clone(), Trig_1.Trig.cos(theta.clone()));\n        nim = (0, index_1.multiply)(r, Trig_1.Trig.sin(theta));\n        return (0, add_1.add)(nre, (0, index_1.multiply)(Symbol_1.Symbol.imaginary(), nim));\n      }\n    } // Take care of the symbolic part\n\n\n    result.toUnitMultiplier(); //simpifly sqrt\n\n    if (result.group === Groups_1.Groups.FN && result.fname === Settings_1.Settings.SQRT && !bIsConstant) {\n      var s = result.args[0];\n      s.multiplyPower(new Symbol_1.Symbol(0.5));\n      s.multiplier.multiply(result.multiplier);\n      s.multiplyPower(b);\n      result = s;\n    } else {\n      var sign = m.sign(); //handle cases such as (-a^3)^(1/4)\n\n      if ((0, Utils_1.evenFraction)(b) && sign < 0) {\n        // Swaperoo\n        // First put the sign back on the symbol\n        result.negate(); // Wrap it in brackets\n\n        result = (0, Symbol_1.symfunction)(Settings_1.Settings.PARENTHESIS, [result]); // Move the sign back the exterior and let nerdamer handle the rest\n\n        result.negate();\n      }\n\n      result.multiplyPower(b);\n    }\n\n    if (aIsConstant && bIsConstant && Settings_1.Settings.PARSE2NUMBER) {\n      var c; //remove the sign\n\n      if (sign < 0) {\n        a.negate();\n        if (b.multiplier.den.equals(2)) //we know that the numerator has to be odd and therefore it's i\n          c = new Symbol_1.Symbol(Settings_1.Settings.IMAGINARY);else if ((0, Utils_1.isInt)(b.multiplier)) {\n          if ((0, Utils_1.even)(b.multiplier)) c = new Symbol_1.Symbol(1);else c = new Symbol_1.Symbol(-1);\n        } else if (!(0, Utils_1.even)(b.multiplier.den)) {\n          c = new Symbol_1.Symbol(Math.pow(sign, b.multiplier.num));\n        } else {\n          c = pow((0, Symbol_1.symfunction)(Settings_1.Settings.PARENTHESIS, [new Symbol_1.Symbol(sign)]), b.clone());\n        }\n      }\n\n      result = new Symbol_1.Symbol(Math.pow(a.multiplier.toDecimal(), b.multiplier.toDecimal())); //result = new Symbol(Math2.bigpow(a.multiplier, b.multiplier));\n      //put the back sign\n\n      if (c) result = (0, index_1.multiply)(result, c);\n    } else if (bIsInt && !m.equals(1)) {\n      var abs_b = b.abs(); // Provide fall back to JS until big number implementation is improved\n\n      if (abs_b.gt(Settings_1.Settings.MAX_EXP)) {\n        if (b.sign() < 0) return new Symbol_1.Symbol(0);\n        return Symbol_1.Symbol.infinity();\n      } else {\n        var p = b.multiplier.toDecimal();\n        var sgn = Math.sign(p);\n        p = Math.abs(p);\n        var multiplier = new Frac_1.Frac(1);\n        multiplier.num = m.num.pow(p);\n        multiplier.den = m.den.pow(p);\n        if (sgn < 0) multiplier.invert(); //multiplying is justified since after mulltiplyPower if it was of group Groups.P it will now be of group Groups.N\n\n        result.multiplier = result.multiplier.multiply(multiplier);\n      }\n    } else {\n      var sign = a.sign();\n\n      if (b.isConstant() && a.isConstant() && !b.multiplier.den.equals(1) && sign < 0) {\n        //we know the sign is negative so if the denominator for b == 2 then it's i\n        if (b.multiplier.den.equals(2)) {\n          var i = new Symbol_1.Symbol(Settings_1.Settings.IMAGINARY);\n          a.negate(); //remove the sign\n          //if the power is negative then i is negative\n\n          if (b.lessThan(0)) {\n            i.negate();\n            b.negate(); //remove the sign from the power\n          } //pull the power normally and put back the imaginary\n\n\n          result = (0, index_1.multiply)(pow(a, b), i);\n        } else {\n          var aa = a.clone();\n          aa.multiplier.negate();\n          result = pow((0, Symbol_1.symfunction)(Settings_1.Settings.PARENTHESIS, [new Symbol_1.Symbol(sign)]), b.clone());\n\n          var _a = pow(new Symbol_1.Symbol(aa.multiplier.num), b.clone());\n\n          var _b = pow(new Symbol_1.Symbol(aa.multiplier.den), b.clone());\n\n          var r = (0, index_1.divide)(_a, _b);\n          result = (0, index_1.multiply)(result, r);\n        }\n      } else if (Settings_1.Settings.PARSE2NUMBER && b.isImaginary()) {\n        //4^(i + 2) = e^(- (2 - 4 i) Ï€ n + (2 + i) log(4))\n        var re = b.realpart();\n        var im = b.imagpart();\n        /*\n         if (b.group === CP && false) {\n         var ex = pow(a.clone(), re);\n         var xi = multiply(multiply(ex.clone(), trig.sin(im.clone())), Symbol.imaginary());\n         var xa = multiply(trig.cos(im), ex);\n         result = add(xi, xa);\n         }\n         else {\n         */\n\n        var aa = a.clone().toLinear();\n        var a1 = pow(aa.clone(), re);\n        var log_a = (0, log_1.log)(aa.clone());\n        var b1 = Trig_1.Trig.cos((0, index_1.multiply)(im.clone(), log_a));\n        var c1 = (0, index_1.multiply)(Trig_1.Trig.sin((0, index_1.multiply)(im, (0, log_1.log)(aa))), Symbol_1.Symbol.imaginary());\n        result = (0, index_1.multiply)(a1, (0, add_1.add)(b1, c1));\n        result = (0, expand_1.expand)((0, Parser_1.parse)(result));\n        /*\n         }\n         */\n      } else {\n        //b is a symbol\n        var neg_num = a.group === Groups_1.Groups.N && sign < 0,\n            num = testSQRT(new Symbol_1.Symbol(neg_num ? m.num : Math.abs(m.num)).setPower(b.clone())),\n            den = testSQRT(new Symbol_1.Symbol(m.den).setPower(b.clone()).invert()); //eliminate imaginary if possible\n\n        if (a.imaginary) {\n          if (bIsInt) {\n            var s, p, n;\n            s = Math.sign(b);\n            p = (0, abs_1.abs)(b);\n            n = p % 4;\n            result = new Symbol_1.Symbol((0, Utils_1.even)(n) ? -1 : Settings_1.Settings.IMAGINARY);\n\n            if (n === 0 || s < 0 && n === 1 || s > 0 && n === 3) {\n              result.negate();\n            }\n          } else {\n            //assume i = sqrt(-1) -> (-1)^(1/2)\n            var nr = b.multiplier.multiply(Frac_1.Frac.quick(1, 2)),\n                //the denominator denotes the power so raise to it. It will turn positive it round\n            tn = Math.pow(-1, nr.num);\n            result = (0, Utils_1.even)(nr.den) ? new Symbol_1.Symbol(-1).setPower(nr, true) : new Symbol_1.Symbol(tn);\n          }\n        } //ensure that the sign is carried by the symbol and not the multiplier\n        //this enables us to check down the line if the multiplier can indeed be transferred\n\n\n        if (sign < 0 && !neg_num) result.negate(); //retain the absolute value\n\n        if (bIsConstant && a.group !== Groups_1.Groups.EX) {\n          var evenr = (0, Utils_1.even)(b.multiplier.den),\n              evenp = (0, Utils_1.even)(a.power),\n              n = result.power.toDecimal(),\n              evennp = (0, Utils_1.even)(n);\n\n          if (evenr && evenp && !evennp) {\n            if (n === 1) result = (0, Symbol_1.symfunction)(Settings_1.Settings.ABS, [result]);else if (!(0, Utils_1.isInt)(n)) {\n              var p = result.power;\n              result = (0, Symbol_1.symfunction)(Settings_1.Settings.ABS, [result.toLinear()]).setPower(p);\n            } else {\n              result = (0, index_1.multiply)((0, Symbol_1.symfunction)(Settings_1.Settings.ABS, [result.clone().toLinear()]), result.clone().setPower(new Frac_1.Frac(n - 1)));\n            } //quick workaround. Revisit\n\n            if (Settings_1.Settings.POSITIVE_MULTIPLIERS && result.fname === Settings_1.Settings.ABS) result = result.args[0];\n          }\n        } //multiply out sqrt\n\n\n        if (b.equals(2) && result.group === Groups_1.Groups.CB) {\n          var _result = new Symbol_1.Symbol(1);\n\n          result.each(function (sym) {\n            _result = (0, index_1.multiply)(_result, pow(sym, b));\n          });\n          result = _result;\n        }\n      }\n    }\n\n    result = testSQRT(result); // Don't multiply until we've tested the remaining symbol\n\n    if (num && den) {\n      result = (0, index_1.multiply)(result, testPow((0, index_1.multiply)(num, den)));\n    } // Reduce square root\n\n\n    if (result.fname === Settings_1.Settings.SQRT) {\n      var isEX = result.group === Groups_1.Groups.EX;\n      var t = isEX ? result.power.multiplier.toString() : result.power.toString();\n\n      if ((0, Utils_1.even)(t)) {\n        var pt = isEX ? (0, index_1.divide)(result.power, new Symbol_1.Symbol(2)) : new Symbol_1.Symbol(result.power.divide(new Frac_1.Frac(2))),\n            m = result.multiplier;\n        result = pow(result.args[0], pt);\n        result.multiplier = result.multiplier.multiply(m);\n      }\n    } // Detect Euler's identity\n    else if (!Settings_1.Settings.IGNORE_E && result.isE() && result.group === Groups_1.Groups.EX && result.power.contains('pi') && result.power.contains(Settings_1.Settings.IMAGINARY) && b.group === Groups_1.Groups.CB) {\n      var theta = b.stripVar(Settings_1.Settings.IMAGINARY);\n      result = (0, add_1.add)(Trig_1.Trig.cos(theta), (0, index_1.multiply)(Symbol_1.Symbol.imaginary(), Trig_1.Trig.sin(theta)));\n    }\n\n    return result;\n  } else {\n    if ((0, Utils_1.isVector)(a) && bIsSymbol) {\n      a = a.map(function (x) {\n        return pow(x, b.clone());\n      });\n    } else if ((0, Utils_1.isMatrix)(a) && bIsSymbol) {\n      var M = new Matrix_1.Matrix();\n      a.eachElement(function (x, i, j) {\n        M.set(i, j, pow(x, b.clone()));\n      });\n      a = M;\n    } else if (aIsSymbol && (0, Utils_1.isMatrix)(b)) {\n      var M = new Matrix_1.Matrix();\n      b.eachElement(function (x, i, j) {\n        M.set(i, j, pow(a.clone(), x));\n      });\n      a = M;\n    }\n\n    return a;\n  }\n}\n\nexports.pow = pow;\n\nfunction testSQRT(symbol) {\n  //wrap the symbol in sqrt. This eliminates one more check down the line.\n  if (!(0, Utils_1.isSymbol)(symbol.power) && symbol.power.absEquals(0.5)) {\n    var sign = symbol.power.sign(); //don't devide the power directly. Notice the use of toString. This makes it possible\n    //to use a bigNumber library in the future\n\n    var retval = (0, index_1.sqrt)(symbol.group === Groups_1.Groups.P ? new Symbol_1.Symbol(symbol.value) : symbol.toLinear()); //place back the sign of the power\n\n    if (sign < 0) retval.invert();\n    return retval;\n  }\n\n  return symbol;\n} //try to reduce a symbol by pulling its power\n\n\nfunction testPow(symbol) {\n  if (symbol.group === Groups_1.Groups.P) {\n    var v = symbol.value;\n    var fct = primeFactors(v)[0]; //safety\n\n    if (!fct) {\n      (0, Utils_1.warn)('Unable to compute prime factors. This should not happen. Please review and report.');\n      return symbol;\n    }\n\n    var n = new Frac_1.Frac(Math.log(v) / Math.log(fct)),\n        p = n.multiply(symbol.power); //we don't want a more complex number than before\n\n    if (p.den > symbol.power.den) return symbol;\n    if ((0, Utils_1.isInt)(p)) symbol = new Symbol_1.Symbol(Math.pow(fct, p));else symbol = new Symbol_1.Symbol(fct).setPower(p);\n  }\n\n  return symbol;\n}\n/**\n * Calculates prime factors for a number. It first checks if the number\n * is a prime number. If it's not then it will calculate all the primes\n * for that number.\n * @param {int} num\n * @returns {Array}\n */\n\n\nfunction primeFactors(num) {\n  if ((0, Utils_1.isPrime)(num)) {\n    return [num];\n  }\n\n  var l = num,\n      i = 1,\n      factors = [],\n      epsilon = 2.2204460492503130808472633361816E-16;\n\n  while (i < l) {\n    var quotient = num / i;\n    var whole = Math.floor(quotient);\n    var remainder = quotient - whole;\n\n    if (remainder <= epsilon && i > 1) {\n      // If the prime wasn't found but calculated then save it and\n      // add it as a factor.\n      if ((0, Utils_1.isPrime)(i)) {\n        if (Math_consts_1.PRIMES.indexOf(i) === -1) {\n          Math_consts_1.PRIMES.push(i);\n        }\n\n        factors.push(i);\n      } // Check if the remainder is a prime\n\n\n      if ((0, Utils_1.isPrime)(whole)) {\n        factors.push(whole);\n        break;\n      }\n\n      l = whole;\n    }\n\n    i++;\n  }\n\n  return factors.sort(function (a, b) {\n    return a - b;\n  });\n}\n\nexports.primeFactors = primeFactors;","map":{"version":3,"mappings":"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","names":["pow","a","b","aIsSymbol","bIsSymbol","unit","deps","Unit","group","Groups_1","FN","fname","Settings_1","ABS","m","multiplier","clone","raised","args","isInfinity","Errors_1","isConstant","equals","lessThan","Symbol_1","toString","infinity","sign","aIsZero","bIsZero","greaterThan","bIsConstant","aIsConstant","bIsInt","isInteger","result","PARSE2NUMBER","k","re","im","Math","PI","cos","imaginary","sin","isImaginary","r","theta","nre","nim","phi","realpart","imagpart","USE_BIG","decimal_js_1","atan2","i","toDecimal","times","hyp","Trig_1","toUnitMultiplier","SQRT","s","multiplyPower","multiply","negate","PARENTHESIS","c","den","IMAGINARY","num","abs_b","abs","gt","MAX_EXP","p","sgn","Frac_1","invert","aa","_a","_b","toLinear","a1","log_a","b1","c1","neg_num","N","testSQRT","setPower","n","nr","quick","tn","EX","evenr","evenp","power","evennp","POSITIVE_MULTIPLIERS","CB","_result","each","sym","testPow","isEX","t","pt","divide","IGNORE_E","isE","contains","stripVar","map","x","M","Matrix_1","eachElement","j","set","exports","symbol","absEquals","retval","P","value","v","fct","primeFactors","log","l","factors","epsilon","quotient","whole","floor","remainder","Math_consts_1","indexOf","push","sort"],"sourceRoot":"","sources":["../../../../src/Functions/Core/operations/pow.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}