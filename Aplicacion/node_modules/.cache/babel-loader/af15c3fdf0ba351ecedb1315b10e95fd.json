{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonWrapperFactory = void 0;\n\nvar WrapperFactory_js_1 = require(\"../../core/Tree/WrapperFactory.js\");\n\nvar CommonWrapperFactory = function (_super) {\n  __extends(CommonWrapperFactory, _super);\n\n  function CommonWrapperFactory() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.jax = null;\n    return _this;\n  }\n\n  Object.defineProperty(CommonWrapperFactory.prototype, \"Wrappers\", {\n    get: function get() {\n      return this.node;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  CommonWrapperFactory.defaultNodes = {};\n  return CommonWrapperFactory;\n}(WrapperFactory_js_1.AbstractWrapperFactory);\n\nexports.CommonWrapperFactory = CommonWrapperFactory;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;AAeA;EAOUA;;EAPV;IAAA;;IAkBSC,YAAS,IAAT;;EASR;;EAJCC,sBAAIC,8BAAJ,EAAI,UAAJ,EAAY;SAAZ;MACE,OAAO,KAAKC,IAAZ;IACD,CAFW;qBAAA;;EAAA,CAAZ;EAVcD,oCAAmF,EAAnF;EAchB;AAAC,CA3BD,CAOUE,0CAPV;;AAAaC","names":["__extends","_this","Object","CommonWrapperFactory","node","WrapperFactory_js_1","exports"],"sourceRoot":"","sources":["../../../ts/output/common/WrapperFactory.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}