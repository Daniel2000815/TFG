{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.exp = void 0;\n\nvar Settings_1 = require(\"../../../Settings\");\n\nvar Symbol_1 = require(\"../../../Types/Symbol\");\n\nvar Utils_1 = require(\"../../../Core/Utils\");\n\nvar index_1 = require(\"../index\");\n\nvar Parser_1 = require(\"../../../Parser/Parser\");\n/**\n * A symbolic extension for exp. This will auto-convert all instances of exp(x) to e^x.\n * Thanks @ Happypig375\n * @param {Symbol} symbol\n * @returns {Symbol}\n */\n\n\nfunction exp(symbol) {\n  if (symbol.fname === Settings_1.Settings.LOG && symbol.isLinear()) {\n    return (0, index_1.pow)(symbol.args[0], Symbol_1.Symbol.create(symbol.multiplier));\n  }\n\n  return (0, Parser_1.parse)((0, Utils_1.format)('e^({0})', symbol));\n}\n\nexports.exp = exp;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;AAEA;;;;;;;;AAMA,SAAgBA,GAAhB,CAAoBC,MAApB,EAA0B;EACtB,IAAIA,MAAM,CAACC,KAAP,KAAiBC,oBAASC,GAA1B,IAAiCH,MAAM,CAACI,QAAP,EAArC,EAAwD;IACpD,OAAO,iBAAIJ,MAAM,CAACK,IAAP,CAAY,CAAZ,CAAJ,EAAoBC,gBAAOC,MAAP,CAAcP,MAAM,CAACQ,UAArB,CAApB,CAAP;EACH;;EACD,OAAO,oBAAM,oBAAO,SAAP,EAAkBR,MAAlB,CAAN,CAAP;AACH;;AALDS","names":["exp","symbol","fname","Settings_1","LOG","isLinear","args","Symbol_1","create","multiplier","exports"],"sourceRoot":"","sources":["../../../../src/Functions/Core/math/exp.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}