{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\Graph.js\";\nimport React from \"react\";\nimport { useCallback, useEffect } from \"react\";\nimport ReactFlow, { addEdge, Background, useNodesState, useEdgesState, MarkerType } from \"react-flow-renderer\";\nimport PrimitiveNode from \"./PrimitiveNode.js\";\nimport BooleanNode from \"./BooleanNode.js\";\nimport ButtonEdge from \"./ButtonEdge\";\nimport \"./styles.css\";\nimport { GraphProvider } from \"./GraphContext.js\";\nvar nodeTypes = {\n  primitiveNode: PrimitiveNode,\n  booleanNode: BooleanNode\n};\nvar edgeTypes = {\n  buttonEdge: ButtonEdge\n};\n\nvar onInit = function onInit(reactFlowInstance) {\n  return console.log(\"flow loaded:\", reactFlowInstance);\n};\n\nexport default function Graph() {\n  var _useNodesState = useNodesState(initialNodes),\n      _useNodesState2 = _slicedToArray(_useNodesState, 3),\n      nodes = _useNodesState2[0],\n      setNodes = _useNodesState2[1],\n      onNodesChange = _useNodesState2[2];\n\n  var _useEdgesState = useEdgesState([]),\n      _useEdgesState2 = _slicedToArray(_useEdgesState, 3),\n      edges = _useEdgesState2[0],\n      setEdges = _useEdgesState2[1],\n      onEdgesChange = _useEdgesState2[2];\n\n  var _React$useState = React.useState(3),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      id = _React$useState2[0],\n      setId = _React$useState2[1];\n\n  var initialNodes = [newPrimitiveNode(-100, 50), newPrimitiveNode(100, 50), newBooleanNode(0, 550)];\n  var initialEdges = [];\n\n  var updateNodeSdf = function updateNodeSdf(id, newSdf, parent) {\n    console.log(\"ACTUALIZADO SDF\"); // var newSdfs = nodes.find((n) => n.id === id).data.sdfs;\n    // newSdfs[`${parent}`] = newSdf;\n    // setNodes((nds) =>\n    //   nds.map((node) => {\n    //     if (node.id === id) {\n    //       node.data = {\n    //         ...node.data,\n    //         sdfs: newSdfs,\n    //       };\n    //       node.data.children.forEach((child) => {\n    //         updateNodeSdf(child, newSdf, id);\n    //       });\n    //     }\n    //     return node;\n    //   })\n    // );\n  };\n\n  var connectSdf = function connectSdf(sourceId, targetId, params) {\n    var sourceNode = nodes.find(function (n) {\n      return n.id === sourceId;\n    });\n    var newSdfs = nodes.find(function (n) {\n      return n.id === targetId;\n    }).data.sdfs;\n    newSdfs[\"\".concat(sourceId)] = sourceNode.data.sdf;\n    console.log(newSdfs);\n    setNodes(function (nds) {\n      return nds.map(function (node) {\n        if (node.id === targetId) {\n          console.log(\"FOUND\");\n          node.data = _objectSpread(_objectSpread({}, node.data), {}, {\n            sdfs: newSdfs\n          });\n        }\n\n        onNodesChange([node]);\n        return node;\n      });\n    });\n  };\n\n  var removeEdge = function removeEdge(edgeId) {\n    var newEdges = edges.filter(function (edge) {\n      console.log(edge.source);\n      return edge.id != edgeId;\n    });\n    setEdges(newEdges);\n  };\n\n  var sharedFunctions = {\n    updateNodeSdf: updateNodeSdf,\n    connectSdf: connectSdf\n  };\n  var onConnect = useCallback(function (params) {\n    var sourceNode = nodes.find(function (n) {\n      return n.id === params.source;\n    });\n    setEdges(function (eds) {\n      return addEdge(_objectSpread(_objectSpread({}, params), {}, {\n        type: \"buttonEdge\",\n        animated: true,\n        markerEnd: {\n          type: MarkerType.Arrow,\n          color: \"#000\"\n        },\n        data: {\n          onRemoveEdge: removeEdge\n        }\n      }), eds);\n    });\n    var newChildren = nodes.find(function (n) {\n      return n.id === params.target;\n    }).data.children;\n    newChildren.push(params.target);\n    setNodes(function (nds) {\n      return nds.map(function (node) {\n        if (node.id === params.source) {\n          console.log(\"A\\xD1ADIDO HIJO \".concat(params.target, \" A \").concat(params.source));\n          node.data = _objectSpread(_objectSpread({}, node.data), {}, {\n            children: newChildren\n          });\n        }\n\n        onNodesChange([node]);\n        return node;\n      });\n    });\n  }, []);\n  useEffect(function () {\n    console.log(\"NODOS ACTUALIZADOS\");\n    console.log(nodes);\n  }, [nodes]);\n  useEffect(function () {\n    console.log(\"NUEVO EDGE:\");\n    console.log(edges);\n  }, [edges]);\n\n  var newPrimitiveNode = function newPrimitiveNode() {\n    var xPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var yPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    setId(id + 1);\n    var nodeId = \"node-\".concat(id);\n    return {\n      id: nodeId,\n      type: \"primitiveNode\",\n      position: {\n        x: xPos,\n        y: yPos\n      },\n      data: {\n        sdfs: {\n          nodeId: \"sphere(1.0)\"\n        },\n        children: []\n      }\n    };\n  };\n\n  var newBooleanNode = function newBooleanNode() {\n    var xPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var yPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    setId(id + 1);\n    return {\n      id: \"node-\".concat(id),\n      type: \"booleanNode\",\n      position: {\n        x: xPos,\n        y: yPos\n      },\n      data: {\n        sdfs: {},\n        children: []\n      }\n    };\n  };\n\n  var handleKey = function handleKey(e) {\n    // SPACE BAR\n    if (e.key === \"p\") {\n      var node = newPrimitiveNode();\n      nodes.push(node);\n      onNodesChange([node]); // Para actualizar\n    } else if (e.key === \"b\") {\n      var _node = newBooleanNode();\n\n      nodes.push(_node);\n      onNodesChange([_node]); // Para actualizar\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100vh\"\n    },\n    tabIndex: \"0\",\n    onKeyDown: handleKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GraphProvider, {\n    value: sharedFunctions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    onConnect: onConnect // onDisconnect={onDisconnect}\n    ,\n    nodeTypes: nodeTypes,\n    edgeTypes: edgeTypes,\n    onInit: onInit,\n    onEdgeClick: function onEdgeClick(ev, edge) {\n      return setEdges(edges.filter(function (e) {\n        return e.id != edge.id;\n      }));\n    },\n    snapToGrid: true,\n    fitView: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Background, {\n    color: \"#aaa\",\n    gap: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"names":["React","useCallback","useEffect","ReactFlow","addEdge","Background","useNodesState","useEdgesState","MarkerType","PrimitiveNode","BooleanNode","ButtonEdge","GraphProvider","nodeTypes","primitiveNode","booleanNode","edgeTypes","buttonEdge","onInit","reactFlowInstance","console","log","Graph","initialNodes","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","useState","id","setId","newPrimitiveNode","newBooleanNode","initialEdges","updateNodeSdf","newSdf","parent","connectSdf","sourceId","targetId","params","sourceNode","find","n","newSdfs","data","sdfs","sdf","nds","map","node","removeEdge","edgeId","newEdges","filter","edge","source","sharedFunctions","onConnect","eds","type","animated","markerEnd","Arrow","color","onRemoveEdge","newChildren","target","children","push","xPos","yPos","nodeId","position","x","y","handleKey","e","key","height","ev"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/Graph.js"],"sourcesContent":["import React from \"react\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  useNodesState,\r\n  useEdgesState,\r\n  MarkerType,\r\n} from \"react-flow-renderer\";\r\nimport PrimitiveNode from \"./PrimitiveNode.js\";\r\nimport BooleanNode from \"./BooleanNode.js\";\r\nimport ButtonEdge from \"./ButtonEdge\";\r\n\r\nimport \"./styles.css\";\r\nimport { GraphProvider } from \"./GraphContext.js\";\r\n\r\nconst nodeTypes = { primitiveNode: PrimitiveNode, booleanNode: BooleanNode };\r\nconst edgeTypes = { buttonEdge: ButtonEdge };\r\n\r\n\r\n\r\nconst onInit = (reactFlowInstance) =>\r\n  console.log(\"flow loaded:\", reactFlowInstance);\r\n\r\nexport default function Graph() {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [id, setId] = React.useState(3);\r\n\r\n  const initialNodes = [ newPrimitiveNode(-100,50), newPrimitiveNode(100,50), newBooleanNode(0,550)];\r\nconst initialEdges = [];\r\n\r\n  const updateNodeSdf = (id, newSdf, parent) => {\r\n    console.log(\"ACTUALIZADO SDF\");\r\n    // var newSdfs = nodes.find((n) => n.id === id).data.sdfs;\r\n    // newSdfs[`${parent}`] = newSdf;\r\n\r\n    // setNodes((nds) =>\r\n    //   nds.map((node) => {\r\n    //     if (node.id === id) {\r\n    //       node.data = {\r\n    //         ...node.data,\r\n    //         sdfs: newSdfs,\r\n    //       };\r\n\r\n    //       node.data.children.forEach((child) => {\r\n    //         updateNodeSdf(child, newSdf, id);\r\n    //       });\r\n    //     }\r\n\r\n    //     return node;\r\n    //   })\r\n    // );\r\n  };\r\n\r\n  const connectSdf = (sourceId, targetId, params) => {\r\n    const sourceNode = nodes.find((n) => n.id === sourceId);\r\n    var newSdfs = nodes.find((n) => n.id === targetId).data.sdfs;\r\n    newSdfs[`${sourceId}`] = sourceNode.data.sdf;\r\n\r\n    console.log(newSdfs);\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === targetId) {\r\n          console.log(\"FOUND\");\r\n          node.data = {\r\n            ...node.data,\r\n            sdfs: newSdfs,\r\n          };\r\n        }\r\n\r\n        onNodesChange([node]);\r\n        return node;\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeEdge = (edgeId) => {\r\n    var newEdges = edges.filter((edge) => {\r\n      console.log(edge.source);\r\n      return edge.id != edgeId;\r\n    });\r\n\r\n    setEdges(newEdges);\r\n  };\r\n\r\n  const sharedFunctions = {\r\n    updateNodeSdf,\r\n    connectSdf,\r\n  };\r\n\r\n  const onConnect = useCallback((params) => {\r\n    const sourceNode = nodes.find((n) => n.id === params.source);\r\n\r\n    setEdges((eds) =>\r\n      addEdge(\r\n        {\r\n          ...params,\r\n          type: \"buttonEdge\",\r\n          animated: true,\r\n          markerEnd: { type: MarkerType.Arrow, color: \"#000\" },\r\n          data: { onRemoveEdge: removeEdge },\r\n        },\r\n        eds\r\n      )\r\n    );\r\n\r\n    var newChildren = nodes.find((n) => n.id === params.target).data.children;\r\n    newChildren.push(params.target);\r\n\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === params.source) {\r\n          console.log(`AÑADIDO HIJO ${params.target} A ${params.source}`);\r\n          node.data = {\r\n            ...node.data,\r\n            children: newChildren,\r\n          };\r\n        }\r\n\r\n        onNodesChange([node]);\r\n        return node;\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"NODOS ACTUALIZADOS\");\r\n    console.log(nodes);\r\n  }, [nodes]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"NUEVO EDGE:\");\r\n    console.log(edges);\r\n  }, [edges]);\r\n\r\n  const newPrimitiveNode = (xPos=0, yPos=0) => {\r\n    setId(id + 1);\r\n    const nodeId = `node-${id}`;\r\n    return {\r\n      id: nodeId,\r\n      type: \"primitiveNode\",\r\n      position: { x: xPos, y: yPos },\r\n      data: { \r\n        sdfs: {nodeId: \"sphere(1.0)\"},\r\n        children: []\r\n      },\r\n    };\r\n  };\r\n\r\n  const newBooleanNode = (xPos=0, yPos=0) => {\r\n    setId(id + 1);\r\n    return {\r\n      id: `node-${id}`,\r\n      type: \"booleanNode\",\r\n      position: { x: xPos, y: yPos },\r\n      data: { sdfs: {}, children: [] },\r\n    };\r\n  };\r\n\r\n  const handleKey = (e) => {\r\n    // SPACE BAR\r\n    if (e.key === \"p\") {\r\n      const node = newPrimitiveNode();\r\n      nodes.push(node);\r\n\r\n      onNodesChange([node]); // Para actualizar\r\n    } else if (e.key === \"b\") {\r\n      const node = newBooleanNode();\r\n      nodes.push(node);\r\n\r\n      onNodesChange([node]); // Para actualizar\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }} tabIndex=\"0\" onKeyDown={handleKey}>\r\n      <GraphProvider value={sharedFunctions}>\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          // onDisconnect={onDisconnect}\r\n\r\n          nodeTypes={nodeTypes}\r\n          edgeTypes={edgeTypes}\r\n          onInit={onInit}\r\n          onEdgeClick={(ev, edge) =>\r\n            setEdges(edges.filter((e) => e.id != edge.id))\r\n          }\r\n          snapToGrid={true}\r\n          fitView\r\n        >\r\n          <Background color=\"#aaa\" gap={10} />\r\n        </ReactFlow>\r\n      </GraphProvider>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}