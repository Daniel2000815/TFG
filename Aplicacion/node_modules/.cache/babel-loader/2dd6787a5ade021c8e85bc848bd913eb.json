{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\PrimitiveNode.js\";\nimport React, { useEffect } from \"react\";\nimport CustomNode from \"./CustomNode\";\nvar Primitives = {\n  Sphere: \"Sphere\",\n  Box: \"Box\",\n  Torus: \"Torus\",\n  Cylinder: \"Cylinder\"\n};\nexport default function PrimitiveNode(_ref) {\n  var data = _ref.data,\n      id = _ref.id;\n\n  var _React$useState = React.useState(Primitives.Sphere),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      primitive = _React$useState2[0],\n      setPrimitive = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      sdf = _React$useState4[0],\n      setSdf = _React$useState4[1];\n\n  var _React$useState5 = React.useState([1.0, 1.0, 1.0]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      inputs = _React$useState6[0],\n      setInputs = _React$useState6[1];\n\n  var _React$useState7 = React.useState([\"Radius\", \"\", \"\"]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      inputLabels = _React$useState8[0],\n      setInputLabels = _React$useState8[1];\n\n  var _React$useState9 = React.useState([true, false, false]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      inputsActive = _React$useState10[0],\n      setInputsActive = _React$useState10[1];\n\n  var prepareInputs = function prepareInputs(label1) {\n    var label2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    var label3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n    setInputLabels([label1, label2, label3]);\n    setInputsActive([label1, label2, label3]);\n  };\n\n  useEffect(function () {\n    console.log(\"ACTUALIZADO SDF\");\n\n    if (primitive == Primitives.Sphere) {\n      setSdf(\"sphere(p, \".concat(inputs[0].toFixed(4), \")\"));\n      prepareInputs(\"radius\");\n    } else if (primitive == Primitives.Box) {\n      setSdf(\"box(p, vec3(\\n          \".concat(inputs[0].toFixed(4), \", \\n          \").concat(inputs[1].toFixed(4), \", \\n          \").concat(inputs[2].toFixed(4), \"\\n          )\\n        )\"));\n      prepareInputs(\"sx\", \"sy\", \"sz\");\n    } else if (primitive == Primitives.Torus) {\n      setSdf(\"torus(p, vec2(\\n          \".concat(inputs[0].toFixed(4), \", \\n          \").concat(inputs[1].toFixed(4), \"\\n          )\\n        )\"));\n      prepareInputs(\"hole\", \"thickness\");\n    } else if (primitive == Primitives.Cylinder) {\n      setSdf(\"cylinder(p, \\n          \".concat(inputs[0].toFixed(4), \", \\n          \").concat(inputs[1].toFixed(4), \"\\n        )\"));\n      prepareInputs(\"height\", \"radius\");\n    }\n  }, [primitive, inputs]);\n  return /*#__PURE__*/React.createElement(CustomNode, {\n    id: id,\n    data: data,\n    dropdownOptions: Object.values(Primitives),\n    onChangeOption: setPrimitive,\n    sdf: sdf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  });\n}","map":{"version":3,"names":["React","useEffect","CustomNode","Primitives","Sphere","Box","Torus","Cylinder","PrimitiveNode","data","id","useState","primitive","setPrimitive","sdf","setSdf","inputs","setInputs","inputLabels","setInputLabels","inputsActive","setInputsActive","prepareInputs","label1","label2","label3","console","log","toFixed","Object","values"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/PrimitiveNode.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport CustomNode from \"./CustomNode\";\r\n\r\nconst Primitives = {\r\n    Sphere: \"Sphere\",\r\n    Box: \"Box\",\r\n    Torus: \"Torus\",\r\n    Cylinder: \"Cylinder\"\r\n  };\r\n  \r\n  export default function PrimitiveNode({ data, id }) {\r\n    const [primitive, setPrimitive] = React.useState(Primitives.Sphere);\r\n    const [sdf, setSdf] = React.useState(\"\");\r\n    const [inputs, setInputs] = React.useState([1.0, 1.0, 1.0]);\r\n  const [inputLabels, setInputLabels] = React.useState([\"Radius\", \"\", \"\"]);\r\n  const [inputsActive, setInputsActive] = React.useState([true, false, false]);\r\n\r\n  const prepareInputs = (label1, label2=\"\", label3=\"\") =>{\r\n    setInputLabels([label1, label2, label3]);\r\n    setInputsActive([label1, label2, label3]);\r\n  }\r\n    useEffect(() => {\r\n    console.log(\"ACTUALIZADO SDF\");\r\n    if (primitive == Primitives.Sphere) {\r\n      setSdf(`sphere(p, ${inputs[0].toFixed(4)})`);\r\n      prepareInputs(\"radius\");\r\n    } \r\n    else if (primitive == Primitives.Box) {\r\n      setSdf(\r\n        `box(p, vec3(\r\n          ${inputs[0].toFixed(4)}, \r\n          ${inputs[1].toFixed(4)}, \r\n          ${inputs[2].toFixed(4)}\r\n          )\r\n        )`\r\n      );\r\n      prepareInputs(\"sx\", \"sy\", \"sz\");\r\n    }\r\n    else if (primitive == Primitives.Torus) {\r\n      setSdf(\r\n        `torus(p, vec2(\r\n          ${inputs[0].toFixed(4)}, \r\n          ${inputs[1].toFixed(4)}\r\n          )\r\n        )`\r\n      );\r\n      prepareInputs(\"hole\", \"thickness\");\r\n    }\r\n    else if (primitive == Primitives.Cylinder) {\r\n      setSdf(\r\n        `cylinder(p, \r\n          ${inputs[0].toFixed(4)}, \r\n          ${inputs[1].toFixed(4)}\r\n        )`\r\n      );\r\n      prepareInputs(\"height\", \"radius\");\r\n    }\r\n  }, [primitive, inputs]);\r\n  \r\n    return (\r\n      <CustomNode\r\n        id={id}\r\n        data={data}\r\n        dropdownOptions={Object.values(Primitives)}\r\n        onChangeOption={setPrimitive}\r\n        sdf={sdf}\r\n      />\r\n    );\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module"}