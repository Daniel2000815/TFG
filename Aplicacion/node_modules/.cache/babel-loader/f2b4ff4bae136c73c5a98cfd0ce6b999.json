{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isSet = exports.Set = void 0;\nvar Vector_1 = require(\"./Vector\");\nvar Utils_1 = require(\"../Core/Utils\");\nvar Set = /*#__PURE__*/function () {\n  function Set(set) {\n    _classCallCheck(this, Set);\n    this.elements = [];\n    // if the first object isn't an array, convert it to one.\n    if (!(0, Utils_1.isVector)(set)) set = Vector_1.Vector.fromArray(arguments);\n    if (set) {\n      var elements = set.elements;\n      for (var i = 0, l = elements.length; i < l; i++) {\n        this.add(elements[i]);\n      }\n    }\n  }\n  _createClass(Set, [{\n    key: \"add\",\n    value: function add(x) {\n      if (!this.contains(x)) this.elements.push(x.clone());\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(x) {\n      for (var i = 0; i < this.elements.length; i++) {\n        var e = this.elements[i];\n        if (x.equals(e)) return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"each\",\n    value: function each(f) {\n      var elements = this.elements;\n      var set = new Set();\n      for (var i = 0, l = elements.length; i < l; i++) {\n        var e = elements[i];\n        f.call(this, e, set, i);\n      }\n      return set;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var set = new Set();\n      this.each(function (e) {\n        set.add(e.clone());\n      });\n      return set;\n    }\n  }, {\n    key: \"union\",\n    value: function union(set) {\n      var _union = this.clone();\n      set.each(function (e) {\n        _union.add(e);\n      });\n      return _union;\n    }\n  }, {\n    key: \"difference\",\n    value: function difference(set) {\n      var diff = this.clone();\n      set.each(function (e) {\n        diff.remove(e);\n      });\n      return diff;\n    }\n  }, {\n    key: \"remove\",\n    value: function (_remove) {\n      function remove(_x) {\n        return _remove.apply(this, arguments);\n      }\n      remove.toString = function () {\n        return _remove.toString();\n      };\n      return remove;\n    }(function (element) {\n      for (var i = 0, l = this.elements.length; i < l; i++) {\n        var e = this.elements[i];\n        if (e.equals(element)) {\n          remove(this.elements, i);\n          return true;\n        }\n      }\n      return false;\n    })\n  }, {\n    key: \"intersection\",\n    value: function intersection(set) {\n      var _intersection = new Set();\n      var A = this;\n      set.each(function (e) {\n        if (A.contains(e)) {\n          _intersection.add(e);\n        }\n        ;\n      });\n      return _intersection;\n    }\n  }, {\n    key: \"intersects\",\n    value: function intersects(set) {\n      return this.intersection(set).elements.length > 0;\n    }\n  }, {\n    key: \"is_subset\",\n    value: function is_subset(set) {\n      var elements = set.elements;\n      for (var i = 0, l = elements.length; i < l; i++) {\n        if (!this.contains(elements[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return '{' + this.elements.join(',') + '}';\n    }\n  }], [{\n    key: \"fromArray\",\n    value: function fromArray(arr) {\n      function F(args) {\n        return Set.apply(this, args);\n      }\n      F.prototype = Set.prototype;\n      return new F(arr);\n    }\n  }]);\n  return Set;\n}();\nexports.Set = Set;\nfunction isSet(obj) {\n  return obj instanceof Set;\n}\nexports.isSet = isSet;","map":{"version":3,"mappings":"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","names":["Set","set","elements","Vector_1","fromArray","arguments","i","l","length","add","x","contains","push","clone","e","equals","f","call","each","_union","diff","remove","element","_intersection","A","intersection","join","arr","F","args","apply","prototype","exports","isSet","obj"],"sourceRoot":"","sources":["../../src/Types/Set.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}