{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ParseUtil_js_1 = __importDefault(require(\"./ParseUtil.js\"));\n\nvar Stack_js_1 = __importDefault(require(\"./Stack.js\"));\n\nvar TexError_js_1 = __importDefault(require(\"./TexError.js\"));\n\nvar MmlNode_js_1 = require(\"../../core/MmlTree/MmlNode.js\");\n\nvar TexParser = function () {\n  function TexParser(_string, env, configuration) {\n    var e_1, _a;\n\n    this._string = _string;\n    this.configuration = configuration;\n    this.macroCount = 0;\n    this.i = 0;\n    this.currentCS = '';\n    var inner = env.hasOwnProperty('isInner');\n    var isInner = env['isInner'];\n    delete env['isInner'];\n    var ENV;\n\n    if (env) {\n      ENV = {};\n\n      try {\n        for (var _b = __values(Object.keys(env)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var id = _c.value;\n          ENV[id] = env[id];\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    this.configuration.pushParser(this);\n    this.stack = new Stack_js_1.default(this.itemFactory, ENV, inner ? isInner : true);\n    this.Parse();\n    this.Push(this.itemFactory.create('stop'));\n  }\n\n  Object.defineProperty(TexParser.prototype, \"options\", {\n    get: function get() {\n      return this.configuration.options;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TexParser.prototype, \"itemFactory\", {\n    get: function get() {\n      return this.configuration.itemFactory;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TexParser.prototype, \"tags\", {\n    get: function get() {\n      return this.configuration.tags;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TexParser.prototype, \"string\", {\n    get: function get() {\n      return this._string;\n    },\n    set: function set(str) {\n      this._string = str;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  TexParser.prototype.parse = function (kind, input) {\n    return this.configuration.handlers.get(kind).parse(input);\n  };\n\n  TexParser.prototype.lookup = function (kind, symbol) {\n    return this.configuration.handlers.get(kind).lookup(symbol);\n  };\n\n  TexParser.prototype.contains = function (kind, symbol) {\n    return this.configuration.handlers.get(kind).contains(symbol);\n  };\n\n  TexParser.prototype.toString = function () {\n    var e_2, _a;\n\n    var str = '';\n\n    try {\n      for (var _b = __values(Array.from(this.configuration.handlers.keys())), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var config = _c.value;\n        str += config + ': ' + this.configuration.handlers.get(config) + '\\n';\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return str;\n  };\n\n  TexParser.prototype.Parse = function () {\n    var c;\n\n    while (this.i < this.string.length) {\n      c = this.getCodePoint();\n      this.i += c.length;\n      this.parse('character', [this, c]);\n    }\n  };\n\n  TexParser.prototype.Push = function (arg) {\n    if (arg instanceof MmlNode_js_1.AbstractMmlNode && arg.isInferred) {\n      this.PushAll(arg.childNodes);\n    } else {\n      this.stack.Push(arg);\n    }\n  };\n\n  TexParser.prototype.PushAll = function (args) {\n    var e_3, _a;\n\n    try {\n      for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {\n        var arg = args_1_1.value;\n        this.stack.Push(arg);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n\n  TexParser.prototype.mml = function () {\n    if (!this.stack.Top().isKind('mml')) {\n      return null;\n    }\n\n    var node = this.stack.Top().First;\n    this.configuration.popParser();\n    return node;\n  };\n\n  TexParser.prototype.convertDelimiter = function (c) {\n    var symbol = this.lookup('delimiter', c);\n    return symbol ? symbol.char : null;\n  };\n\n  TexParser.prototype.getCodePoint = function () {\n    var code = this.string.codePointAt(this.i);\n    return code === undefined ? '' : String.fromCodePoint(code);\n  };\n\n  TexParser.prototype.nextIsSpace = function () {\n    return !!this.string.charAt(this.i).match(/\\s/);\n  };\n\n  TexParser.prototype.GetNext = function () {\n    while (this.nextIsSpace()) {\n      this.i++;\n    }\n\n    return this.getCodePoint();\n  };\n\n  TexParser.prototype.GetCS = function () {\n    var CS = this.string.slice(this.i).match(/^(([a-z]+) ?|[\\uD800-\\uDBFF].|.)/i);\n\n    if (CS) {\n      this.i += CS[0].length;\n      return CS[2] || CS[1];\n    } else {\n      this.i++;\n      return ' ';\n    }\n  };\n\n  TexParser.prototype.GetArgument = function (_name, noneOK) {\n    switch (this.GetNext()) {\n      case '':\n        if (!noneOK) {\n          throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', this.currentCS);\n        }\n\n        return null;\n\n      case '}':\n        if (!noneOK) {\n          throw new TexError_js_1.default('ExtraCloseMissingOpen', 'Extra close brace or missing open brace');\n        }\n\n        return null;\n\n      case '\\\\':\n        this.i++;\n        return '\\\\' + this.GetCS();\n\n      case '{':\n        var j = ++this.i,\n            parens = 1;\n\n        while (this.i < this.string.length) {\n          switch (this.string.charAt(this.i++)) {\n            case '\\\\':\n              this.i++;\n              break;\n\n            case '{':\n              parens++;\n              break;\n\n            case '}':\n              if (--parens === 0) {\n                return this.string.slice(j, this.i - 1);\n              }\n\n              break;\n          }\n        }\n\n        throw new TexError_js_1.default('MissingCloseBrace', 'Missing close brace');\n    }\n\n    var c = this.getCodePoint();\n    this.i += c.length;\n    return c;\n  };\n\n  TexParser.prototype.GetBrackets = function (_name, def) {\n    if (this.GetNext() !== '[') {\n      return def;\n    }\n\n    var j = ++this.i,\n        parens = 0;\n\n    while (this.i < this.string.length) {\n      switch (this.string.charAt(this.i++)) {\n        case '{':\n          parens++;\n          break;\n\n        case '\\\\':\n          this.i++;\n          break;\n\n        case '}':\n          if (parens-- <= 0) {\n            throw new TexError_js_1.default('ExtraCloseLooking', 'Extra close brace while looking for %1', '\\']\\'');\n          }\n\n          break;\n\n        case ']':\n          if (parens === 0) {\n            return this.string.slice(j, this.i - 1);\n          }\n\n          break;\n      }\n    }\n\n    throw new TexError_js_1.default('MissingCloseBracket', 'Could not find closing \\']\\' for argument to %1', this.currentCS);\n  };\n\n  TexParser.prototype.GetDelimiter = function (name, braceOK) {\n    var c = this.GetNext();\n    this.i += c.length;\n\n    if (this.i <= this.string.length) {\n      if (c === '\\\\') {\n        c += this.GetCS();\n      } else if (c === '{' && braceOK) {\n        this.i--;\n        c = this.GetArgument(name).trim();\n      }\n\n      if (this.contains('delimiter', c)) {\n        return this.convertDelimiter(c);\n      }\n    }\n\n    throw new TexError_js_1.default('MissingOrUnrecognizedDelim', 'Missing or unrecognized delimiter for %1', this.currentCS);\n  };\n\n  TexParser.prototype.GetDimen = function (name) {\n    if (this.GetNext() === '{') {\n      var dimen = this.GetArgument(name);\n\n      var _a = __read(ParseUtil_js_1.default.matchDimen(dimen), 2),\n          value = _a[0],\n          unit = _a[1];\n\n      if (value) {\n        return value + unit;\n      }\n    } else {\n      var dimen = this.string.slice(this.i);\n\n      var _b = __read(ParseUtil_js_1.default.matchDimen(dimen, true), 3),\n          value = _b[0],\n          unit = _b[1],\n          length_1 = _b[2];\n\n      if (value) {\n        this.i += length_1;\n        return value + unit;\n      }\n    }\n\n    throw new TexError_js_1.default('MissingDimOrUnits', 'Missing dimension or its units for %1', this.currentCS);\n  };\n\n  TexParser.prototype.GetUpTo = function (_name, token) {\n    while (this.nextIsSpace()) {\n      this.i++;\n    }\n\n    var j = this.i;\n    var parens = 0;\n\n    while (this.i < this.string.length) {\n      var k = this.i;\n      var c = this.GetNext();\n      this.i += c.length;\n\n      switch (c) {\n        case '\\\\':\n          c += this.GetCS();\n          break;\n\n        case '{':\n          parens++;\n          break;\n\n        case '}':\n          if (parens === 0) {\n            throw new TexError_js_1.default('ExtraCloseLooking', 'Extra close brace while looking for %1', token);\n          }\n\n          parens--;\n          break;\n      }\n\n      if (parens === 0 && c === token) {\n        return this.string.slice(j, k);\n      }\n    }\n\n    throw new TexError_js_1.default('TokenNotFoundForCommand', 'Could not find %1 for %2', token, this.currentCS);\n  };\n\n  TexParser.prototype.ParseArg = function (name) {\n    return new TexParser(this.GetArgument(name), this.stack.env, this.configuration).mml();\n  };\n\n  TexParser.prototype.ParseUpTo = function (name, token) {\n    return new TexParser(this.GetUpTo(name, token), this.stack.env, this.configuration).mml();\n  };\n\n  TexParser.prototype.GetDelimiterArg = function (name) {\n    var c = ParseUtil_js_1.default.trimSpaces(this.GetArgument(name));\n\n    if (c === '') {\n      return null;\n    }\n\n    if (this.contains('delimiter', c)) {\n      return c;\n    }\n\n    throw new TexError_js_1.default('MissingOrUnrecognizedDelim', 'Missing or unrecognized delimiter for %1', this.currentCS);\n  };\n\n  TexParser.prototype.GetStar = function () {\n    var star = this.GetNext() === '*';\n\n    if (star) {\n      this.i++;\n    }\n\n    return star;\n  };\n\n  TexParser.prototype.create = function (kind) {\n    var _a;\n\n    var rest = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      rest[_i - 1] = arguments[_i];\n    }\n\n    return (_a = this.configuration.nodeFactory).create.apply(_a, __spreadArray([kind], __read(rest), false));\n  };\n\n  return TexParser;\n}();\n\nexports.default = TexParser;","map":{"version":3,"mappings":"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","names":["_string","env","configuration","inner","hasOwnProperty","isInner","ENV","keys","_c","id","pushParser","stack","Stack_js_1","itemFactory","Parse","Push","create","Object","TexParser","options","tags","str","kind","input","handlers","get","parse","symbol","lookup","contains","from","config","c","i","string","length","getCodePoint","arg","MmlNode_js_1","isInferred","PushAll","childNodes","args","args_1_1","Top","isKind","node","First","popParser","char","code","codePointAt","undefined","String","fromCodePoint","charAt","match","nextIsSpace","CS","slice","_name","noneOK","GetNext","TexError_js_1","currentCS","GetCS","j","parens","def","name","braceOK","GetArgument","trim","convertDelimiter","dimen","ParseUtil_js_1","matchDimen","value","unit","length_1","token","k","mml","GetUpTo","trimSpaces","star","rest","nodeFactory","apply","_a","__spreadArray","__read"],"sourceRoot":"","sources":["../../../ts/input/tex/TexParser.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}