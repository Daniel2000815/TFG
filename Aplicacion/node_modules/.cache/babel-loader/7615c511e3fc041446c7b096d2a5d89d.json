{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\GrobnerPage\\\\GrobnerPage.js\";\nimport React, { useState, useEfect } from \"react\";\nimport Grid from '@mui/material/Grid';\nimport Divider from '@mui/material/Divider';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport newId from '../uniqueIdHook';\n\nvar nerdamer = require('nerdamer');\n\nrequire('nerdamer/Algebra'); // [variable, exponent] both strings\n\n\nfunction exp(p) {\n  var v = ['x', 'y', 'z'];\n  var degs = [nerdamer(\"deg(\".concat(p, \", x)\")).toString(), nerdamer(\"deg(\".concat(p, \", y)\")).toString(), nerdamer(\"deg(\".concat(p, \", z)\")).toString()];\n  var max = Math.max.apply(Math, degs).toString();\n  return [v[degs.indexOf(max)], max];\n}\n\nfunction lc(f, variable) {\n  return nerdamer.coeffs(\"\".concat(f), \"\".concat(variable))[2].toString();\n} // monomio lider\n\n\nfunction lm(f) {\n  return '';\n}\n\nfunction division(f, dividers) {\n  var s = dividers.length;\n  var p = f;\n  var r = 0;\n  var q = new Array(s).fill(0);\n\n  while (p !== '0') {\n    var i = 1;\n    var step = 0;\n\n    while (i < s && step === 0) {\n      var exp_p = exp(p);\n      var exp_fi = exp(dividers[i]);\n      var gamma = exp_p[1] - exp_fi[i];\n\n      if (gamma > 0) {\n        q[i] += nerdamer(\"\");\n      } else {\n        i++;\n      }\n    }\n\n    if (step === 0) {}\n  }\n}\n\nfunction PolynomialInput(props) {\n  return /*#__PURE__*/React.createElement(TextField, {\n    sx: {\n      width: '100%'\n    },\n    value: props.val,\n    onChange: function onChange(e) {\n      return props.handleChange(e.target.value);\n    },\n    id: props.label,\n    error: props.val === '',\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, props.label, \" = \")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default function GrobnerPage() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      dividendo = _useState2[0],\n      setDividendo = _useState2[1];\n\n  var _useState3 = useState([\"2x\", \"3x\"]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      divisores = _useState4[0],\n      setDivisores = _useState4[1];\n\n  var handleDivisoresChange = function handleDivisoresChange(idx, val) {\n    var newDivisores = _toConsumableArray(divisores);\n\n    newDivisores[idx] = val;\n    setDivisores(newDivisores);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    spacing: 10,\n    padding: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Hola:\", exp('2x^2 + y^3').toString(), \"coefs: \", nerdamer.coeffs('x^2 -99x^2+6x-9x^6+y^3+ xy', 'x').toString(), \"lc: \", lc('x^2+y^5', 'y')), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PolynomialInput, {\n    label: \"f\",\n    val: dividendo,\n    handleChange: function handleChange(v) {\n      return setDividendo(v);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"DIVIDERS\"), divisores.map(function (divisor, idx) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: \"dividerInput_\".concat(idx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(PolynomialInput, {\n      label: \"f\".concat(idx + 1),\n      val: divisor,\n      handleChange: function handleChange(v) {\n        return handleDivisoresChange(idx, v);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    })));\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"TODO\"));\n}","map":{"version":3,"names":["React","useState","useEfect","Grid","Divider","TextField","InputAdornment","newId","nerdamer","require","exp","p","v","degs","toString","max","Math","indexOf","lc","f","variable","coeffs","lm","division","dividers","s","length","r","q","Array","fill","i","step","exp_p","exp_fi","gamma","PolynomialInput","props","width","val","e","handleChange","target","value","label","startAdornment","GrobnerPage","dividendo","setDividendo","divisores","setDivisores","handleDivisoresChange","idx","newDivisores","map","divisor"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/GrobnerPage/GrobnerPage.js"],"sourcesContent":["import React, { useState, useEfect } from \"react\";\r\nimport Grid from '@mui/material/Grid';\r\nimport Divider from '@mui/material/Divider';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport newId from '../uniqueIdHook';\r\n\r\nconst nerdamer = require('nerdamer');\r\nrequire('nerdamer/Algebra');\r\n\r\n// [variable, exponent] both strings\r\nfunction exp (p) {\r\n    const v = ['x', 'y', 'z'];\r\n    const degs = [nerdamer(`deg(${p}, x)`).toString(), nerdamer(`deg(${p}, y)`).toString(), nerdamer(`deg(${p}, z)`).toString()];\r\n    const max = Math.max(...degs).toString();\r\n\r\n    return [ v[degs.indexOf(max)] , max];\r\n}\r\n\r\nfunction lc(f, variable){\r\n    return (nerdamer.coeffs(`${f}`, `${variable}`) )[2].toString();\r\n}\r\n\r\n// monomio lider\r\nfunction lm(f){\r\n    return ''\r\n}\r\n\r\nfunction division(f, dividers){\r\n    const s = dividers.length;\r\n    let p = f;\r\n    let r = 0;\r\n    let q = new Array(s).fill(0);\r\n    \r\n    while(p!=='0'){\r\n        let i = 1;\r\n        let step = 0;\r\n\r\n        while(i<s && step===0){\r\n            const exp_p = exp(p);\r\n            const exp_fi = exp(dividers[i]);\r\n            const gamma = exp_p[1] - exp_fi[i];\r\n\r\n            if(gamma > 0){ \r\n                q[i] += nerdamer(``)\r\n            }\r\n            else{\r\n                i++;\r\n            }\r\n        }\r\n        if(step === 0){\r\n            \r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction PolynomialInput(props) {\r\n    return (\r\n        <TextField\r\n            sx={{ width: '100%' }}\r\n            value={props.val}\r\n            onChange={(e) => props.handleChange(e.target.value)}\r\n            id={props.label}\r\n            error={props.val === ''}\r\n            InputProps={{\r\n                startAdornment: (\r\n                    <InputAdornment position=\"start\">{props.label} = </InputAdornment>\r\n                ),\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default function GrobnerPage() {\r\n    const [dividendo, setDividendo] = useState(\"\");\r\n    const [divisores, setDivisores] = useState([\"2x\", \"3x\"]);\r\n\r\n    const handleDivisoresChange = (idx, val) => {\r\n        let newDivisores = [...divisores];\r\n        newDivisores[idx] = val;\r\n        setDivisores(newDivisores);\r\n    }\r\n\r\n    return <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n        spacing={10}\r\n        padding={2}\r\n    >\r\n        <Grid item xs={12}>\r\n        Hola:{exp('2x^2 + y^3').toString()}\r\n        coefs: {nerdamer.coeffs('x^2 -99x^2+6x-9x^6+y^3+ xy', 'x').toString()   }\r\n        lc: {lc('x^2+y^5', 'y')}\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n            <PolynomialInput label={`f`} val={dividendo} handleChange={(v) => setDividendo(v)} />\r\n            <Divider>DIVIDERS</Divider>\r\n            {divisores.map(function (divisor, idx) {\r\n                return (\r\n                    <div key={`dividerInput_${idx}`}>\r\n                        <Grid item xs={12}>\r\n                            <PolynomialInput label={`f${idx + 1}`} val={divisor} handleChange={(v) => handleDivisoresChange(idx, v)} />\r\n                        </Grid>\r\n                    </div>\r\n                );\r\n            })}\r\n\r\n        </Grid>\r\n        <Grid item xs={6}>TODO</Grid>\r\n    </Grid >;\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AAEA,IAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACAA,OAAO,CAAC,kBAAD,CAAP,C,CAEA;;;AACA,SAASC,GAAT,CAAcC,CAAd,EAAiB;EACb,IAAMC,CAAC,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAV;EACA,IAAMC,IAAI,GAAG,CAACL,QAAQ,eAAQG,CAAR,UAAR,CAAyBG,QAAzB,EAAD,EAAsCN,QAAQ,eAAQG,CAAR,UAAR,CAAyBG,QAAzB,EAAtC,EAA2EN,QAAQ,eAAQG,CAAR,UAAR,CAAyBG,QAAzB,EAA3E,CAAb;EACA,IAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,OAAAC,IAAI,EAAQH,IAAR,CAAJ,CAAkBC,QAAlB,EAAZ;EAEA,OAAO,CAAEF,CAAC,CAACC,IAAI,CAACI,OAAL,CAAaF,GAAb,CAAD,CAAH,EAAyBA,GAAzB,CAAP;AACH;;AAED,SAASG,EAAT,CAAYC,CAAZ,EAAeC,QAAf,EAAwB;EACpB,OAAQZ,QAAQ,CAACa,MAAT,WAAmBF,CAAnB,aAA2BC,QAA3B,EAAD,CAA0C,CAA1C,EAA6CN,QAA7C,EAAP;AACH,C,CAED;;;AACA,SAASQ,EAAT,CAAYH,CAAZ,EAAc;EACV,OAAO,EAAP;AACH;;AAED,SAASI,QAAT,CAAkBJ,CAAlB,EAAqBK,QAArB,EAA8B;EAC1B,IAAMC,CAAC,GAAGD,QAAQ,CAACE,MAAnB;EACA,IAAIf,CAAC,GAAGQ,CAAR;EACA,IAAIQ,CAAC,GAAG,CAAR;EACA,IAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAUJ,CAAV,EAAaK,IAAb,CAAkB,CAAlB,CAAR;;EAEA,OAAMnB,CAAC,KAAG,GAAV,EAAc;IACV,IAAIoB,CAAC,GAAG,CAAR;IACA,IAAIC,IAAI,GAAG,CAAX;;IAEA,OAAMD,CAAC,GAACN,CAAF,IAAOO,IAAI,KAAG,CAApB,EAAsB;MAClB,IAAMC,KAAK,GAAGvB,GAAG,CAACC,CAAD,CAAjB;MACA,IAAMuB,MAAM,GAAGxB,GAAG,CAACc,QAAQ,CAACO,CAAD,CAAT,CAAlB;MACA,IAAMI,KAAK,GAAGF,KAAK,CAAC,CAAD,CAAL,GAAWC,MAAM,CAACH,CAAD,CAA/B;;MAEA,IAAGI,KAAK,GAAG,CAAX,EAAa;QACTP,CAAC,CAACG,CAAD,CAAD,IAAQvB,QAAQ,IAAhB;MACH,CAFD,MAGI;QACAuB,CAAC;MACJ;IACJ;;IACD,IAAGC,IAAI,KAAK,CAAZ,EAAc,CAEb;EACJ;AACJ;;AAGD,SAASI,eAAT,CAAyBC,KAAzB,EAAgC;EAC5B,oBACI,oBAAC,SAAD;IACI,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAT,CADR;IAEI,KAAK,EAAED,KAAK,CAACE,GAFjB;IAGI,QAAQ,EAAE,kBAACC,CAAD;MAAA,OAAOH,KAAK,CAACI,YAAN,CAAmBD,CAAC,CAACE,MAAF,CAASC,KAA5B,CAAP;IAAA,CAHd;IAII,EAAE,EAAEN,KAAK,CAACO,KAJd;IAKI,KAAK,EAAEP,KAAK,CAACE,GAAN,KAAc,EALzB;IAMI,UAAU,EAAE;MACRM,cAAc,eACV,oBAAC,cAAD;QAAgB,QAAQ,EAAC,OAAzB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAkCR,KAAK,CAACO,KAAxC;IAFI,CANhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ;AAcH;;AAED,eAAe,SAASE,WAAT,GAAuB;EAClC,gBAAkC7C,QAAQ,CAAC,EAAD,CAA1C;EAAA;EAAA,IAAO8C,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAAkC/C,QAAQ,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,CAA1C;EAAA;EAAA,IAAOgD,SAAP;EAAA,IAAkBC,YAAlB;;EAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,GAAD,EAAMb,GAAN,EAAc;IACxC,IAAIc,YAAY,sBAAOJ,SAAP,CAAhB;;IACAI,YAAY,CAACD,GAAD,CAAZ,GAAoBb,GAApB;IACAW,YAAY,CAACG,YAAD,CAAZ;EACH,CAJD;;EAMA,oBAAO,oBAAC,IAAD;IACH,SAAS,MADN;IAEH,SAAS,EAAC,KAFP;IAGH,cAAc,EAAC,YAHZ;IAIH,UAAU,EAAC,YAJR;IAKH,OAAO,EAAE,EALN;IAMH,OAAO,EAAE,CANN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAQH,oBAAC,IAAD;IAAM,IAAI,MAAV;IAAW,EAAE,EAAE,EAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YACM3C,GAAG,CAAC,YAAD,CAAH,CAAkBI,QAAlB,EADN,aAEQN,QAAQ,CAACa,MAAT,CAAgB,4BAAhB,EAA8C,GAA9C,EAAmDP,QAAnD,EAFR,UAGKI,EAAE,CAAC,SAAD,EAAY,GAAZ,CAHP,CARG,eAaH,oBAAC,IAAD;IAAM,IAAI,MAAV;IAAW,EAAE,EAAE,CAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,eAAD;IAAiB,KAAK,KAAtB;IAA6B,GAAG,EAAE6B,SAAlC;IAA6C,YAAY,EAAE,sBAACnC,CAAD;MAAA,OAAOoC,YAAY,CAACpC,CAAD,CAAnB;IAAA,CAA3D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAEI,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cAFJ,EAGKqC,SAAS,CAACK,GAAV,CAAc,UAAUC,OAAV,EAAmBH,GAAnB,EAAwB;IACnC,oBACI;MAAK,GAAG,yBAAkBA,GAAlB,CAAR;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI,oBAAC,IAAD;MAAM,IAAI,MAAV;MAAW,EAAE,EAAE,EAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI,oBAAC,eAAD;MAAiB,KAAK,aAAMA,GAAG,GAAG,CAAZ,CAAtB;MAAuC,GAAG,EAAEG,OAA5C;MAAqD,YAAY,EAAE,sBAAC3C,CAAD;QAAA,OAAOuC,qBAAqB,CAACC,GAAD,EAAMxC,CAAN,CAA5B;MAAA,CAAnE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADJ,CADJ,CADJ;EAOH,CARA,CAHL,CAbG,eA2BH,oBAAC,IAAD;IAAM,IAAI,MAAV;IAAW,EAAE,EAAE,CAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,UA3BG,CAAP;AA6BH"},"metadata":{},"sourceType":"module"}