{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getQuadrant = exports.Frac = void 0;\n\nvar Utils_1 = require(\"../Core/Utils\");\n\nvar decimal_js_1 = __importDefault(require(\"decimal.js\"));\n\nvar bigInt_1 = __importDefault(require(\"../3rdparty/bigInt\"));\n\nvar Scientific_1 = __importDefault(require(\"./Scientific\"));\n\nvar Errors_1 = require(\"../Core/Errors\");\n\nvar Settings_1 = require(\"../Settings\");\n\nvar Frac = /*#__PURE__*/function () {\n  function Frac(n) {\n    _classCallCheck(this, Frac);\n\n    if (n instanceof Frac) return n;\n    if (n === undefined) return this;\n\n    try {\n      if ((0, Utils_1.isInt)(n)) {\n        try {\n          this.num = (0, bigInt_1.default)(n);\n          this.den = (0, bigInt_1.default)(1);\n        } catch (e) {\n          return Frac.simple(n);\n        }\n      } else {\n        var frac = n instanceof decimal_js_1.default ? Fraction.quickConversion(n) : Fraction.convert(n);\n        this.num = new bigInt_1.default(frac[0]);\n        this.den = new bigInt_1.default(frac[1]);\n      }\n    } catch (e) {\n      return Frac.simple(n);\n    }\n  } //safe to use with negative numbers or other types\n\n\n  _createClass(Frac, [{\n    key: \"multiply\",\n    value: function multiply(m) {\n      if (this.isOne()) {\n        return m.clone();\n      }\n\n      if (m.isOne()) {\n        return this.clone();\n      }\n\n      var c = this.clone();\n      c.num = c.num.multiply(m.num);\n      c.den = c.den.multiply(m.den);\n      return c.simplify();\n    }\n  }, {\n    key: \"divide\",\n    value: function divide(m) {\n      if (m.equals(0)) throw new Errors_1.DivisionByZero('Division by zero not allowed!');\n      return this.clone().multiply(m.clone().invert()).simplify();\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract(m) {\n      return this.clone().add(m.clone().neg());\n    }\n  }, {\n    key: \"neg\",\n    value: function neg() {\n      this.num = this.num.multiply(-1);\n      return this;\n    }\n  }, {\n    key: \"add\",\n    value: function add(m) {\n      var n1 = this.den,\n          n2 = m.den,\n          c = this.clone();\n      var a = c.num,\n          b = m.num;\n\n      if (n1.equals(n2)) {\n        c.num = a.add(b);\n      } else {\n        c.num = a.multiply(n2).add(b.multiply(n1));\n        c.den = n1.multiply(n2);\n      }\n\n      return c.simplify();\n    }\n  }, {\n    key: \"mod\",\n    value: function mod(m) {\n      var a = this.clone(),\n          b = m.clone(); //make their denominators even and return the mod of their numerators\n\n      a.num = a.num.multiply(b.den);\n      a.den = a.den.multiply(b.den);\n      b.num = b.num.multiply(this.den);\n      b.den = b.den.multiply(this.den);\n      a.num = a.num.mod(b.num);\n      return a.simplify();\n    }\n  }, {\n    key: \"simplify\",\n    value: function simplify() {\n      var gcd = bigInt_1.default.gcd(this.num, this.den);\n      this.num = this.num.divide(gcd);\n      this.den = this.den.divide(gcd);\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var m = new Frac();\n      m.num = new bigInt_1.default(this.num);\n      m.den = new bigInt_1.default(this.den);\n      return m;\n    }\n  }, {\n    key: \"decimal\",\n    value: function decimal(prec) {\n      var sign = this.num.isNegative() ? '-' : '';\n\n      if (this.num.equals(this.den)) {\n        return '1';\n      } //go plus one for rounding\n\n\n      prec = prec || Settings_1.Settings.PRECISION;\n      prec++;\n      var narr = [],\n          n = this.num.abs(),\n          d = this.den;\n\n      for (var i = 0; i < prec; i++) {\n        var w = n.divide(d),\n            //divide out whole\n        r = n.subtract(w.multiply(d)); //get remainder\n\n        narr.push(w);\n        if (r.equals(0)) break;\n        n = r.times(10); //shift one dec place\n      }\n\n      var whole = narr.shift();\n\n      if (narr.length === 0) {\n        return sign + whole.toString();\n      }\n\n      if (i === prec) {\n        var lt = []; //get the last two so we can round it\n\n        for (var i = 0; i < 2; i++) {\n          lt.unshift(narr.pop());\n        } //put the last digit back by rounding the last two\n\n\n        narr.push(Math.round(lt.join('.')));\n      }\n\n      var dec = whole.toString() + '.' + narr.join('');\n      return sign + dec;\n    }\n  }, {\n    key: \"toDecimal\",\n    value: function toDecimal(prec) {\n      prec = prec || Settings_1.Settings.PRECISION;\n\n      if (prec) {\n        return this.decimal(prec);\n      } else return this.num / this.den;\n    }\n  }, {\n    key: \"qcompare\",\n    value: function qcompare(n) {\n      return [this.num.multiply(n.den), n.num.multiply(this.den)];\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(n) {\n      if (!isNaN(n)) n = new Frac(n);\n      var q = this.qcompare(n);\n      return q[0].equals(q[1]);\n    }\n  }, {\n    key: \"absEquals\",\n    value: function absEquals(n) {\n      if (!isNaN(n)) n = new Frac(n);\n      var q = this.qcompare(n);\n      return q[0].abs().equals(q[1]);\n    } //lazy check to be fixed. Sufficient for now but will cause future problems\n\n  }, {\n    key: \"greaterThan\",\n    value: function greaterThan(n) {\n      if (!isNaN(n)) n = new Frac(n);\n      var q = this.qcompare(n);\n      return q[0].gt(q[1]);\n    }\n  }, {\n    key: \"gte\",\n    value: function gte(n) {\n      return this.greaterThan(n) || this.equals(n);\n    }\n  }, {\n    key: \"lte\",\n    value: function lte(n) {\n      return this.lessThan(n) || this.equals(n);\n    }\n  }, {\n    key: \"lessThan\",\n    value: function lessThan(n) {\n      if (!isNaN(n)) n = new Frac(n);\n      var q = this.qcompare(n);\n      return q[0].lt(q[1]);\n    }\n  }, {\n    key: \"isInteger\",\n    value: function isInteger() {\n      return this.den.equals(1);\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      this.num = this.num.multiply(-1);\n      return this;\n    }\n  }, {\n    key: \"invert\",\n    value: function invert() {\n      var t = this.den; //why invert 0/1? It'll become 1/0 and that's a lie.\n\n      if (!this.num.equals(0)) {\n        var isnegative = this.num.isNegative();\n        this.den = this.num.abs();\n        this.num = t;\n        if (isnegative) this.num = this.num.multiply(-1);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"isOne\",\n    value: function isOne() {\n      return this.num.equals(1) && this.den.equals(1);\n    }\n  }, {\n    key: \"sign\",\n    value: function sign() {\n      return this.num.isNegative() ? -1 : 1;\n    }\n  }, {\n    key: \"abs\",\n    value: function abs() {\n      this.num = this.num.abs();\n      return this;\n    }\n  }, {\n    key: \"gcd\",\n    value: function gcd(f) {\n      return Frac.quick(bigInt_1.default.gcd(f.num, this.num), bigInt_1.default.lcm(f.den, this.den));\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return !this.den.equals(1) ? this.num.toString() + '/' + this.den.toString() : this.num.toString();\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      //            if (this.num == 24) throw new Error(999)\n      if (Settings_1.Settings.USE_BIG) return new decimal_js_1.default(this.num.toString()).div(new decimal_js_1.default(this.den.toString()));\n      return this.num / this.den;\n    }\n  }, {\n    key: \"isNegative\",\n    value: function isNegative() {\n      return this.toDecimal() < 0;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(n) {\n      if (n instanceof Frac) return n;\n      n = n.toString();\n      var is_neg = n.charAt(0) === '-'; //check if it's negative\n\n      if (is_neg) n = n.substr(1, n.length - 1); //remove the sign\n\n      var frac = new Frac(n); //put the sign back\n\n      if (is_neg) frac.negate();\n      return frac;\n    }\n  }, {\n    key: \"isFrac\",\n    value: function isFrac(o) {\n      return o instanceof Frac;\n    }\n  }, {\n    key: \"quick\",\n    value: function quick(n, d) {\n      var frac = new Frac();\n      frac.num = new bigInt_1.default(n);\n      frac.den = new bigInt_1.default(d);\n      return frac;\n    }\n  }, {\n    key: \"simple\",\n    value: function simple(n) {\n      var nstr = String((0, Utils_1.scientificToDecimal)(n)),\n          m_dc = nstr.split('.'),\n          num = m_dc.join(''),\n          den = 1,\n          l = (m_dc[1] || '').length;\n\n      for (var i = 0; i < l; i++) {\n        den += '0';\n      }\n\n      var frac = Frac.quick(num, den);\n      return frac.simplify();\n    }\n  }]);\n\n  return Frac;\n}();\n\nexports.Frac = Frac;\n/* \"STATIC\" */\n// converts a number to a fraction.\n\nvar Fraction = {\n  /**\n   * Converts a decimal to a fraction\n   * @param {number} value\n   * @param {object} opts\n   * @returns {Array} - an array containing the denominator and the numerator\n   */\n  convert: function convert(value, opts) {\n    var frac;\n\n    if (value === 0) {\n      frac = [0, 1];\n    } else {\n      if (value < 1e-6 || value > 1e20) {\n        var qc = this.quickConversion(Number(value));\n\n        if (qc[1] <= 1e20) {\n          var abs = Math.abs(value);\n          var sign = value / abs;\n          frac = this.fullConversion(abs.toFixed((qc[1] + '').length - 1));\n          frac[0] = frac[0] * sign;\n        } else {\n          frac = qc;\n        }\n      } else {\n        frac = this.fullConversion(value);\n      }\n    }\n\n    return frac;\n  },\n\n  /**\n   * If the fraction is too small or too large this gets called instead of fullConversion method\n   * @param {number} dec\n   * @returns {Array} - an array containing the denominator and the numerator\n   */\n  quickConversion: function quickConversion(value) {\n    var stripSign = function stripSign(s) {\n      // Explicitely convert to a string\n      if (typeof s !== 'string') {\n        s = s.toString();\n      }\n\n      var sign = ''; // Remove and store the sign\n\n      var start = s.charAt(0);\n\n      if (start === '-') {\n        s = s.substr(1, s.length);\n        sign = '-';\n      } else if (start === '+') {\n        // Just remove the plus sign\n        s = s.substr(1, s.length);\n      }\n\n      return {\n        sign: sign,\n        value: s\n      };\n    };\n\n    function convert(value) {\n      // Explicitely convert to a decimal\n      if (Scientific_1.default.isScientific(value)) {\n        value = (0, Utils_1.scientificToDecimal)(value);\n      } // Split the value into the sign and the value\n\n\n      var nparts = stripSign(value); // Split it at the decimal. We'll refer to it as the coeffient parts\n\n      var cparts = nparts.value.split('.'); // Combine the entire number by removing leading zero and adding the decimal part\n      // This would be teh same as moving the decimal point to the end\n\n      var num; // We're dealing with integers\n\n      if (cparts.length === 1) {\n        num = cparts[0];\n      } else {\n        num = cparts[0] + cparts[1];\n      }\n\n      var n = cparts[1] ? cparts[1].length : 0; // Generate the padding for the zeros\n\n      var den = \"1\".concat('0'.repeat(n));\n\n      if (num !== '0') {\n        num = num.replace(/^0+/, '');\n      }\n\n      return [nparts.sign + num, den];\n    }\n\n    return convert(value);\n  },\n\n  /**\n   * Returns a good approximation of a fraction. This method gets called by convert\n   * http://mathforum.org/library/drmath/view/61772.html\n   * Decimal To Fraction Conversion - A Simpler Version\n   * Dr Peterson\n   * @param {number} dec\n   * @returns {Array} - an array containing the denominator and the numerator\n   */\n  fullConversion: function fullConversion(dec) {\n    var done = false; // you can adjust the epsilon to a larger number if you don't need very high precision\n\n    var n1 = 0,\n        d1 = 1,\n        n2 = 1,\n        d2 = 0,\n        n = 0,\n        q = dec,\n        epsilon = 1e-16;\n\n    while (!done) {\n      n++;\n\n      if (n > 10000) {\n        done = true;\n      }\n\n      var a = Math.floor(q);\n      var num = n1 + a * n2;\n      var den = d1 + a * d2;\n      var e = q - a;\n\n      if (e < epsilon) {\n        done = true;\n      }\n\n      q = 1 / e;\n      n1 = n2;\n      d1 = d2;\n      n2 = num;\n      d2 = den;\n\n      if (Math.abs(num / den - dec) < epsilon || n > 30) {\n        done = true;\n      }\n    }\n\n    return [num, den];\n  }\n}; //Depends on Fraction\n\n/**\n * Gets the quadrant of the trig function\n * @param {Frac} m\n * @returns {Int}\n */\n\nfunction getQuadrant(m) {\n  var v = m % 2,\n      quadrant;\n  if (v < 0) v = 2 + v; //put it in terms of pi\n\n  if (v >= 0 && v <= 0.5) quadrant = 1;else if (v > 0.5 && v <= 1) quadrant = 2;else if (v > 1 && v <= 1.5) quadrant = 3;else quadrant = 4;\n  return quadrant;\n}\n\nexports.getQuadrant = getQuadrant;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;IAEaA,I;EACT,cAAYC,CAAZ,EAAa;IAAA;;IACT,IAAIA,CAAC,YAAYD,IAAjB,EACI,OAAOC,CAAP;IACJ,IAAIA,CAAC,KAAKC,SAAV,EACI,OAAO,IAAP;;IACJ,IAAI;MACA,IAAI,mBAAMD,CAAN,CAAJ,EAAc;QACV,IAAI;UACA,KAAKE,GAAL,GAAW,sBAAOF,CAAP,CAAX;UACA,KAAKG,GAAL,GAAW,sBAAO,CAAP,CAAX;QACH,CAHD,CAIA,OAAMC,CAAN,EAAS;UACL,OAAOL,IAAI,CAACM,MAAL,CAAYL,CAAZ,CAAP;QACH;MACJ,CARD,MASK;QACD,IAAIM,IAAI,GAAGN,CAAC,YAAYO,oBAAb,GAAsBC,QAAQ,CAACC,eAAT,CAAyBT,CAAzB,CAAtB,GAAoDQ,QAAQ,CAACE,OAAT,CAAiBV,CAAjB,CAA/D;QACA,KAAKE,GAAL,GAAW,IAAIS,gBAAJ,CAAWL,IAAI,CAAC,CAAD,CAAf,CAAX;QACA,KAAKH,GAAL,GAAW,IAAIQ,gBAAJ,CAAWL,IAAI,CAAC,CAAD,CAAf,CAAX;MACH;IACJ,CAfD,CAgBA,OAAMF,CAAN,EAAS;MACL,OAAOL,IAAI,CAACM,MAAL,CAAYL,CAAZ,CAAP;IACH;EACJ,C,CAED;;;;;WAsCA,kBAASY,CAAT,EAAU;MACN,IAAI,KAAKC,KAAL,EAAJ,EAAkB;QACd,OAAOD,CAAC,CAACE,KAAF,EAAP;MACH;;MACD,IAAIF,CAAC,CAACC,KAAF,EAAJ,EAAe;QACX,OAAO,KAAKC,KAAL,EAAP;MACH;;MAED,IAAIC,CAAC,GAAG,KAAKD,KAAL,EAAR;MACAC,CAAC,CAACb,GAAF,GAAQa,CAAC,CAACb,GAAF,CAAMc,QAAN,CAAeJ,CAAC,CAACV,GAAjB,CAAR;MACAa,CAAC,CAACZ,GAAF,GAAQY,CAAC,CAACZ,GAAF,CAAMa,QAAN,CAAeJ,CAAC,CAACT,GAAjB,CAAR;MAEA,OAAOY,CAAC,CAACE,QAAF,EAAP;IACH;;;WAED,gBAAOL,CAAP,EAAQ;MACJ,IAAIA,CAAC,CAACM,MAAF,CAAS,CAAT,CAAJ,EACI,MAAM,IAAIC,uBAAJ,CAAmB,+BAAnB,CAAN;MACJ,OAAO,KAAKL,KAAL,GAAaE,QAAb,CAAsBJ,CAAC,CAACE,KAAF,GAAUM,MAAV,EAAtB,EAA0CH,QAA1C,EAAP;IACH;;;WAED,kBAASL,CAAT,EAAU;MACN,OAAO,KAAKE,KAAL,GAAaO,GAAb,CAAiBT,CAAC,CAACE,KAAF,GAAUQ,GAAV,EAAjB,CAAP;IACH;;;WAED,eAAG;MACC,KAAKpB,GAAL,GAAW,KAAKA,GAAL,CAASc,QAAT,CAAkB,CAAC,CAAnB,CAAX;MACA,OAAO,IAAP;IACH;;;WAED,aAAIJ,CAAJ,EAAK;MACD,IAAIW,EAAE,GAAG,KAAKpB,GAAd;MAAA,IAAmBqB,EAAE,GAAGZ,CAAC,CAACT,GAA1B;MAAA,IAA+BY,CAAC,GAAG,KAAKD,KAAL,EAAnC;MACA,IAAIW,CAAC,GAAGV,CAAC,CAACb,GAAV;MAAA,IAAewB,CAAC,GAAGd,CAAC,CAACV,GAArB;;MACA,IAAIqB,EAAE,CAACL,MAAH,CAAUM,EAAV,CAAJ,EAAmB;QACfT,CAAC,CAACb,GAAF,GAAQuB,CAAC,CAACJ,GAAF,CAAMK,CAAN,CAAR;MACH,CAFD,MAGK;QACDX,CAAC,CAACb,GAAF,GAAQuB,CAAC,CAACT,QAAF,CAAWQ,EAAX,EAAeH,GAAf,CAAmBK,CAAC,CAACV,QAAF,CAAWO,EAAX,CAAnB,CAAR;QACAR,CAAC,CAACZ,GAAF,GAAQoB,EAAE,CAACP,QAAH,CAAYQ,EAAZ,CAAR;MACH;;MAED,OAAOT,CAAC,CAACE,QAAF,EAAP;IACH;;;WAED,aAAIL,CAAJ,EAAK;MACD,IAAIa,CAAC,GAAG,KAAKX,KAAL,EAAR;MAAA,IACIY,CAAC,GAAGd,CAAC,CAACE,KAAF,EADR,CADC,CAGD;;MACAW,CAAC,CAACvB,GAAF,GAAQuB,CAAC,CAACvB,GAAF,CAAMc,QAAN,CAAeU,CAAC,CAACvB,GAAjB,CAAR;MACAsB,CAAC,CAACtB,GAAF,GAAQsB,CAAC,CAACtB,GAAF,CAAMa,QAAN,CAAeU,CAAC,CAACvB,GAAjB,CAAR;MACAuB,CAAC,CAACxB,GAAF,GAAQwB,CAAC,CAACxB,GAAF,CAAMc,QAAN,CAAe,KAAKb,GAApB,CAAR;MACAuB,CAAC,CAACvB,GAAF,GAAQuB,CAAC,CAACvB,GAAF,CAAMa,QAAN,CAAe,KAAKb,GAApB,CAAR;MACAsB,CAAC,CAACvB,GAAF,GAAQuB,CAAC,CAACvB,GAAF,CAAMyB,GAAN,CAAUD,CAAC,CAACxB,GAAZ,CAAR;MACA,OAAOuB,CAAC,CAACR,QAAF,EAAP;IACH;;;WAED,oBAAQ;MACJ,IAAIW,GAAG,GAAGjB,iBAAOiB,GAAP,CAAW,KAAK1B,GAAhB,EAAqB,KAAKC,GAA1B,CAAV;MAEA,KAAKD,GAAL,GAAW,KAAKA,GAAL,CAAS2B,MAAT,CAAgBD,GAAhB,CAAX;MACA,KAAKzB,GAAL,GAAW,KAAKA,GAAL,CAAS0B,MAAT,CAAgBD,GAAhB,CAAX;MACA,OAAO,IAAP;IACH;;;WAED,iBAAK;MACD,IAAIhB,CAAC,GAAG,IAAIb,IAAJ,EAAR;MACAa,CAAC,CAACV,GAAF,GAAQ,IAAIS,gBAAJ,CAAW,KAAKT,GAAhB,CAAR;MACAU,CAAC,CAACT,GAAF,GAAQ,IAAIQ,gBAAJ,CAAW,KAAKR,GAAhB,CAAR;MACA,OAAOS,CAAP;IACH;;;WAED,iBAAQkB,IAAR,EAAY;MACR,IAAIC,IAAI,GAAG,KAAK7B,GAAL,CAAS8B,UAAT,KAAwB,GAAxB,GAA8B,EAAzC;;MACA,IAAI,KAAK9B,GAAL,CAASgB,MAAT,CAAgB,KAAKf,GAArB,CAAJ,EAA+B;QAC3B,OAAO,GAAP;MACH,CAJO,CAKR;;;MACA2B,IAAI,GAAGA,IAAI,IAAIG,oBAASC,SAAxB;MACAJ,IAAI;MACJ,IAAIK,IAAI,GAAG,EAAX;MAAA,IACInC,CAAC,GAAG,KAAKE,GAAL,CAASkC,GAAT,EADR;MAAA,IAEIC,CAAC,GAAG,KAAKlC,GAFb;;MAGA,KAAK,IAAImC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAApB,EAA0BQ,CAAC,EAA3B,EAA+B;QAC3B,IAAIC,CAAC,GAAGvC,CAAC,CAAC6B,MAAF,CAASQ,CAAT,CAAR;QAAA,IAAqB;QACjBG,CAAC,GAAGxC,CAAC,CAACyC,QAAF,CAAWF,CAAC,CAACvB,QAAF,CAAWqB,CAAX,CAAX,CADR,CAD2B,CAEQ;;QAEnCF,IAAI,CAACO,IAAL,CAAUH,CAAV;QACA,IAAIC,CAAC,CAACtB,MAAF,CAAS,CAAT,CAAJ,EACI;QACJlB,CAAC,GAAGwC,CAAC,CAACG,KAAF,CAAQ,EAAR,CAAJ,CAP2B,CAOV;MACpB;;MACD,IAAIC,KAAK,GAAGT,IAAI,CAACU,KAAL,EAAZ;;MACA,IAAIV,IAAI,CAACW,MAAL,KAAgB,CAApB,EAAuB;QACnB,OAAOf,IAAI,GAAGa,KAAK,CAACG,QAAN,EAAd;MACH;;MAED,IAAIT,CAAC,KAAKR,IAAV,EAAgB;QACZ,IAAIkB,EAAE,GAAG,EAAT,CADY,CAEZ;;QACA,KAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB;UACIU,EAAE,CAACC,OAAH,CAAWd,IAAI,CAACe,GAAL,EAAX;QADJ,CAHY,CAKZ;;;QACAf,IAAI,CAACO,IAAL,CAAUS,IAAI,CAACC,KAAL,CAAWJ,EAAE,CAACK,IAAH,CAAQ,GAAR,CAAX,CAAV;MACH;;MAED,IAAIC,GAAG,GAAGV,KAAK,CAACG,QAAN,KAAmB,GAAnB,GAAyBZ,IAAI,CAACkB,IAAL,CAAU,EAAV,CAAnC;MACA,OAAOtB,IAAI,GAAGuB,GAAd;IACH;;;WAED,mBAAUxB,IAAV,EAAc;MACVA,IAAI,GAAGA,IAAI,IAAIG,oBAASC,SAAxB;;MACA,IAAIJ,IAAJ,EAAU;QACN,OAAO,KAAKyB,OAAL,CAAazB,IAAb,CAAP;MACH,CAFD,MAII,OAAO,KAAK5B,GAAL,GAAW,KAAKC,GAAvB;IACP;;;WAED,kBAASH,CAAT,EAAU;MACN,OAAO,CAAC,KAAKE,GAAL,CAASc,QAAT,CAAkBhB,CAAC,CAACG,GAApB,CAAD,EAA2BH,CAAC,CAACE,GAAF,CAAMc,QAAN,CAAe,KAAKb,GAApB,CAA3B,CAAP;IACH;;;WAED,gBAAOH,CAAP,EAAQ;MACJ,IAAI,CAACwD,KAAK,CAACxD,CAAD,CAAV,EACIA,CAAC,GAAG,IAAID,IAAJ,CAASC,CAAT,CAAJ;MACJ,IAAIyD,CAAC,GAAG,KAAKC,QAAL,CAAc1D,CAAd,CAAR;MAEA,OAAOyD,CAAC,CAAC,CAAD,CAAD,CAAKvC,MAAL,CAAYuC,CAAC,CAAC,CAAD,CAAb,CAAP;IACH;;;WAED,mBAAUzD,CAAV,EAAW;MACP,IAAI,CAACwD,KAAK,CAACxD,CAAD,CAAV,EACIA,CAAC,GAAG,IAAID,IAAJ,CAASC,CAAT,CAAJ;MACJ,IAAIyD,CAAC,GAAG,KAAKC,QAAL,CAAc1D,CAAd,CAAR;MAEA,OAAOyD,CAAC,CAAC,CAAD,CAAD,CAAKrB,GAAL,GAAWlB,MAAX,CAAkBuC,CAAC,CAAC,CAAD,CAAnB,CAAP;IACH,C,CAED;;;;WACA,qBAAYzD,CAAZ,EAAa;MACT,IAAI,CAACwD,KAAK,CAACxD,CAAD,CAAV,EACIA,CAAC,GAAG,IAAID,IAAJ,CAASC,CAAT,CAAJ;MACJ,IAAIyD,CAAC,GAAG,KAAKC,QAAL,CAAc1D,CAAd,CAAR;MAEA,OAAOyD,CAAC,CAAC,CAAD,CAAD,CAAKE,EAAL,CAAQF,CAAC,CAAC,CAAD,CAAT,CAAP;IACH;;;WAED,aAAIzD,CAAJ,EAAK;MACD,OAAO,KAAK4D,WAAL,CAAiB5D,CAAjB,KAAuB,KAAKkB,MAAL,CAAYlB,CAAZ,CAA9B;IACH;;;WAED,aAAIA,CAAJ,EAAK;MACD,OAAO,KAAK6D,QAAL,CAAc7D,CAAd,KAAoB,KAAKkB,MAAL,CAAYlB,CAAZ,CAA3B;IACH;;;WAED,kBAASA,CAAT,EAAU;MACN,IAAI,CAACwD,KAAK,CAACxD,CAAD,CAAV,EACIA,CAAC,GAAG,IAAID,IAAJ,CAASC,CAAT,CAAJ;MACJ,IAAIyD,CAAC,GAAG,KAAKC,QAAL,CAAc1D,CAAd,CAAR;MAEA,OAAOyD,CAAC,CAAC,CAAD,CAAD,CAAKT,EAAL,CAAQS,CAAC,CAAC,CAAD,CAAT,CAAP;IACH;;;WAED,qBAAS;MACL,OAAO,KAAKtD,GAAL,CAASe,MAAT,CAAgB,CAAhB,CAAP;IACH;;;WAED,kBAAM;MACF,KAAKhB,GAAL,GAAW,KAAKA,GAAL,CAASc,QAAT,CAAkB,CAAC,CAAnB,CAAX;MACA,OAAO,IAAP;IACH;;;WAED,kBAAM;MACF,IAAI8C,CAAC,GAAG,KAAK3D,GAAb,CADE,CAEF;;MACA,IAAI,CAAC,KAAKD,GAAL,CAASgB,MAAT,CAAgB,CAAhB,CAAL,EAAyB;QACrB,IAAI6C,UAAU,GAAG,KAAK7D,GAAL,CAAS8B,UAAT,EAAjB;QACA,KAAK7B,GAAL,GAAW,KAAKD,GAAL,CAASkC,GAAT,EAAX;QACA,KAAKlC,GAAL,GAAW4D,CAAX;QACA,IAAIC,UAAJ,EACI,KAAK7D,GAAL,GAAW,KAAKA,GAAL,CAASc,QAAT,CAAkB,CAAC,CAAnB,CAAX;MACP;;MAED,OAAO,IAAP;IACH;;;WAED,iBAAK;MACD,OAAO,KAAKd,GAAL,CAASgB,MAAT,CAAgB,CAAhB,KAAsB,KAAKf,GAAL,CAASe,MAAT,CAAgB,CAAhB,CAA7B;IACH;;;WAED,gBAAI;MACA,OAAO,KAAKhB,GAAL,CAAS8B,UAAT,KAAwB,CAAC,CAAzB,GAA6B,CAApC;IACH;;;WAED,eAAG;MACC,KAAK9B,GAAL,GAAW,KAAKA,GAAL,CAASkC,GAAT,EAAX;MACA,OAAO,IAAP;IACH;;;WAED,aAAI4B,CAAJ,EAAK;MACD,OAAOjE,IAAI,CAACkE,KAAL,CAAWtD,iBAAOiB,GAAP,CAAWoC,CAAC,CAAC9D,GAAb,EAAkB,KAAKA,GAAvB,CAAX,EAAwCS,iBAAOuD,GAAP,CAAWF,CAAC,CAAC7D,GAAb,EAAkB,KAAKA,GAAvB,CAAxC,CAAP;IACH;;;WAED,oBAAQ;MACJ,OAAO,CAAC,KAAKA,GAAL,CAASe,MAAT,CAAgB,CAAhB,CAAD,GAAsB,KAAKhB,GAAL,CAAS6C,QAAT,KAAsB,GAAtB,GAA4B,KAAK5C,GAAL,CAAS4C,QAAT,EAAlD,GAAwE,KAAK7C,GAAL,CAAS6C,QAAT,EAA/E;IACH;;;WAED,mBAAO;MACX;MACQ,IAAId,oBAASkC,OAAb,EACI,OAAO,IAAI5D,oBAAJ,CAAW,KAAKL,GAAL,CAAS6C,QAAT,EAAX,EAAgCqB,GAAhC,CAAoC,IAAI7D,oBAAJ,CAAW,KAAKJ,GAAL,CAAS4C,QAAT,EAAX,CAApC,CAAP;MACJ,OAAO,KAAK7C,GAAL,GAAW,KAAKC,GAAvB;IACH;;;WAED,sBAAU;MACN,OAAO,KAAKkE,SAAL,KAAmB,CAA1B;IACH;;;WA7PD,gBAAcrE,CAAd,EAAe;MACX,IAAIA,CAAC,YAAYD,IAAjB,EACI,OAAOC,CAAP;MACJA,CAAC,GAAGA,CAAC,CAAC+C,QAAF,EAAJ;MACA,IAAIuB,MAAM,GAAGtE,CAAC,CAACuE,MAAF,CAAS,CAAT,MAAgB,GAA7B,CAJW,CAIuB;;MAClC,IAAID,MAAJ,EACItE,CAAC,GAAGA,CAAC,CAACwE,MAAF,CAAS,CAAT,EAAYxE,CAAC,CAAC8C,MAAF,GAAW,CAAvB,CAAJ,CANO,CAMwB;;MACnC,IAAIxC,IAAI,GAAG,IAAIP,IAAJ,CAASC,CAAT,CAAX,CAPW,CAQX;;MACA,IAAIsE,MAAJ,EACIhE,IAAI,CAACmE,MAAL;MACJ,OAAOnE,IAAP;IACH;;;WAED,gBAAcoE,CAAd,EAAe;MACX,OAAQA,CAAC,YAAY3E,IAArB;IACH;;;WAED,eAAaC,CAAb,EAAgBqC,CAAhB,EAAiB;MACb,IAAI/B,IAAI,GAAG,IAAIP,IAAJ,EAAX;MACAO,IAAI,CAACJ,GAAL,GAAW,IAAIS,gBAAJ,CAAWX,CAAX,CAAX;MACAM,IAAI,CAACH,GAAL,GAAW,IAAIQ,gBAAJ,CAAW0B,CAAX,CAAX;MACA,OAAO/B,IAAP;IACH;;;WAED,gBAAcN,CAAd,EAAe;MACX,IAAI2E,IAAI,GAAGC,MAAM,CAAC,iCAAoB5E,CAApB,CAAD,CAAjB;MAAA,IACI6E,IAAI,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,CADX;MAAA,IAEI5E,GAAG,GAAG2E,IAAI,CAACxB,IAAL,CAAU,EAAV,CAFV;MAAA,IAGIlD,GAAG,GAAG,CAHV;MAAA,IAII4E,CAAC,GAAG,CAACF,IAAI,CAAC,CAAD,CAAJ,IAAW,EAAZ,EAAgB/B,MAJxB;;MAKA,KAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyC,CAApB,EAAuBzC,CAAC,EAAxB;QACInC,GAAG,IAAI,GAAP;MADJ;;MAEA,IAAIG,IAAI,GAAGP,IAAI,CAACkE,KAAL,CAAW/D,GAAX,EAAgBC,GAAhB,CAAX;MACA,OAAOG,IAAI,CAACW,QAAL,EAAP;IACH;;;;;;AA/DL+D;AA6RA;AACA;;AACA,IAAIxE,QAAQ,GAAG;EACX;;;;;;EAMAE,OAAO,EAAE,iBAAUuE,KAAV,EAAiBC,IAAjB,EAAqB;IAC1B,IAAI5E,IAAJ;;IACA,IAAI2E,KAAK,KAAK,CAAd,EAAiB;MACb3E,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAP;IACH,CAFD,MAGK;MACD,IAAI2E,KAAK,GAAG,IAAR,IAAgBA,KAAK,GAAG,IAA5B,EAAkC;QAC9B,IAAIE,EAAE,GAAG,KAAK1E,eAAL,CAAqB2E,MAAM,CAACH,KAAD,CAA3B,CAAT;;QACA,IAAIE,EAAE,CAAC,CAAD,CAAF,IAAS,IAAb,EAAmB;UACf,IAAI/C,GAAG,GAAGe,IAAI,CAACf,GAAL,CAAS6C,KAAT,CAAV;UACA,IAAIlD,IAAI,GAAGkD,KAAK,GAAG7C,GAAnB;UACA9B,IAAI,GAAG,KAAK+E,cAAL,CAAoBjD,GAAG,CAACkD,OAAJ,CAAY,CAACH,EAAE,CAAC,CAAD,CAAF,GAAQ,EAAT,EAAarC,MAAb,GAAsB,CAAlC,CAApB,CAAP;UACAxC,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAJ,GAAUyB,IAApB;QACH,CALD,MAMK;UACDzB,IAAI,GAAG6E,EAAP;QACH;MACJ,CAXD,MAYK;QACD7E,IAAI,GAAG,KAAK+E,cAAL,CAAoBJ,KAApB,CAAP;MACH;IACJ;;IACD,OAAO3E,IAAP;EACH,CA9BU;;EA+BX;;;;;EAKAG,eAAe,EAAE,yBAAUwE,KAAV,EAAe;IAC5B,IAAIM,SAAS,GAAG,SAAZA,SAAY,CAAUC,CAAV,EAAW;MACvB;MACA,IAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;QACvBA,CAAC,GAAGA,CAAC,CAACzC,QAAF,EAAJ;MACH;;MAED,IAAIhB,IAAI,GAAG,EAAX,CANuB,CAQvB;;MACA,IAAI0D,KAAK,GAAGD,CAAC,CAACjB,MAAF,CAAS,CAAT,CAAZ;;MACA,IAAIkB,KAAK,KAAK,GAAd,EAAmB;QACfD,CAAC,GAAGA,CAAC,CAAChB,MAAF,CAAS,CAAT,EAAYgB,CAAC,CAAC1C,MAAd,CAAJ;QACAf,IAAI,GAAG,GAAP;MACH,CAHD,MAIK,IAAI0D,KAAK,KAAK,GAAd,EAAmB;QACpB;QACAD,CAAC,GAAGA,CAAC,CAAChB,MAAF,CAAS,CAAT,EAAYgB,CAAC,CAAC1C,MAAd,CAAJ;MACH;;MAED,OAAO;QACHf,IAAI,EAAEA,IADH;QAEHkD,KAAK,EAAEO;MAFJ,CAAP;IAIH,CAvBD;;IA0BA,SAAS9E,OAAT,CAAiBuE,KAAjB,EAAsB;MAClB;MACA,IAAIS,qBAAWC,YAAX,CAAwBV,KAAxB,CAAJ,EAAoC;QAChCA,KAAK,GAAG,iCAAoBA,KAApB,CAAR;MACH,CAJiB,CAMlB;;;MACA,IAAIW,MAAM,GAAGL,SAAS,CAACN,KAAD,CAAtB,CAPkB,CASlB;;MACA,IAAIY,MAAM,GAAGD,MAAM,CAACX,KAAP,CAAaH,KAAb,CAAmB,GAAnB,CAAb,CAVkB,CAYlB;MACA;;MACA,IAAI5E,GAAJ,CAdkB,CAelB;;MACA,IAAI2F,MAAM,CAAC/C,MAAP,KAAkB,CAAtB,EAAyB;QACrB5C,GAAG,GAAG2F,MAAM,CAAC,CAAD,CAAZ;MACH,CAFD,MAGK;QACD3F,GAAG,GAAG2F,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAAxB;MACH;;MACD,IAAI7F,CAAC,GAAG6F,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAAN,CAAU/C,MAAtB,GAA+B,CAAvC,CAtBkB,CAuBlB;;MACA,IAAI3C,GAAG,cAAO,IAAI2F,MAAJ,CAAW9F,CAAX,CAAP,CAAP;;MAEA,IAAIE,GAAG,KAAK,GAAZ,EAAiB;QACbA,GAAG,GAAGA,GAAG,CAAC6F,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,CAAN;MACH;;MACD,OAAO,CAACH,MAAM,CAAC7D,IAAP,GAAc7B,GAAf,EAAoBC,GAApB,CAAP;IACH;;IAED,OAAOO,OAAO,CAACuE,KAAD,CAAd;EACH,CAhGU;;EAiGX;;;;;;;;EAQAI,cAAc,EAAE,wBAAU/B,GAAV,EAAa;IACzB,IAAI0C,IAAI,GAAG,KAAX,CADyB,CAEzB;;IACA,IAAIzE,EAAE,GAAG,CAAT;IAAA,IAAY0E,EAAE,GAAG,CAAjB;IAAA,IAAoBzE,EAAE,GAAG,CAAzB;IAAA,IAA4B0E,EAAE,GAAG,CAAjC;IAAA,IAAoClG,CAAC,GAAG,CAAxC;IAAA,IAA2CyD,CAAC,GAAGH,GAA/C;IAAA,IAAoD6C,OAAO,GAAG,KAA9D;;IACA,OAAM,CAACH,IAAP,EAAa;MACThG,CAAC;;MACD,IAAIA,CAAC,GAAG,KAAR,EAAe;QACXgG,IAAI,GAAG,IAAP;MACH;;MACD,IAAIvE,CAAC,GAAG0B,IAAI,CAACiD,KAAL,CAAW3C,CAAX,CAAR;MACA,IAAIvD,GAAG,GAAGqB,EAAE,GAAGE,CAAC,GAAGD,EAAnB;MACA,IAAIrB,GAAG,GAAG8F,EAAE,GAAGxE,CAAC,GAAGyE,EAAnB;MACA,IAAI9F,CAAC,GAAIqD,CAAC,GAAGhC,CAAb;;MACA,IAAIrB,CAAC,GAAG+F,OAAR,EAAiB;QACbH,IAAI,GAAG,IAAP;MACH;;MACDvC,CAAC,GAAG,IAAIrD,CAAR;MACAmB,EAAE,GAAGC,EAAL;MACAyE,EAAE,GAAGC,EAAL;MACA1E,EAAE,GAAGtB,GAAL;MACAgG,EAAE,GAAG/F,GAAL;;MACA,IAAIgD,IAAI,CAACf,GAAL,CAASlC,GAAG,GAAGC,GAAN,GAAYmD,GAArB,IAA4B6C,OAA5B,IAAuCnG,CAAC,GAAG,EAA/C,EAAmD;QAC/CgG,IAAI,GAAG,IAAP;MACH;IACJ;;IACD,OAAO,CAAC9F,GAAD,EAAMC,GAAN,CAAP;EACH;AAnIU,CAAf,C,CAqIA;;AAGA;;;;;;AAKA,SAAgBkG,WAAhB,CAA4BzF,CAA5B,EAA6B;EACzB,IAAI0F,CAAC,GAAG1F,CAAC,GAAG,CAAZ;EAAA,IAAe2F,QAAf;EAEA,IAAID,CAAC,GAAG,CAAR,EACIA,CAAC,GAAG,IAAIA,CAAR,CAJqB,CAIV;;EAEf,IAAIA,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAI,GAAnB,EACIC,QAAQ,GAAG,CAAX,CADJ,KAEK,IAAID,CAAC,GAAG,GAAJ,IAAWA,CAAC,IAAI,CAApB,EACDC,QAAQ,GAAG,CAAX,CADC,KAEA,IAAID,CAAC,GAAG,CAAJ,IAASA,CAAC,IAAI,GAAlB,EACDC,QAAQ,GAAG,CAAX,CADC,KAGDA,QAAQ,GAAG,CAAX;EACJ,OAAOA,QAAP;AACH;;AAfDvB","names":["Frac","n","undefined","num","den","e","simple","frac","decimal_js_1","Fraction","quickConversion","convert","bigInt_1","m","isOne","clone","c","multiply","simplify","equals","Errors_1","invert","add","neg","n1","n2","a","b","mod","gcd","divide","prec","sign","isNegative","Settings_1","PRECISION","narr","abs","d","i","w","r","subtract","push","times","whole","shift","length","toString","lt","unshift","pop","Math","round","join","dec","decimal","isNaN","q","qcompare","gt","greaterThan","lessThan","t","isnegative","f","quick","lcm","USE_BIG","div","toDecimal","is_neg","charAt","substr","negate","o","nstr","String","m_dc","split","l","exports","value","opts","qc","Number","fullConversion","toFixed","stripSign","s","start","Scientific_1","isScientific","nparts","cparts","repeat","replace","done","d1","d2","epsilon","floor","getQuadrant","v","quadrant"],"sourceRoot":"","sources":["../../src/Types/Frac.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}