{"ast":null,"code":"import _slicedToArray from \"G:\\\\gitlab\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"G:\\\\gitlab\\\\TFG\\\\Aplicacion\\\\src\\\\BooleanNode.js\";\nimport React, { useEffect } from \"react\";\nimport CustomNode from \"./CustomNode\";\nimport ToggleButton from '@mui/material/ToggleButton';\nvar BooleanOperations = {\n  Union: \"Union\",\n  Difference: \"Difference\",\n  Intersection: \"Intersection\",\n  Repetition: \"Repetition\"\n};\nexport default function BooleanNode(_ref) {\n  var data = _ref.data,\n      id = _ref.id;\n\n  var _React$useState = React.useState(BooleanOperations.Union),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      operation = _React$useState2[0],\n      setOperation = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      smooth = _React$useState4[0],\n      setSmooth = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      sdf = _React$useState6[0],\n      setSdf = _React$useState6[1];\n\n  useEffect(function () {\n    console.log(\"SE HAN MODIFICADO LOS SDF EN NODO BOOLEANO. AHORA HAY \".concat(Object.keys(data.inputs).length));\n    var inputs = \"\".concat(Object.keys(data.inputs).map(function (key) {\n      return \"\".concat(data.inputs[key]);\n    }).join(\", \"));\n    setSdf(\"sdf\".concat(smooth ? \"Smooth\" : \"\").concat(operation, \"(\").concat(inputs, \")\"));\n  }, [data, operation]);\n  return /*#__PURE__*/React.createElement(CustomNode, {\n    title: \"!Boolean Operator\",\n    id: id,\n    data: data,\n    dropdownOptions: Object.values(BooleanOperations),\n    onChangeOption: setOperation,\n    sdf: sdf,\n    styleClass: \"boolean\",\n    body: /*#__PURE__*/React.createElement(ToggleButton, {\n      value: \"smooth\",\n      onChange: function onChange() {\n        return setSmooth(!smooth);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"Smooth\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  });\n}","map":{"version":3,"names":["React","useEffect","CustomNode","ToggleButton","BooleanOperations","Union","Difference","Intersection","Repetition","BooleanNode","data","id","useState","operation","setOperation","smooth","setSmooth","sdf","setSdf","console","log","Object","keys","inputs","length","map","key","join","values"],"sources":["G:/gitlab/TFG/Aplicacion/src/BooleanNode.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport CustomNode from \"./CustomNode\";\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\n\r\nconst BooleanOperations = {\r\n    Union: \"Union\",\r\n    Difference: \"Difference\",\r\n    Intersection: \"Intersection\",\r\n    Repetition: \"Repetition\"\r\n  };\r\n  \r\n  export default function BooleanNode({ data, id }) {\r\n    const [operation, setOperation] = React.useState(BooleanOperations.Union);\r\n    const [smooth, setSmooth] = React.useState(false);\r\n    const [sdf, setSdf] = React.useState(\"\");\r\n  \r\n    useEffect(() => {\r\n      console.log(\r\n        `SE HAN MODIFICADO LOS SDF EN NODO BOOLEANO. AHORA HAY ${\r\n          Object.keys(data.inputs).length\r\n        }`\r\n      );\r\n      const inputs = `${Object.keys(data.inputs)\r\n        .map((key) => `${data.inputs[key]}`)\r\n        .join(\", \")}`;\r\n\r\n      setSdf(`sdf${smooth ? \"Smooth\" : \"\"}${operation}(${inputs})`);\r\n    }, [data, operation]);\r\n  \r\n    return (\r\n      <CustomNode\r\n        title={\"!Boolean Operator\"}\r\n        id={id}\r\n        data={data}\r\n        dropdownOptions={Object.values(BooleanOperations)}\r\n        onChangeOption={setOperation}\r\n        sdf={sdf}\r\n        styleClass=\"boolean\"\r\n        body={\r\n          <ToggleButton value=\"smooth\" onChange={()=>setSmooth(!smooth)}>Smooth</ToggleButton>\r\n        }\r\n      />\r\n    );\r\n  }"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,IAAMC,iBAAiB,GAAG;EACtBC,KAAK,EAAE,OADe;EAEtBC,UAAU,EAAE,YAFU;EAGtBC,YAAY,EAAE,cAHQ;EAItBC,UAAU,EAAE;AAJU,CAA1B;AAOE,eAAe,SAASC,WAAT,OAAmC;EAAA,IAAZC,IAAY,QAAZA,IAAY;EAAA,IAANC,EAAM,QAANA,EAAM;;EAChD,sBAAkCX,KAAK,CAACY,QAAN,CAAeR,iBAAiB,CAACC,KAAjC,CAAlC;EAAA;EAAA,IAAOQ,SAAP;EAAA,IAAkBC,YAAlB;;EACA,uBAA4Bd,KAAK,CAACY,QAAN,CAAe,KAAf,CAA5B;EAAA;EAAA,IAAOG,MAAP;EAAA,IAAeC,SAAf;;EACA,uBAAsBhB,KAAK,CAACY,QAAN,CAAe,EAAf,CAAtB;EAAA;EAAA,IAAOK,GAAP;EAAA,IAAYC,MAAZ;;EAEAjB,SAAS,CAAC,YAAM;IACdkB,OAAO,CAACC,GAAR,iEAEIC,MAAM,CAACC,IAAP,CAAYZ,IAAI,CAACa,MAAjB,EAAyBC,MAF7B;IAKA,IAAMD,MAAM,aAAMF,MAAM,CAACC,IAAP,CAAYZ,IAAI,CAACa,MAAjB,EACfE,GADe,CACX,UAACC,GAAD;MAAA,iBAAYhB,IAAI,CAACa,MAAL,CAAYG,GAAZ,CAAZ;IAAA,CADW,EAEfC,IAFe,CAEV,IAFU,CAAN,CAAZ;IAIAT,MAAM,cAAOH,MAAM,GAAG,QAAH,GAAc,EAA3B,SAAgCF,SAAhC,cAA6CU,MAA7C,OAAN;EACD,CAXQ,EAWN,CAACb,IAAD,EAAOG,SAAP,CAXM,CAAT;EAaA,oBACE,oBAAC,UAAD;IACE,KAAK,EAAE,mBADT;IAEE,EAAE,EAAEF,EAFN;IAGE,IAAI,EAAED,IAHR;IAIE,eAAe,EAAEW,MAAM,CAACO,MAAP,CAAcxB,iBAAd,CAJnB;IAKE,cAAc,EAAEU,YALlB;IAME,GAAG,EAAEG,GANP;IAOE,UAAU,EAAC,SAPb;IAQE,IAAI,eACF,oBAAC,YAAD;MAAc,KAAK,EAAC,QAApB;MAA6B,QAAQ,EAAE;QAAA,OAAID,SAAS,CAAC,CAACD,MAAF,CAAb;MAAA,CAAvC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,YATJ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF;AAcD"},"metadata":{},"sourceType":"module"}