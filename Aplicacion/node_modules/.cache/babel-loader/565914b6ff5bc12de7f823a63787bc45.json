{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\Graph.js\";\nimport React from \"react\";\nimport { useCallback, useEffect } from \"react\";\nimport ReactFlow, { addEdge, Background, useNodesState, useEdgesState } from \"react-flow-renderer\";\nimport ButtonEdge from './ButtonEdge.js';\nimport ShaderNode from \"./ShaderNode.js\";\nimport \"./styles.css\";\nvar initialNodes = [{\n  id: \"node-1\",\n  type: \"shaderNode\",\n  position: {\n    x: 0,\n    y: 0\n  },\n  data: {\n    value: 123\n  }\n}, {\n  id: \"node-2\",\n  type: \"shaderNode\",\n  position: {\n    x: 250,\n    y: 0\n  },\n  data: {\n    value: 1\n  }\n}, {\n  id: \"node-3\",\n  type: \"shaderNode\",\n  position: {\n    x: 250,\n    y: -300\n  },\n  data: {\n    value: 1\n  }\n}];\nvar initialEdges = [];\nvar nodeTypes = {\n  shaderNode: ShaderNode\n};\nvar edgeTypes = {\n  buttonEdge: ButtonEdge\n};\n\nvar onInit = function onInit(reactFlowInstance) {\n  return console.log('flow loaded:', reactFlowInstance);\n};\n\nexport default function Graph() {\n  var _useNodesState = useNodesState(initialNodes),\n      _useNodesState2 = _slicedToArray(_useNodesState, 3),\n      nodes = _useNodesState2[0],\n      setNodes = _useNodesState2[1],\n      onNodesChange = _useNodesState2[2];\n\n  var _useEdgesState = useEdgesState(initialEdges),\n      _useEdgesState2 = _slicedToArray(_useEdgesState, 3),\n      edges = _useEdgesState2[0],\n      setEdges = _useEdgesState2[1],\n      onEdgesChange = _useEdgesState2[2]; // no funciona: borra todos\n\n\n  var onRemoveEdge = function onRemoveEdge(id) {\n    console.log(\"INTENTAS BORRAR \" + id);\n    console.log(edges); // var s = edges.find(obj => {\n    //   return obj.id === id;\n    // })\n    // console.log(s);\n    // setEdges(edges.splice(id, 1));\n  };\n\n  var onConnect = useCallback(function (params) {\n    return setEdges(function (eds) {\n      return addEdge(_objectSpread(_objectSpread({}, params), {}, {\n        animated: true,\n        markerEnd: {\n          type: 'arrow',\n          color: '#f00'\n        },\n        type: 'buttonEdge',\n        data: {\n          onRemoveEdge: onRemoveEdge\n        }\n      }), eds);\n    });\n  }, []);\n  useEffect(function () {\n    console.log(\"ASASA\");\n    console.log(edges);\n  }, [edges]);\n\n  var handleKey = function handleKey(e) {\n    if (e.key === \" \") {\n      console.log(\"SPACE BAR\");\n    } else {\n      console.log(\"F\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100vh\"\n    },\n    onKeyDown: handleKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    onConnect: onConnect // onDisconnect={onDisconnect}\n    ,\n    nodeTypes: nodeTypes,\n    edgeTypes: edgeTypes,\n    onInit: onInit,\n    snapToGrid: true,\n    fitView: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Background, {\n    color: \"#aaa\",\n    gap: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"names":["React","useCallback","useEffect","ReactFlow","addEdge","Background","useNodesState","useEdgesState","ButtonEdge","ShaderNode","initialNodes","id","type","position","x","y","data","value","initialEdges","nodeTypes","shaderNode","edgeTypes","buttonEdge","onInit","reactFlowInstance","console","log","Graph","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","onRemoveEdge","onConnect","params","eds","animated","markerEnd","color","handleKey","e","key","height"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/Graph.js"],"sourcesContent":["import React from \"react\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  useNodesState,\r\n  useEdgesState,\r\n} from \"react-flow-renderer\";\r\nimport ButtonEdge from './ButtonEdge.js';\r\nimport ShaderNode from \"./ShaderNode.js\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst initialNodes = [\r\n  {\r\n    id: \"node-1\",\r\n    type: \"shaderNode\",\r\n    position: { x: 0, y: 0 },\r\n    data: { value: 123 }\r\n  },\r\n  {\r\n    id: \"node-2\",\r\n    type: \"shaderNode\",\r\n    position: { x: 250, y: 0 },\r\n    data: { value: 1 }\r\n  },\r\n  {\r\n    id: \"node-3\",\r\n    type: \"shaderNode\",\r\n    position: { x: 250, y: -300},\r\n    data: { value: 1 }\r\n  }\r\n];\r\n\r\nconst initialEdges = [\r\n\r\n];\r\n\r\nconst nodeTypes = { shaderNode: ShaderNode };\r\nconst edgeTypes = { buttonEdge: ButtonEdge };\r\n\r\nconst onInit = (reactFlowInstance) => console.log('flow loaded:', reactFlowInstance);\r\n\r\nexport default function Graph() {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n\r\n  // no funciona: borra todos\r\n  const onRemoveEdge = (id) =>{\r\n    console.log(\"INTENTAS BORRAR \" + id);\r\n    console.log(edges);\r\n    // var s = edges.find(obj => {\r\n    //   return obj.id === id;\r\n    // })\r\n    // console.log(s);\r\n    // setEdges(edges.splice(id, 1));\r\n  }\r\n\r\n  const onConnect = useCallback(\r\n    (params) => setEdges(\r\n      (eds) => addEdge(\r\n        { \r\n          ...params, \r\n          animated:true, \r\n          markerEnd: { type: 'arrow', color: '#f00' }, \r\n          type: 'buttonEdge', \r\n          data: {onRemoveEdge: onRemoveEdge} \r\n        }, \r\n        eds)\r\n      ),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(\"ASASA\");\r\n    console.log(edges);\r\n  }, [edges]);\r\n\r\n  const handleKey= (e) => {\r\n    if (e.key === \" \") {\r\n      console.log(\"SPACE BAR\");\r\n    }\r\n    else{\r\n      console.log(\"F\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{height: \"100vh\"}} onKeyDown={handleKey}>\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n\r\n        onNodesChange={onNodesChange}\r\n        onEdgesChange={onEdgesChange}\r\n        onConnect={onConnect}\r\n        // onDisconnect={onDisconnect}\r\n\r\n        nodeTypes={nodeTypes}\r\n        edgeTypes={edgeTypes}\r\n\r\n        onInit={onInit}\r\n\r\n        snapToGrid={true}\r\n        fitView\r\n      >\r\n        <Background color=\"#aaa\" gap={10} />\r\n        </ReactFlow>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}