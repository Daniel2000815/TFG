{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect}from\"react\";import{Handle}from\"react-flow-renderer\";import Shader from\"./Shader\";import{fs}from\"./fragmentShader\";import Dropdown from\"./Dropdown\";import CustomHandle from\"./CustomHandle\";var BooleanOperations={Union:\"Union\",Difference:\"Difference\",Intersection:\"Intersection\"};export default function BooleanNode(_ref){var data=_ref.data,id=_ref.id;var _React$useState=React.useState(BooleanOperations.Union),_React$useState2=_slicedToArray(_React$useState,2),operation=_React$useState2[0],setOperation=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),operationSdf=_React$useState4[0],setOperationSdf=_React$useState4[1];useEffect(function(){console.log(\"SE HAN MODIFICADO LOS SDF EN NODO BOOLEANO. AHORA HAY \".concat(data.sdfs.length));var inputs=\"\".concat(Object.keys(data.sdfs).map(function(key){return\"\".concat(data.sdfs[key]);}).join(', '));if(operation===BooleanOperations.Union)setOperationSdf(\"min(\".concat(inputs,\")\"));else if(operation===BooleanOperations.Intersection)setOperationSdf(\"max(\".concat(inputs,\")\"));else if(operation===BooleanOperations.Difference)setOperationSdf(\"max(-\".concat(inputs,\")\"));},[data,operation]);return/*#__PURE__*/React.createElement(\"div\",{className:\"custom-node\"},/*#__PURE__*/React.createElement(\"div\",{className:\"custom-node-header\"},\"Boolean\"),operationSdf,/*#__PURE__*/React.createElement(Dropdown,{value:operation,onChange:setOperation,items:[BooleanOperations.Union,BooleanOperations.Difference,BooleanOperations.Intersection],label:\"Operation\"}),/*#__PURE__*/React.createElement(CustomHandle,{id:\"0\",type:\"target\",onConnect:function onConnect(params){return console.log(\"handle ss\",params);},style:{left:\"30%\"}}),/*#__PURE__*/React.createElement(CustomHandle,{id:\"1\",type:\"target\",onConnect:function onConnect(params){return data.updateBooleanPrimitive(params.source,params.target);},style:{left:\"60%\"}}),/*#__PURE__*/React.createElement(CustomHandle,{id:\"2\",type:\"source\",onConnect:function onConnect(params){return console.log(\"handle onsConnect\",params);},style:{left:\"50%\"}}),/*#__PURE__*/React.createElement(Shader,{shader:fs(\"\".concat(operationSdf)),uniforms:{color:{type:\"3fv\",value:[1.0,1.0,0.0]}},style:{margin:\"10px\"}}));}","map":{"version":3,"names":["React","useEffect","Handle","Shader","fs","Dropdown","CustomHandle","BooleanOperations","Union","Difference","Intersection","BooleanNode","data","id","useState","operation","setOperation","operationSdf","setOperationSdf","console","log","sdfs","length","inputs","Object","keys","map","key","join","params","left","updateBooleanPrimitive","source","target","color","type","value","margin"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/BooleanNode.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Handle } from \"react-flow-renderer\";\r\nimport Shader from \"./Shader\";\r\nimport { fs } from \"./fragmentShader\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport CustomHandle from \"./CustomHandle\";\r\n\r\nconst BooleanOperations = {\r\n  Union: \"Union\",\r\n  Difference: \"Difference\",\r\n  Intersection: \"Intersection\",\r\n};\r\n\r\nexport default function BooleanNode({ data, id }) {\r\n  const [operation, setOperation] = React.useState(BooleanOperations.Union);\r\n  const [operationSdf, setOperationSdf] = React.useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(`SE HAN MODIFICADO LOS SDF EN NODO BOOLEANO. AHORA HAY ${data.sdfs.length}`);\r\n    const inputs = `${Object.keys(data.sdfs).map(key => `${data.sdfs[key]}`).join(', ')}`;\r\n\r\n    if(operation===BooleanOperations.Union)\r\n      setOperationSdf(`min(${inputs})`)\r\n    else if(operation===BooleanOperations.Intersection)\r\n      setOperationSdf(`max(${inputs})`)\r\n    else if(operation===BooleanOperations.Difference)\r\n      setOperationSdf(`max(-${inputs})`)\r\n\r\n  }, [data, operation]);\r\n\r\n  return (\r\n    <div className=\"custom-node\">\r\n      <div className=\"custom-node-header\">Boolean</div>\r\n      {operationSdf}\r\n      <Dropdown\r\n        value={operation}\r\n        onChange={setOperation}\r\n        items={[\r\n          BooleanOperations.Union,\r\n          BooleanOperations.Difference,\r\n          BooleanOperations.Intersection,\r\n        ]}\r\n        label=\"Operation\"\r\n      />\r\n\r\n      <CustomHandle id={\"0\"} type=\"target\" onConnect={(params) => console.log(\"handle ss\", params)} style={{ left: \"30%\" }}/>\r\n      <CustomHandle id={\"1\"} type=\"target\" onConnect={(params) => data.updateBooleanPrimitive(params.source, params.target)} style={{ left: \"60%\" }}/>\r\n      <CustomHandle id={\"2\"} type=\"source\" onConnect={(params) => console.log(\"handle onsConnect\", params)} style={{ left: \"50%\" }}/>\r\n\r\n      {/* <Handle\r\n        type=\"target\"\r\n        id={\"0\"}\r\n        style={{ left: \"30%\" }}\r\n        position=\"top\"\r\n        onConnect={(params) => console.log(\"handle ss\", params)}\r\n      />\r\n      <Handle\r\n        type=\"target\"\r\n        id={\"1\"}\r\n        style={{ left: \"60%\" }}\r\n        position=\"top\"\r\n        onConnect={(params) =>\r\n          data.updateBooleanPrimitive(params.source, params.target)\r\n        }\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        id={2}\r\n        style={{ left: \"50%\" }}\r\n        position=\"bottom\"\r\n        onConnect={(params) => console.log(\"handle onsConnect\", params)}\r\n      /> */}\r\n\r\n      <Shader\r\n        shader={fs(`${operationSdf}`)}\r\n        uniforms={{ color: { type: \"3fv\", value: [1.0, 1.0, 0.0] } }}\r\n        style={{ margin: \"10px\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}