{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.subtract = void 0;\nvar add_1 = require(\"./add\");\nvar Errors_1 = require(\"../../../Core/Errors\");\nvar Matrix_1 = require(\"../../../Types/Matrix\");\nvar Utils_1 = require(\"../../../Core/Utils\");\n/**\n * Gets called when the parser finds the - operator. Not the prefix operator. See this.add\n * @param {Symbol} a\n * @param {Symbol} b\n * @returns {Symbol}\n */\nfunction subtract(a, b) {\n  var aIsSymbol = (0, Utils_1.isSymbol)(a),\n    bIsSymbol = (0, Utils_1.isSymbol)(b);\n  if (aIsSymbol && bIsSymbol) {\n    if (a.unit || b.unit) {\n      return deps.Unit.subtract(a, b);\n    }\n    return (0, add_1.add)(a, b.negate());\n  } else {\n    if (bIsSymbol && (0, Utils_1.isVector)(a)) {\n      b = a.map(function (x) {\n        return subtract(x, b.clone());\n      });\n    } else if (aIsSymbol && (0, Utils_1.isVector)(b)) {\n      b = b.map(function (x) {\n        return subtract(a.clone(), x);\n      });\n    } else if ((0, Utils_1.isVector)(a) && (0, Utils_1.isVector)(b)) {\n      if (a.dimensions() === b.dimensions()) b = a.subtract(b);else (0, Errors_1.err)('Unable to subtract vectors. Dimensions do not match.');\n    } else if ((0, Utils_1.isMatrix)(a) && (0, Utils_1.isVector)(b)) {\n      if (b.elements.length === a.rows()) {\n        var M = new Matrix_1.Matrix(),\n          l = a.cols();\n        b.each(function (e, i) {\n          var row = [];\n          for (var j = 0; j < l; j++) {\n            row.push(subtract(a.elements[i - 1][j].clone(), e.clone()));\n          }\n          M.elements.push(row);\n        });\n        return M;\n      } else (0, Errors_1.err)('Dimensions must match!');\n    } else if ((0, Utils_1.isVector)(a) && (0, Utils_1.isMatrix)(b)) {\n      var M = b.clone().negate();\n      return (0, add_1.add)(M, a);\n    } else if ((0, Utils_1.isMatrix)(a) && (0, Utils_1.isMatrix)(b)) {\n      b = a.subtract(b);\n    } else if ((0, Utils_1.isMatrix)(a) && bIsSymbol) {\n      var M = new Matrix_1.Matrix();\n      a.each(function (x, i, j) {\n        M.set(i, j, subtract(x, b.clone()));\n      });\n      b = M;\n    } else if (aIsSymbol && (0, Utils_1.isMatrix)(b)) {\n      var M = new Matrix_1.Matrix();\n      b.each(function (x, i, j) {\n        M.set(i, j, subtract(a.clone(), x));\n      });\n      b = M;\n    }\n    return b;\n  }\n}\nexports.subtract = subtract;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAEA;;;;;;AAMA,SAAgBA,QAAQ,CAACC,CAAC,EAAEC,CAAC;EACzB,IAAIC,SAAS,GAAG,oBAAQ,EAACF,CAAC,CAAC;IACvBG,SAAS,GAAG,oBAAQ,EAACF,CAAC,CAAC;EAE3B,IAAIC,SAAS,IAAIC,SAAS,EAAE;IACxB,IAAIH,CAAC,CAACI,IAAI,IAAIH,CAAC,CAACG,IAAI,EAAE;MAClB,OAAOC,IAAI,CAACC,IAAI,CAACP,QAAQ,CAACC,CAAC,EAAEC,CAAC,CAAC;;IAEnC,OAAO,aAAG,EAACD,CAAC,EAAEC,CAAC,CAACM,MAAM,EAAE,CAAC;GAC5B,MACI;IACD,IAAIJ,SAAS,IAAI,oBAAQ,EAACH,CAAC,CAAC,EAAE;MAC1BC,CAAC,GAAGD,CAAC,CAACQ,GAAG,CAAC,UAAUC,CAAC;QACjB,OAAOV,QAAQ,CAACU,CAAC,EAAER,CAAC,CAACS,KAAK,EAAE,CAAC;MACjC,CAAC,CAAC;KACL,MACI,IAAIR,SAAS,IAAI,oBAAQ,EAACD,CAAC,CAAC,EAAE;MAC/BA,CAAC,GAAGA,CAAC,CAACO,GAAG,CAAC,UAAUC,CAAC;QACjB,OAAOV,QAAQ,CAACC,CAAC,CAACU,KAAK,EAAE,EAAED,CAAC,CAAC;MACjC,CAAC,CAAC;KACL,MACI,IAAI,oBAAQ,EAACT,CAAC,CAAC,IAAI,oBAAQ,EAACC,CAAC,CAAC,EAAE;MACjC,IAAID,CAAC,CAACW,UAAU,EAAE,KAAKV,CAAC,CAACU,UAAU,EAAE,EACjCV,CAAC,GAAGD,CAAC,CAACD,QAAQ,CAACE,CAAC,CAAC,CAAC,KAElB,gBAAG,EAAC,sDAAsD,CAAC;KAClE,MACI,IAAI,oBAAQ,EAACD,CAAC,CAAC,IAAI,oBAAQ,EAACC,CAAC,CAAC,EAAE;MACjC,IAAIA,CAAC,CAACW,QAAQ,CAACC,MAAM,KAAKb,CAAC,CAACc,IAAI,EAAE,EAAE;QAChC,IAAIC,CAAC,GAAG,IAAIC,eAAM,EAAE;UAAEC,CAAC,GAAGjB,CAAC,CAACkB,IAAI,EAAE;QAClCjB,CAAC,CAACkB,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC;UACjB,IAAIC,GAAG,GAAG,EAAE;UACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,CAAC,EAAEM,CAAC,EAAE,EAAE;YACxBD,GAAG,CAACE,IAAI,CAACzB,QAAQ,CAACC,CAAC,CAACY,QAAQ,CAACS,CAAC,GAAG,CAAC,CAAC,CAACE,CAAC,CAAC,CAACb,KAAK,EAAE,EAAEU,CAAC,CAACV,KAAK,EAAE,CAAC,CAAC;;UAE/DK,CAAC,CAACH,QAAQ,CAACY,IAAI,CAACF,GAAG,CAAC;QACxB,CAAC,CAAC;QACF,OAAOP,CAAC;OACX,MAEG,gBAAG,EAAC,wBAAwB,CAAC;KACpC,MACI,IAAI,oBAAQ,EAACf,CAAC,CAAC,IAAI,oBAAQ,EAACC,CAAC,CAAC,EAAE;MACjC,IAAIc,CAAC,GAAGd,CAAC,CAACS,KAAK,EAAE,CAACH,MAAM,EAAE;MAC1B,OAAO,aAAG,EAACQ,CAAC,EAAEf,CAAC,CAAC;KACnB,MACI,IAAI,oBAAQ,EAACA,CAAC,CAAC,IAAI,oBAAQ,EAACC,CAAC,CAAC,EAAE;MACjCA,CAAC,GAAGD,CAAC,CAACD,QAAQ,CAACE,CAAC,CAAC;KACpB,MACI,IAAI,oBAAQ,EAACD,CAAC,CAAC,IAAIG,SAAS,EAAE;MAC/B,IAAIY,CAAC,GAAG,IAAIC,eAAM,EAAE;MACpBhB,CAAC,CAACmB,IAAI,CAAC,UAAUV,CAAC,EAAEY,CAAC,EAAEE,CAAC;QACpBR,CAAC,CAACU,GAAG,CAACJ,CAAC,EAAEE,CAAC,EAAExB,QAAQ,CAACU,CAAC,EAAER,CAAC,CAACS,KAAK,EAAE,CAAC,CAAC;MACvC,CAAC,CAAC;MACFT,CAAC,GAAGc,CAAC;KACR,MACI,IAAIb,SAAS,IAAI,oBAAQ,EAACD,CAAC,CAAC,EAAE;MAC/B,IAAIc,CAAC,GAAG,IAAIC,eAAM,EAAE;MACpBf,CAAC,CAACkB,IAAI,CAAC,UAAUV,CAAC,EAAEY,CAAC,EAAEE,CAAC;QACpBR,CAAC,CAACU,GAAG,CAACJ,CAAC,EAAEE,CAAC,EAAExB,QAAQ,CAACC,CAAC,CAACU,KAAK,EAAE,EAAED,CAAC,CAAC,CAAC;MACvC,CAAC,CAAC;MACFR,CAAC,GAAGc,CAAC;;IAET,OAAOd,CAAC;;AAEhB;AAjEAyB","names":["subtract","a","b","aIsSymbol","bIsSymbol","unit","deps","Unit","negate","map","x","clone","dimensions","elements","length","rows","M","Matrix_1","l","cols","each","e","i","row","j","push","set","exports"],"sourceRoot":"","sources":["../../../../src/Functions/Core/operations/subtract.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}