{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\Graph.js\";\nimport React from \"react\";\nimport { useCallback, useEffect } from \"react\";\nimport ReactFlow, { addEdge, Background, useNodesState, useEdgesState, MarkerType } from \"react-flow-renderer\";\nimport PrimitiveNode from \"./PrimitiveNode.js\";\nimport BooleanNode from \"./BooleanNode.js\";\nimport ButtonEdge from \"./ButtonEdge\";\nimport ShaderNode from \"./ShaderNode.js\";\nimport TestNode from \"./TestNode.js\";\nimport \"./styles.css\";\nimport { GraphProvider } from \"./GraphContext.js\";\nvar nodeTypes = {\n  primitiveNode: PrimitiveNode,\n  booleanNode: BooleanNode\n};\nvar edgeTypes = {\n  buttonEdge: ButtonEdge\n};\nvar initialNodes = [{\n  id: \"node-0\",\n  type: \"primitiveNode\",\n  position: {\n    x: 0,\n    y: -150\n  },\n  data: {\n    inputs: {},\n    sdf: \"\",\n    children: []\n  }\n}, {\n  id: \"node-1\",\n  type: \"booleanNode\",\n  position: {\n    x: 0,\n    y: 350\n  },\n  data: {\n    inputs: {},\n    sdf: \"\",\n    children: []\n  }\n}];\nvar initialEdges = [];\n\nvar onInit = function onInit(reactFlowInstance) {\n  return console.log(\"flow loaded:\", reactFlowInstance);\n};\n\nexport default function Graph() {\n  var _useNodesState = useNodesState(initialNodes),\n      _useNodesState2 = _slicedToArray(_useNodesState, 3),\n      nodes = _useNodesState2[0],\n      setNodes = _useNodesState2[1],\n      onNodesChange = _useNodesState2[2];\n\n  var _useEdgesState = useEdgesState([]),\n      _useEdgesState2 = _slicedToArray(_useEdgesState, 3),\n      edges = _useEdgesState2[0],\n      setEdges = _useEdgesState2[1],\n      onEdgesChange = _useEdgesState2[2];\n\n  var _React$useState = React.useState(3),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      id = _React$useState2[0],\n      setId = _React$useState2[1];\n\n  var updateNodeSdf = function updateNodeSdf(id, newSdf, parent) {\n    console.log(\"ACTUALIZADONDO SDF DE \" + id);\n    var foundNode = null;\n    setNodes(function (nds) {\n      return nds.map(function (node) {\n        if (node.id === id) {\n          node.data = _objectSpread(_objectSpread({}, node.data), {}, {\n            sdf: newSdf\n          });\n          console.log(\"HIJOS DE \" + id + \": \");\n          console.log(node.data.children);\n          node.data.children.forEach(function (child) {\n            console.log(\"\\tACTUALIZANDO HIJO \" + child);\n            var newInputs = child.data.inputs;\n            newInputs[\"\".concat(node.id)] = newSdf;\n            child.data = _objectSpread(_objectSpread({}, node.data), {}, {\n              inputs: newInputs\n            });\n          });\n        }\n\n        return node;\n      });\n    });\n    console.log(\"enco\");\n    console.log(foundNode);\n  };\n\n  var removeEdge = function removeEdge(edgeId) {\n    var newEdges = edges.filter(function (edge) {\n      console.log(edge.source);\n      return edge.id != edgeId;\n    });\n    setEdges(newEdges);\n  };\n\n  var sharedFunctions = {\n    updateNodeSdf: updateNodeSdf\n  };\n\n  var onConnect = function onConnect(params) {\n    var sourceNode = nodes.find(function (n) {\n      return n.id === params.source;\n    }); // CREAMOS UNION\n\n    setEdges(function (eds) {\n      return addEdge(_objectSpread(_objectSpread({}, params), {}, {\n        type: \"buttonEdge\",\n        animated: true,\n        markerEnd: {\n          type: MarkerType.Arrow,\n          color: \"#000\"\n        },\n        data: {\n          onRemoveEdge: removeEdge\n        }\n      }), eds);\n    }); // AÃ‘ADIMOS HIJO AL PADRE\n\n    setNodes(function (nds) {\n      return nds.map(function (node) {\n        if (node.id === params.source) {\n          console.log(\"A\\xD1ADIENDO HIJO \".concat(params.target, \" A \").concat(params.source));\n          var newChildren = node.data.children;\n          console.log(typeof newChildren);\n          console.log(newChildren);\n          newChildren.push(params.target);\n          console.log(newChildren);\n          node.data = _objectSpread(_objectSpread({}, node.data), {}, {\n            children: newChildren\n          });\n        }\n\n        if (node.id === params.target) {\n          console.log(\"INICIALIZANDO \".concat(params.source));\n          var newInputs = node.data.inputs;\n          newInputs[\"\".concat(params.source)] = sourceNode.data.sdf;\n          node.data = _objectSpread(_objectSpread({}, node.data), {}, {\n            inputs: newInputs\n          });\n        }\n\n        onNodesChange([node]);\n        return node;\n      });\n    }); // INICIAMOS HIJO\n  };\n\n  useEffect(function () {\n    console.log(\"NODOS ACTUALIZADOS\");\n    console.log(nodes);\n  }, [nodes]);\n  useEffect(function () {\n    console.log(\"NUEVO EDGE:\");\n    console.log(edges);\n  }, [edges]);\n\n  var newPrimitiveNode = function newPrimitiveNode() {\n    var xPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var yPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    setId(id + 1);\n    var nodeId = \"node-\".concat(id);\n    return {\n      id: nodeId,\n      type: \"primitiveNode\",\n      position: {\n        x: xPos,\n        y: yPos\n      },\n      data: {\n        inputs: {},\n        sdf: \"\",\n        children: []\n      }\n    };\n  };\n\n  var newBooleanNode = function newBooleanNode() {\n    var xPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var yPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    setId(id + 1);\n    return {\n      id: \"node-\".concat(id),\n      type: \"booleanNode\",\n      position: {\n        x: xPos,\n        y: yPos\n      },\n      data: {\n        inputs: {},\n        sdf: \"\",\n        children: []\n      }\n    };\n  };\n\n  var handleKey = function handleKey(e) {\n    // SPACE BAR\n    if (e.key.toLowerCase() === \"p\") {\n      var node = newPrimitiveNode();\n      nodes.push(node);\n      onNodesChange([node]); // Para actualizar\n    } else if (e.key.toLowerCase() === \"b\") {\n      var _node = newBooleanNode();\n\n      nodes.push(_node);\n      onNodesChange([_node]); // Para actualizar\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100vh\"\n    },\n    tabIndex: \"0\",\n    onKeyDown: handleKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GraphProvider, {\n    value: sharedFunctions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    onConnect: onConnect // onDisconnect={onDisconnect}\n    ,\n    nodeTypes: nodeTypes,\n    edgeTypes: edgeTypes,\n    onInit: onInit,\n    onEdgeClick: function onEdgeClick(ev, edge) {\n      return setEdges(edges.filter(function (e) {\n        return e.id != edge.id;\n      }));\n    },\n    snapToGrid: true,\n    fitView: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Background, {\n    color: \"#aaa\",\n    gap: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"names":["React","useCallback","useEffect","ReactFlow","addEdge","Background","useNodesState","useEdgesState","MarkerType","PrimitiveNode","BooleanNode","ButtonEdge","ShaderNode","TestNode","GraphProvider","nodeTypes","primitiveNode","booleanNode","edgeTypes","buttonEdge","initialNodes","id","type","position","x","y","data","inputs","sdf","children","initialEdges","onInit","reactFlowInstance","console","log","Graph","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","useState","setId","updateNodeSdf","newSdf","parent","foundNode","nds","map","node","forEach","child","newInputs","removeEdge","edgeId","newEdges","filter","edge","source","sharedFunctions","onConnect","params","sourceNode","find","n","eds","animated","markerEnd","Arrow","color","onRemoveEdge","target","newChildren","push","newPrimitiveNode","xPos","yPos","nodeId","newBooleanNode","handleKey","e","key","toLowerCase","height","ev"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/Graph.js"],"sourcesContent":["import React from \"react\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  useNodesState,\r\n  useEdgesState,\r\n  MarkerType,\r\n} from \"react-flow-renderer\";\r\nimport PrimitiveNode from \"./PrimitiveNode.js\";\r\nimport BooleanNode from \"./BooleanNode.js\";\r\nimport ButtonEdge from \"./ButtonEdge\";\r\nimport ShaderNode from \"./ShaderNode.js\";\r\nimport TestNode from \"./TestNode.js\";\r\n\r\nimport \"./styles.css\";\r\nimport { GraphProvider } from \"./GraphContext.js\";\r\n\r\nconst nodeTypes = { primitiveNode: PrimitiveNode, booleanNode: BooleanNode };\r\nconst edgeTypes = { buttonEdge: ButtonEdge };\r\n\r\nconst initialNodes = [\r\n  {\r\n    id: `node-0`,\r\n    type: \"primitiveNode\",\r\n    position: { x: 0, y: -150 },\r\n    data: { inputs: {}, sdf: \"\", children: [] },\r\n  },\r\n  {\r\n    id: `node-1`,\r\n    type: \"booleanNode\",\r\n    position: { x: 0, y: 350 },\r\n    data: { inputs: {}, sdf: \"\", children: [] },\r\n  }\r\n];\r\n\r\nconst initialEdges = [];\r\n\r\nconst onInit = (reactFlowInstance) =>\r\n  console.log(\"flow loaded:\", reactFlowInstance);\r\n\r\nexport default function Graph() {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [id, setId] = React.useState(3);\r\n\r\n  const updateNodeSdf = (id, newSdf, parent) => {\r\n    console.log(\"ACTUALIZADONDO SDF DE \" + id);\r\n    var foundNode = null;\r\n\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === id) {\r\n          node.data = {\r\n            ...node.data,\r\n            sdf: newSdf,\r\n          };\r\n\r\n          console.log(\"HIJOS DE \" + id + \": \");\r\n          console.log(node.data.children);\r\n\r\n          node.data.children.forEach((child) => {\r\n            console.log(\"\\tACTUALIZANDO HIJO \" + child);\r\n            var newInputs = child.data.inputs;\r\n            newInputs[`${node.id}`] = newSdf;\r\n\r\n            child.data = {\r\n              ...node.data,\r\n              inputs: newInputs,\r\n            };\r\n          });\r\n        }\r\n\r\n        return node;\r\n      })\r\n    );\r\n\r\n    console.log(\"enco\");\r\n    console.log(foundNode);\r\n  };\r\n\r\n  const removeEdge = (edgeId) => {\r\n    var newEdges = edges.filter((edge) => {\r\n      console.log(edge.source);\r\n      return edge.id != edgeId;\r\n    });\r\n\r\n    setEdges(newEdges);\r\n  };\r\n\r\n  const sharedFunctions = {\r\n    updateNodeSdf,\r\n  };\r\n\r\n  const onConnect = (params) => {\r\n    const sourceNode = nodes.find((n) => n.id === params.source);\r\n\r\n    // CREAMOS UNION\r\n    setEdges((eds) =>\r\n      addEdge(\r\n        {\r\n          ...params,\r\n          type: \"buttonEdge\",\r\n          animated: true,\r\n          markerEnd: { type: MarkerType.Arrow, color: \"#000\" },\r\n          data: { onRemoveEdge: removeEdge },\r\n        },\r\n        eds\r\n      )\r\n    );\r\n\r\n    // AÃ‘ADIMOS HIJO AL PADRE\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === params.source) {\r\n          console.log(`AÃ‘ADIENDO HIJO ${params.target} A ${params.source}`);\r\n\r\n          var newChildren = node.data.children;\r\n          console.log(typeof(newChildren));\r\n          console.log(newChildren);\r\n          newChildren.push(params.target);\r\n          console.log(newChildren);\r\n          node.data = {\r\n            ...node.data,\r\n            children: newChildren,\r\n          };\r\n        }\r\n        if (node.id === params.target) {\r\n          console.log(`INICIALIZANDO ${params.source}`);\r\n          var newInputs = node.data.inputs;\r\n          newInputs[`${params.source}`] = sourceNode.data.sdf;\r\n          node.data = {\r\n            ...node.data,\r\n            inputs: newInputs,\r\n          };\r\n        }\r\n\r\n        onNodesChange([node]);\r\n        return node;\r\n      })\r\n    );\r\n\r\n    // INICIAMOS HIJO\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"NODOS ACTUALIZADOS\");\r\n    console.log(nodes);\r\n  }, [nodes]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"NUEVO EDGE:\");\r\n    console.log(edges);\r\n  }, [edges]);\r\n\r\n  const newPrimitiveNode = (xPos = 0, yPos = 0) => {\r\n    setId(id + 1);\r\n    const nodeId = `node-${id}`;\r\n    return {\r\n      id: nodeId,\r\n      type: \"primitiveNode\",\r\n      position: { x: xPos, y: yPos },\r\n      data: {\r\n        inputs: {},\r\n        sdf: \"\",\r\n        children: [],\r\n      },\r\n    };\r\n  };\r\n\r\n  const newBooleanNode = (xPos = 0, yPos = 0) => {\r\n    setId(id + 1);\r\n    return {\r\n      id: `node-${id}`,\r\n      type: \"booleanNode\",\r\n      position: { x: xPos, y: yPos },\r\n      data: { inputs: {}, sdf: \"\", children: [] },\r\n    };\r\n  };\r\n\r\n  const handleKey = (e) => {\r\n    // SPACE BAR\r\n    if (e.key.toLowerCase() === \"p\") {\r\n      const node = newPrimitiveNode();\r\n      nodes.push(node);\r\n\r\n      onNodesChange([node]); // Para actualizar\r\n    } else if (e.key.toLowerCase() === \"b\") {\r\n      const node = newBooleanNode();\r\n      nodes.push(node);\r\n\r\n      onNodesChange([node]); // Para actualizar\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }} tabIndex=\"0\" onKeyDown={handleKey}>\r\n      <GraphProvider value={sharedFunctions}>\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          // onDisconnect={onDisconnect}\r\n\r\n          nodeTypes={nodeTypes}\r\n          edgeTypes={edgeTypes}\r\n          onInit={onInit}\r\n          onEdgeClick={(ev, edge) =>\r\n            setEdges(edges.filter((e) => e.id != edge.id))\r\n          }\r\n          snapToGrid={true}\r\n          fitView\r\n        >\r\n          <Background color=\"#aaa\" gap={10} />\r\n        </ReactFlow>\r\n      </GraphProvider>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,OAAOC,SAAP,IACEC,OADF,EAEEC,UAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,UALF,QAMO,qBANP;AAOA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA,OAAO,cAAP;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,IAAMC,SAAS,GAAG;EAAEC,aAAa,EAAEP,aAAjB;EAAgCQ,WAAW,EAAEP;AAA7C,CAAlB;AACA,IAAMQ,SAAS,GAAG;EAAEC,UAAU,EAAER;AAAd,CAAlB;AAEA,IAAMS,YAAY,GAAG,CACnB;EACEC,EAAE,UADJ;EAEEC,IAAI,EAAE,eAFR;EAGEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,CAAL;IAAQC,CAAC,EAAE,CAAC;EAAZ,CAHZ;EAIEC,IAAI,EAAE;IAAEC,MAAM,EAAE,EAAV;IAAcC,GAAG,EAAE,EAAnB;IAAuBC,QAAQ,EAAE;EAAjC;AAJR,CADmB,EAOnB;EACER,EAAE,UADJ;EAEEC,IAAI,EAAE,aAFR;EAGEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,CAAL;IAAQC,CAAC,EAAE;EAAX,CAHZ;EAIEC,IAAI,EAAE;IAAEC,MAAM,EAAE,EAAV;IAAcC,GAAG,EAAE,EAAnB;IAAuBC,QAAQ,EAAE;EAAjC;AAJR,CAPmB,CAArB;AAeA,IAAMC,YAAY,GAAG,EAArB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,iBAAD;EAAA,OACbC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,iBAA5B,CADa;AAAA,CAAf;;AAGA,eAAe,SAASG,KAAT,GAAiB;EAC9B,qBAAyC7B,aAAa,CAACc,YAAD,CAAtD;EAAA;EAAA,IAAOgB,KAAP;EAAA,IAAcC,QAAd;EAAA,IAAwBC,aAAxB;;EACA,qBAAyC/B,aAAa,CAAC,EAAD,CAAtD;EAAA;EAAA,IAAOgC,KAAP;EAAA,IAAcC,QAAd;EAAA,IAAwBC,aAAxB;;EACA,sBAAoBzC,KAAK,CAAC0C,QAAN,CAAe,CAAf,CAApB;EAAA;EAAA,IAAOrB,EAAP;EAAA,IAAWsB,KAAX;;EAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACvB,EAAD,EAAKwB,MAAL,EAAaC,MAAb,EAAwB;IAC5Cb,OAAO,CAACC,GAAR,CAAY,2BAA2Bb,EAAvC;IACA,IAAI0B,SAAS,GAAG,IAAhB;IAEAV,QAAQ,CAAC,UAACW,GAAD;MAAA,OACPA,GAAG,CAACC,GAAJ,CAAQ,UAACC,IAAD,EAAU;QAChB,IAAIA,IAAI,CAAC7B,EAAL,KAAYA,EAAhB,EAAoB;UAClB6B,IAAI,CAACxB,IAAL,mCACKwB,IAAI,CAACxB,IADV;YAEEE,GAAG,EAAEiB;UAFP;UAKAZ,OAAO,CAACC,GAAR,CAAY,cAAcb,EAAd,GAAmB,IAA/B;UACAY,OAAO,CAACC,GAAR,CAAYgB,IAAI,CAACxB,IAAL,CAAUG,QAAtB;UAEAqB,IAAI,CAACxB,IAAL,CAAUG,QAAV,CAAmBsB,OAAnB,CAA2B,UAACC,KAAD,EAAW;YACpCnB,OAAO,CAACC,GAAR,CAAY,yBAAyBkB,KAArC;YACA,IAAIC,SAAS,GAAGD,KAAK,CAAC1B,IAAN,CAAWC,MAA3B;YACA0B,SAAS,WAAIH,IAAI,CAAC7B,EAAT,EAAT,GAA0BwB,MAA1B;YAEAO,KAAK,CAAC1B,IAAN,mCACKwB,IAAI,CAACxB,IADV;cAEEC,MAAM,EAAE0B;YAFV;UAID,CATD;QAUD;;QAED,OAAOH,IAAP;MACD,CAvBD,CADO;IAAA,CAAD,CAAR;IA2BAjB,OAAO,CAACC,GAAR,CAAY,MAAZ;IACAD,OAAO,CAACC,GAAR,CAAYa,SAAZ;EACD,CAjCD;;EAmCA,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAAY;IAC7B,IAAIC,QAAQ,GAAGjB,KAAK,CAACkB,MAAN,CAAa,UAACC,IAAD,EAAU;MACpCzB,OAAO,CAACC,GAAR,CAAYwB,IAAI,CAACC,MAAjB;MACA,OAAOD,IAAI,CAACrC,EAAL,IAAWkC,MAAlB;IACD,CAHc,CAAf;IAKAf,QAAQ,CAACgB,QAAD,CAAR;EACD,CAPD;;EASA,IAAMI,eAAe,GAAG;IACtBhB,aAAa,EAAbA;EADsB,CAAxB;;EAIA,IAAMiB,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAY;IAC5B,IAAMC,UAAU,GAAG3B,KAAK,CAAC4B,IAAN,CAAW,UAACC,CAAD;MAAA,OAAOA,CAAC,CAAC5C,EAAF,KAASyC,MAAM,CAACH,MAAvB;IAAA,CAAX,CAAnB,CAD4B,CAG5B;;IACAnB,QAAQ,CAAC,UAAC0B,GAAD;MAAA,OACP9D,OAAO,iCAEA0D,MAFA;QAGHxC,IAAI,EAAE,YAHH;QAIH6C,QAAQ,EAAE,IAJP;QAKHC,SAAS,EAAE;UAAE9C,IAAI,EAAEd,UAAU,CAAC6D,KAAnB;UAA0BC,KAAK,EAAE;QAAjC,CALR;QAMH5C,IAAI,EAAE;UAAE6C,YAAY,EAAEjB;QAAhB;MANH,IAQLY,GARK,CADA;IAAA,CAAD,CAAR,CAJ4B,CAiB5B;;IACA7B,QAAQ,CAAC,UAACW,GAAD;MAAA,OACPA,GAAG,CAACC,GAAJ,CAAQ,UAACC,IAAD,EAAU;QAChB,IAAIA,IAAI,CAAC7B,EAAL,KAAYyC,MAAM,CAACH,MAAvB,EAA+B;UAC7B1B,OAAO,CAACC,GAAR,6BAA8B4B,MAAM,CAACU,MAArC,gBAAiDV,MAAM,CAACH,MAAxD;UAEA,IAAIc,WAAW,GAAGvB,IAAI,CAACxB,IAAL,CAAUG,QAA5B;UACAI,OAAO,CAACC,GAAR,CAAY,OAAOuC,WAAnB;UACAxC,OAAO,CAACC,GAAR,CAAYuC,WAAZ;UACAA,WAAW,CAACC,IAAZ,CAAiBZ,MAAM,CAACU,MAAxB;UACAvC,OAAO,CAACC,GAAR,CAAYuC,WAAZ;UACAvB,IAAI,CAACxB,IAAL,mCACKwB,IAAI,CAACxB,IADV;YAEEG,QAAQ,EAAE4C;UAFZ;QAID;;QACD,IAAIvB,IAAI,CAAC7B,EAAL,KAAYyC,MAAM,CAACU,MAAvB,EAA+B;UAC7BvC,OAAO,CAACC,GAAR,yBAA6B4B,MAAM,CAACH,MAApC;UACA,IAAIN,SAAS,GAAGH,IAAI,CAACxB,IAAL,CAAUC,MAA1B;UACA0B,SAAS,WAAIS,MAAM,CAACH,MAAX,EAAT,GAAgCI,UAAU,CAACrC,IAAX,CAAgBE,GAAhD;UACAsB,IAAI,CAACxB,IAAL,mCACKwB,IAAI,CAACxB,IADV;YAEEC,MAAM,EAAE0B;UAFV;QAID;;QAEDf,aAAa,CAAC,CAACY,IAAD,CAAD,CAAb;QACA,OAAOA,IAAP;MACD,CA1BD,CADO;IAAA,CAAD,CAAR,CAlB4B,CAgD5B;EACD,CAjDD;;EAmDAhD,SAAS,CAAC,YAAM;IACd+B,OAAO,CAACC,GAAR,CAAY,oBAAZ;IACAD,OAAO,CAACC,GAAR,CAAYE,KAAZ;EACD,CAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;EAKAlC,SAAS,CAAC,YAAM;IACd+B,OAAO,CAACC,GAAR,CAAY,aAAZ;IACAD,OAAO,CAACC,GAAR,CAAYK,KAAZ;EACD,CAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;;EAKA,IAAMoC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAwB;IAAA,IAAvBC,IAAuB,uEAAhB,CAAgB;IAAA,IAAbC,IAAa,uEAAN,CAAM;IAC/ClC,KAAK,CAACtB,EAAE,GAAG,CAAN,CAAL;IACA,IAAMyD,MAAM,kBAAWzD,EAAX,CAAZ;IACA,OAAO;MACLA,EAAE,EAAEyD,MADC;MAELxD,IAAI,EAAE,eAFD;MAGLC,QAAQ,EAAE;QAAEC,CAAC,EAAEoD,IAAL;QAAWnD,CAAC,EAAEoD;MAAd,CAHL;MAILnD,IAAI,EAAE;QACJC,MAAM,EAAE,EADJ;QAEJC,GAAG,EAAE,EAFD;QAGJC,QAAQ,EAAE;MAHN;IAJD,CAAP;EAUD,CAbD;;EAeA,IAAMkD,cAAc,GAAG,SAAjBA,cAAiB,GAAwB;IAAA,IAAvBH,IAAuB,uEAAhB,CAAgB;IAAA,IAAbC,IAAa,uEAAN,CAAM;IAC7ClC,KAAK,CAACtB,EAAE,GAAG,CAAN,CAAL;IACA,OAAO;MACLA,EAAE,iBAAUA,EAAV,CADG;MAELC,IAAI,EAAE,aAFD;MAGLC,QAAQ,EAAE;QAAEC,CAAC,EAAEoD,IAAL;QAAWnD,CAAC,EAAEoD;MAAd,CAHL;MAILnD,IAAI,EAAE;QAAEC,MAAM,EAAE,EAAV;QAAcC,GAAG,EAAE,EAAnB;QAAuBC,QAAQ,EAAE;MAAjC;IAJD,CAAP;EAMD,CARD;;EAUA,IAAMmD,SAAS,GAAG,SAAZA,SAAY,CAACC,CAAD,EAAO;IACvB;IACA,IAAIA,CAAC,CAACC,GAAF,CAAMC,WAAN,OAAwB,GAA5B,EAAiC;MAC/B,IAAMjC,IAAI,GAAGyB,gBAAgB,EAA7B;MACAvC,KAAK,CAACsC,IAAN,CAAWxB,IAAX;MAEAZ,aAAa,CAAC,CAACY,IAAD,CAAD,CAAb,CAJ+B,CAIR;IACxB,CALD,MAKO,IAAI+B,CAAC,CAACC,GAAF,CAAMC,WAAN,OAAwB,GAA5B,EAAiC;MACtC,IAAMjC,KAAI,GAAG6B,cAAc,EAA3B;;MACA3C,KAAK,CAACsC,IAAN,CAAWxB,KAAX;MAEAZ,aAAa,CAAC,CAACY,KAAD,CAAD,CAAb,CAJsC,CAIf;IACxB;EACF,CAbD;;EAeA,oBACE;IAAK,KAAK,EAAE;MAAEkC,MAAM,EAAE;IAAV,CAAZ;IAAiC,QAAQ,EAAC,GAA1C;IAA8C,SAAS,EAAEJ,SAAzD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,aAAD;IAAe,KAAK,EAAEpB,eAAtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,SAAD;IACE,KAAK,EAAExB,KADT;IAEE,KAAK,EAAEG,KAFT;IAGE,aAAa,EAAED,aAHjB;IAIE,aAAa,EAAEG,aAJjB;IAKE,SAAS,EAAEoB,SALb,CAME;IANF;IAQE,SAAS,EAAE9C,SARb;IASE,SAAS,EAAEG,SATb;IAUE,MAAM,EAAEa,MAVV;IAWE,WAAW,EAAE,qBAACsD,EAAD,EAAK3B,IAAL;MAAA,OACXlB,QAAQ,CAACD,KAAK,CAACkB,MAAN,CAAa,UAACwB,CAAD;QAAA,OAAOA,CAAC,CAAC5D,EAAF,IAAQqC,IAAI,CAACrC,EAApB;MAAA,CAAb,CAAD,CADG;IAAA,CAXf;IAcE,UAAU,EAAE,IAdd;IAeE,OAAO,MAfT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAiBE,oBAAC,UAAD;IAAY,KAAK,EAAC,MAAlB;IAAyB,GAAG,EAAE,EAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAjBF,CADF,CADF,CADF;AAyBD"},"metadata":{},"sourceType":"module"}