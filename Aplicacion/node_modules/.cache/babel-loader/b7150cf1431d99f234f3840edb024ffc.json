{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\SurfacePage\\\\SurfaceDialog.js\";\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@mui/material/Grid';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport MathJax from 'react-mathjax';\nimport 'katex/dist/katex.min.css';\nimport useLocalStorage from '../storageHook.js';\nimport usePrimitivesHook from './primitivesHook';\nexport default function SurfaceDialog(props) {\n  var nerdamer = require('nerdamer');\n\n  require('nerdamer/Calculus');\n\n  var _useState = useState(props.eqData ? props.eqData : {}),\n      _useState2 = _slicedToArray(_useState, 2),\n      eqData = _useState2[0],\n      setEqData = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      eqInput = _useState4[0],\n      setEqInput = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nameInput = _useState6[0],\n      setNameInput = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      parsedEq = _useState8[0],\n      setParsedEq = _useState8[1];\n\n  var _useLocalStorage = useLocalStorage('user_implicits', {}),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      storage = _useLocalStorage2[0],\n      setStorage = _useLocalStorage2[1];\n\n  var _usePrimitivesHook = usePrimitivesHook(),\n      _usePrimitivesHook2 = _slicedToArray(_usePrimitivesHook, 2),\n      primitives = _usePrimitivesHook2[0],\n      setPrimitives = _usePrimitivesHook2[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      errorMsg = _useState10[0],\n      setErrorMsg = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      validEq = _useState12[0],\n      setValEq = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      validName = _useState14[0],\n      setValidName = _useState14[1];\n\n  var latexInfo = function latexInfo(eqData) {\n    var implicit = nerdamer.convertToLaTeX(eqData.f.toString());\n    var dx = nerdamer.convertToLaTeX(eqData.dx.toString());\n    var dy = nerdamer.convertToLaTeX(eqData.dy.toString());\n    var dz = nerdamer.convertToLaTeX(eqData.dz.toString());\n    var norm = nerdamer.convertToLaTeX(eqData.norm.toString());\n    var sdf = nerdamer.convertToLaTeX(eqData.sdf.toString());\n    return eqData.f ? \"\\\\begin{align*} \\n          f(x,y,z) &=  \".concat(implicitLatex, \" \\\\\\\\[10pt]\\n          \\\\nabla f(x,y,z) &= \\\\left( \\n            \").concat(dx, \", \\n            \").concat(dy, \", \\n            \").concat(dz, \"\\n          \\\\right) \\\\\\\\[10pt]\\n          \\\\Vert \\\\nabla f(x,y,z) \\\\Vert &= \").concat(norm, \" \\\\\\\\[10pt]\\n          \\\\text{sdf}(x,y,z) &= \").concat(sdf, \"\\n        \\\\end{align*}\") : '';\n  };\n\n  var traverseTree = function traverseTree(node) {\n    if (node) {\n      if (node.type === 'VARIABLE_OR_LITERAL') {\n        console.log('VARIABLE: ' + node.value);\n        var isVariable = node.value === 'x' || node.value === 'y' || node.value === 'z';\n        return isVariable ? node.value : parseFloat(node.value).toFixed(4);\n      }\n\n      if (node.type === 'OPERATOR') {\n        console.log('OPERATOR: ' + node.value);\n        var left = traverseTree(node.left);\n        var right = traverseTree(node.right);\n\n        if (node.value === '^') {\n          console.log(\"pow(\".concat(left, \", \").concat(right, \")\"));\n          return \"pow(\".concat(left, \", \").concat(right, \")\");\n        } else {\n          if (right && left) return \"(\".concat(left, \")\").concat(node.value, \"(\").concat(right, \")\");else if (left) return \"\".concat(node.value, \"(\").concat(left, \")\");else return '????';\n        }\n\n        console.log(node.toString());\n        return node.toString();\n      }\n\n      if (node.type === 'FUNCTION') {\n        console.log('FUNCTION: ' + node.value);\n\n        var _left = traverseTree(node.left);\n\n        var _right = traverseTree(node.right);\n\n        if (node.value === '^') {\n          console.log(\"pow(\".concat(_left, \", \").concat(_right, \")\"));\n          return \"pow(\".concat(_left, \", \").concat(_right, \")\");\n        } else {\n          if (_right) return \"\".concat(node.value, \"(\").concat(_right, \")\");else return '????';\n        }\n      }\n    }\n  };\n\n  var handleNewEquation = function handleNewEquation(newEq) {\n    var f = null;\n    setEqInput(newEq);\n\n    try {\n      f = nerdamer(newEq);\n    } catch (error) {\n      setErrorMsg(error.message);\n      setValEq(false);\n      console.warn('ERROR PARSING EQUATION');\n      console.log(error);\n      return;\n    }\n\n    setErrorMsg('');\n    setValEq(true);\n    var dfdx = nerdamer.diff(f, 'x', 1);\n    var dfdy = nerdamer.diff(f, 'y', 1);\n    var dfdz = nerdamer.diff(f, 'z', 1);\n    var norm = nerdamer(\"sqrt((\".concat(dfdx, \")^2 + (\").concat(dfdy, \")^2 + (\").concat(dfdz, \")^2)\"));\n\n    if (norm.toString() === '0') {\n      setValEq(false);\n      setErrorMsg(\"Norm can't be 0\");\n      return;\n    }\n\n    var sdf = nerdamer(\"(\".concat(f, \")/(\").concat(norm, \")\"));\n    var x = nerdamer.tree(sdf.toString());\n    setEqData({\n      f: f,\n      dx: dfdx,\n      dy: dfdy,\n      dz: dfdz,\n      norm: norm,\n      sdf: sdf,\n      parsedSdf: traverseTree(x)\n    });\n    console.log(eqData);\n  };\n\n  var handleSave = function handleSave() {\n    if (nameInput in storage) {\n      console.log('ya esta');\n    } else {\n      var newData = _objectSpread({}, storage);\n\n      newData[nameInput.toLowerCase()] = {\n        id: nameInput.toLowerCase(),\n        name: nameInput,\n        implicit: eqData.f.toString(),\n        sdf: eqData.sdf.toString(),\n        parsedSdf: eqData.parsedSdf,\n        fName: nameInput.toLowerCase()\n      };\n      setStorage(newData);\n      props.handleClose();\n    }\n  };\n\n  useEffect(function () {\n    if (props.eqData) {\n      setNameInput(props.eqData.name);\n      setEqInput(props.eqData.implicit);\n      handleNewEquation(props.eqData.implicit);\n    } else {\n      setNameInput('');\n      setEqInput('');\n      setEqData({});\n    }\n  }, [props.eqData]);\n  useEffect(function () {\n    console.log(storage);\n    setValidName(!(nameInput in storage));\n  }, [nameInput]);\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: props.open,\n    onClose: props.handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, \"New Surface\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, \"Introduce surface information:\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: nameInput,\n    error: !validName || nameInput == '',\n    helperText: nameInput === '' ? '' : validName ? '' : 'Name already in use',\n    onChange: function onChange(e) {\n      return setNameInput(e.target.value);\n    },\n    id: \"name\",\n    label: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    sx: {\n      width: '100%'\n    },\n    value: eqInput,\n    defaultValue: \"\",\n    label: \"Implicit\",\n    onChange: function onChange(e) {\n      return handleNewEquation(e.target.value);\n    },\n    id: \"Implicit\",\n    error: !validEq || eqInput === '',\n    helperText: errorMsg,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 19\n        }\n      }, \" = 0\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(MathJax.Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MathJax.Node, {\n    formula: latexInfo(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: props.handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSave,\n    disabled: !validName || !validEq || nameInput === '' || eqInput === '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, \"Save\")));\n}","map":{"version":3,"names":["React","useState","useEffect","Grid","InputAdornment","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","MathJax","useLocalStorage","usePrimitivesHook","SurfaceDialog","props","nerdamer","require","eqData","setEqData","eqInput","setEqInput","nameInput","setNameInput","parsedEq","setParsedEq","storage","setStorage","primitives","setPrimitives","errorMsg","setErrorMsg","validEq","setValEq","validName","setValidName","latexInfo","implicit","convertToLaTeX","f","toString","dx","dy","dz","norm","sdf","implicitLatex","traverseTree","node","type","console","log","value","isVariable","parseFloat","toFixed","left","right","handleNewEquation","newEq","error","message","warn","dfdx","diff","dfdy","dfdz","x","tree","parsedSdf","handleSave","newData","toLowerCase","id","name","fName","handleClose","open","e","target","width","endAdornment"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/SurfacePage/SurfaceDialog.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Button from '@mui/material/Button';\r\nimport MathJax from 'react-mathjax';\r\nimport 'katex/dist/katex.min.css';\r\nimport useLocalStorage from '../storageHook.js';\r\nimport usePrimitivesHook from './primitivesHook';\r\n\r\nexport default function SurfaceDialog(props) {\r\n  var nerdamer = require('nerdamer');\r\n  require('nerdamer/Calculus');\r\n\r\n  const [eqData, setEqData] = useState(props.eqData ? props.eqData : {});\r\n\r\n  const [eqInput, setEqInput] = useState('');\r\n  const [nameInput, setNameInput] = useState('');\r\n\r\n  const [parsedEq, setParsedEq] = useState('');\r\n\r\n  const [storage, setStorage] = useLocalStorage('user_implicits', {});\r\n  const [primitives, setPrimitives] = usePrimitivesHook();\r\n\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const [validEq, setValEq] = useState(false);\r\n  const [validName, setValidName] = useState(false);\r\n\r\n  \r\nconst latexInfo = (eqData) => {\r\n  const implicit = nerdamer.convertToLaTeX(eqData.f.toString());\r\n  const dx = nerdamer.convertToLaTeX(eqData.dx.toString());\r\n  const dy = nerdamer.convertToLaTeX(eqData.dy.toString());\r\n  const dz = nerdamer.convertToLaTeX(eqData.dz.toString());\r\n  const norm = nerdamer.convertToLaTeX(eqData.norm.toString());\r\n  const sdf = nerdamer.convertToLaTeX(eqData.sdf.toString());\r\n\r\n  return eqData.f\r\n    ? `\\\\begin{align*} \r\n          f(x,y,z) &=  ${implicitLatex} \\\\\\\\[10pt]\r\n          \\\\nabla f(x,y,z) &= \\\\left( \r\n            ${dx}, \r\n            ${dy}, \r\n            ${dz}\r\n          \\\\right) \\\\\\\\[10pt]\r\n          \\\\Vert \\\\nabla f(x,y,z) \\\\Vert &= ${norm} \\\\\\\\[10pt]\r\n          \\\\text{sdf}(x,y,z) &= ${sdf}\r\n        \\\\end{align*}`\r\n    : '';\r\n};\r\n\r\n  const traverseTree = (node) => {\r\n    if (node) {\r\n      if (node.type === 'VARIABLE_OR_LITERAL') {\r\n        console.log('VARIABLE: ' + node.value);\r\n        const isVariable =\r\n          node.value === 'x' || node.value === 'y' || node.value === 'z';\r\n        return isVariable ? node.value : parseFloat(node.value).toFixed(4);\r\n      }\r\n      if (node.type === 'OPERATOR') {\r\n        console.log('OPERATOR: ' + node.value);\r\n        let left = traverseTree(node.left);\r\n        let right = traverseTree(node.right);\r\n\r\n        if (node.value === '^') {\r\n          console.log(`pow(${left}, ${right})`);\r\n          return `pow(${left}, ${right})`;\r\n        } else {\r\n          if (right && left) return `(${left})${node.value}(${right})`;\r\n          else if (left) return `${node.value}(${left})`;\r\n          else return '????';\r\n        }\r\n\r\n        console.log(node.toString());\r\n        return node.toString();\r\n      }\r\n      if (node.type === 'FUNCTION') {\r\n        console.log('FUNCTION: ' + node.value);\r\n        let left = traverseTree(node.left);\r\n        let right = traverseTree(node.right);\r\n\r\n        if (node.value === '^') {\r\n          console.log(`pow(${left}, ${right})`);\r\n          return `pow(${left}, ${right})`;\r\n        } else {\r\n          if (right) return `${node.value}(${right})`;\r\n          else return '????';\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleNewEquation = (newEq) => {\r\n    let f = null;\r\n    setEqInput(newEq);\r\n\r\n    try {\r\n      f = nerdamer(newEq);\r\n    } catch (error) {\r\n      setErrorMsg(error.message);\r\n      setValEq(false);\r\n\r\n      console.warn('ERROR PARSING EQUATION');\r\n      console.log(error);\r\n\r\n      return;\r\n    }\r\n\r\n    setErrorMsg('');\r\n    setValEq(true);\r\n\r\n    let dfdx = nerdamer.diff(f, 'x', 1);\r\n    let dfdy = nerdamer.diff(f, 'y', 1);\r\n    let dfdz = nerdamer.diff(f, 'z', 1);\r\n    let norm = nerdamer(`sqrt((${dfdx})^2 + (${dfdy})^2 + (${dfdz})^2)`);\r\n\r\n    if (norm.toString() === '0') {\r\n      setValEq(false);\r\n      setErrorMsg(\"Norm can't be 0\");\r\n      return;\r\n    }\r\n\r\n    let sdf = nerdamer(`(${f})/(${norm})`);\r\n    var x = nerdamer.tree(sdf.toString());\r\n\r\n    setEqData({\r\n      f: f,\r\n      dx: dfdx,\r\n      dy: dfdy,\r\n      dz: dfdz,\r\n      norm: norm,\r\n      sdf: sdf,\r\n      parsedSdf: traverseTree(x),\r\n    });\r\n\r\n    console.log(eqData);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (nameInput in storage) {\r\n      console.log('ya esta');\r\n    } else {\r\n      let newData = { ...storage };\r\n      newData[nameInput.toLowerCase()] = {\r\n        id: nameInput.toLowerCase(),\r\n        name: nameInput,\r\n        implicit: eqData.f.toString(),\r\n        sdf: eqData.sdf.toString(),\r\n        parsedSdf: eqData.parsedSdf,\r\n        fName: nameInput.toLowerCase(),\r\n      };\r\n\r\n      setStorage(newData);\r\n      props.handleClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.eqData) {\r\n      setNameInput(props.eqData.name);\r\n      setEqInput(props.eqData.implicit);\r\n      handleNewEquation(props.eqData.implicit);\r\n    } else {\r\n      setNameInput('');\r\n      setEqInput('');\r\n      setEqData({});\r\n    }\r\n  }, [props.eqData]);\r\n\r\n  useEffect(() => {\r\n    console.log(storage);\r\n    setValidName(!(nameInput in storage));\r\n  }, [nameInput]);\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={props.handleClose}>\r\n      <DialogTitle>New Surface</DialogTitle>\r\n\r\n      <DialogContent>\r\n        <DialogContentText>Introduce surface information:</DialogContentText>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              value={nameInput}\r\n              error={!validName || nameInput == ''}\r\n              helperText={\r\n                nameInput === '' ? '' : validName ? '' : 'Name already in use'\r\n              }\r\n              onChange={(e) => setNameInput(e.target.value)}\r\n              id=\"name\"\r\n              label=\"Name\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              sx={{ width: '100%' }}\r\n              value={eqInput}\r\n              defaultValue=\"\"\r\n              label=\"Implicit\"\r\n              onChange={(e) => handleNewEquation(e.target.value)}\r\n              id=\"Implicit\"\r\n              error={!validEq || eqInput === ''}\r\n              helperText={errorMsg}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\"> = 0</InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <MathJax.Provider>\r\n          <MathJax.Node formula={latexInfo()} />\r\n        </MathJax.Provider>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose}>Cancel</Button>\r\n        <Button\r\n          onClick={handleSave}\r\n          disabled={\r\n            !validName || !validEq || nameInput === '' || eqInput === ''\r\n          }\r\n        >\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}