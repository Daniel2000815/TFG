{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.exp = void 0;\nvar Settings_1 = require(\"../../../Settings\");\nvar Symbol_1 = require(\"../../../Types/Symbol\");\nvar Utils_1 = require(\"../../../Core/Utils\");\nvar index_1 = require(\"../index\");\nvar Parser_1 = require(\"../../../Parser/Parser\");\n/**\n * A symbolic extension for exp. This will auto-convert all instances of exp(x) to e^x.\n * Thanks @ Happypig375\n * @param {Symbol} symbol\n * @returns {Symbol}\n */\nfunction exp(symbol) {\n  if (symbol.fname === Settings_1.Settings.LOG && symbol.isLinear()) {\n    return (0, index_1.pow)(symbol.args[0], Symbol_1.Symbol.create(symbol.multiplier));\n  }\n  return (0, Parser_1.parse)((0, Utils_1.format)('e^({0})', symbol));\n}\nexports.exp = exp;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMA,SAAgBA,GAAG,CAACC,MAAM;EACtB,IAAIA,MAAM,CAACC,KAAK,KAAKC,mBAAQ,CAACC,GAAG,IAAIH,MAAM,CAACI,QAAQ,EAAE,EAAE;IACpD,OAAO,eAAG,EAACJ,MAAM,CAACK,IAAI,CAAC,CAAC,CAAC,EAAEC,eAAM,CAACC,MAAM,CAACP,MAAM,CAACQ,UAAU,CAAC,CAAC;;EAEhE,OAAO,kBAAK,EAAC,kBAAM,EAAC,SAAS,EAAER,MAAM,CAAC,CAAC;AAC3C;AALAS","names":["exp","symbol","fname","Settings_1","LOG","isLinear","args","Symbol_1","create","multiplier","exports"],"sourceRoot":"","sources":["../../../../src/Functions/Core/math/exp.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}