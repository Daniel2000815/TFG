{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.px = exports.emRounded = exports.em = exports.percent = exports.length2em = exports.MATHSPACE = exports.RELUNITS = exports.UNITS = exports.BIGDIMEN = void 0;\nexports.BIGDIMEN = 1000000;\nexports.UNITS = {\n  px: 1,\n  'in': 96,\n  cm: 96 / 2.54,\n  mm: 96 / 25.4\n};\nexports.RELUNITS = {\n  em: 1,\n  ex: .431,\n  pt: 1 / 10,\n  pc: 12 / 10,\n  mu: 1 / 18\n};\nexports.MATHSPACE = {\n  veryverythinmathspace: 1 / 18,\n  verythinmathspace: 2 / 18,\n  thinmathspace: 3 / 18,\n  mediummathspace: 4 / 18,\n  thickmathspace: 5 / 18,\n  verythickmathspace: 6 / 18,\n  veryverythickmathspace: 7 / 18,\n  negativeveryverythinmathspace: -1 / 18,\n  negativeverythinmathspace: -2 / 18,\n  negativethinmathspace: -3 / 18,\n  negativemediummathspace: -4 / 18,\n  negativethickmathspace: -5 / 18,\n  negativeverythickmathspace: -6 / 18,\n  negativeveryverythickmathspace: -7 / 18,\n  thin: .04,\n  medium: .06,\n  thick: .1,\n  normal: 1,\n  big: 2,\n  small: 1 / Math.sqrt(2),\n  infinity: exports.BIGDIMEN\n};\n\nfunction length2em(length, size, scale, em) {\n  if (size === void 0) {\n    size = 0;\n  }\n\n  if (scale === void 0) {\n    scale = 1;\n  }\n\n  if (em === void 0) {\n    em = 16;\n  }\n\n  if (typeof length !== 'string') {\n    length = String(length);\n  }\n\n  if (length === '' || length == null) {\n    return size;\n  }\n\n  if (exports.MATHSPACE[length]) {\n    return exports.MATHSPACE[length];\n  }\n\n  var match = length.match(/^\\s*([-+]?(?:\\.\\d+|\\d+(?:\\.\\d*)?))?(pt|em|ex|mu|px|pc|in|mm|cm|%)?/);\n\n  if (!match) {\n    return size;\n  }\n\n  var m = parseFloat(match[1] || '1'),\n      unit = match[2];\n\n  if (exports.UNITS.hasOwnProperty(unit)) {\n    return m * exports.UNITS[unit] / em / scale;\n  }\n\n  if (exports.RELUNITS.hasOwnProperty(unit)) {\n    return m * exports.RELUNITS[unit];\n  }\n\n  if (unit === '%') {\n    return m / 100 * size;\n  }\n\n  return m * size;\n}\n\nexports.length2em = length2em;\n\nfunction percent(m) {\n  return (100 * m).toFixed(1).replace(/\\.?0+$/, '') + '%';\n}\n\nexports.percent = percent;\n\nfunction em(m) {\n  if (Math.abs(m) < .001) return '0';\n  return m.toFixed(3).replace(/\\.?0+$/, '') + 'em';\n}\n\nexports.em = em;\n\nfunction emRounded(m, em) {\n  if (em === void 0) {\n    em = 16;\n  }\n\n  m = (Math.round(m * em) + .05) / em;\n  if (Math.abs(m) < .001) return '0em';\n  return m.toFixed(3).replace(/\\.?0+$/, '') + 'em';\n}\n\nexports.emRounded = emRounded;\n\nfunction px(m, M, em) {\n  if (M === void 0) {\n    M = -exports.BIGDIMEN;\n  }\n\n  if (em === void 0) {\n    em = 16;\n  }\n\n  m *= em;\n  if (M && m < M) m = M;\n  if (Math.abs(m) < .1) return '0';\n  return m.toFixed(1).replace(/\\.0$/, '') + 'px';\n}\n\nexports.px = px;","map":{"version":3,"mappings":"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","names":["exports","px","cm","mm","em","ex","pt","pc","mu","veryverythinmathspace","verythinmathspace","thinmathspace","mediummathspace","thickmathspace","verythickmathspace","veryverythickmathspace","negativeveryverythinmathspace","negativeverythinmathspace","negativethinmathspace","negativemediummathspace","negativethickmathspace","negativeverythickmathspace","negativeveryverythickmathspace","thin","medium","thick","normal","big","small","Math","sqrt","infinity","length2em","length","size","scale","String","match","m","parseFloat","unit","hasOwnProperty","percent","toFixed","replace","abs","emRounded","round","M"],"sourceRoot":"","sources":["../../ts/util/lengths.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}