{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { squareNumber } from '../../plain/number/index.js';\nvar name = 'square';\nvar dependencies = ['typed'];\nexport var createSquare = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n  /**\r\n   * Compute the square of a value, `x * x`.\r\n   * To avoid confusion with multiplying a square matrix by itself,\r\n   * this function does not apply to matrices. If you wish to square\r\n   * every element of a matrix, see the examples.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.square(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.square(2)           // returns number 4\r\n   *    math.square(3)           // returns number 9\r\n   *    math.pow(3, 2)           // returns number 9\r\n   *    math.multiply(3, 3)      // returns number 9\r\n   *\r\n   *    math.map([1, 2, 3, 4], math.square)  // returns Array [1, 4, 9, 16]\r\n   *\r\n   * See also:\r\n   *\r\n   *    multiply, cube, sqrt, pow\r\n   *\r\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x\r\n   *            Number for which to calculate the square\r\n   * @return {number | BigNumber | Fraction | Complex | Unit}\r\n   *            Squared value\r\n   */\n\n  return typed(name, {\n    number: squareNumber,\n    Complex: function Complex(x) {\n      return x.mul(x);\n    },\n    BigNumber: function BigNumber(x) {\n      return x.times(x);\n    },\n    Fraction: function Fraction(x) {\n      return x.mul(x);\n    },\n    Unit: function Unit(x) {\n      return x.pow(2);\n    }\n  });\n});","map":{"version":3,"names":["factory","squareNumber","name","dependencies","createSquare","_ref","typed","number","Complex","x","mul","BigNumber","times","Fraction","Unit","pow"],"sources":["C:/Users/daniz/TFG/Aplicacion/node_modules/mathjs/lib/esm/function/arithmetic/square.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\r\nimport { squareNumber } from '../../plain/number/index.js';\r\nvar name = 'square';\r\nvar dependencies = ['typed'];\r\nexport var createSquare = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed\r\n  } = _ref;\r\n\r\n  /**\r\n   * Compute the square of a value, `x * x`.\r\n   * To avoid confusion with multiplying a square matrix by itself,\r\n   * this function does not apply to matrices. If you wish to square\r\n   * every element of a matrix, see the examples.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.square(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.square(2)           // returns number 4\r\n   *    math.square(3)           // returns number 9\r\n   *    math.pow(3, 2)           // returns number 9\r\n   *    math.multiply(3, 3)      // returns number 9\r\n   *\r\n   *    math.map([1, 2, 3, 4], math.square)  // returns Array [1, 4, 9, 16]\r\n   *\r\n   * See also:\r\n   *\r\n   *    multiply, cube, sqrt, pow\r\n   *\r\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x\r\n   *            Number for which to calculate the square\r\n   * @return {number | BigNumber | Fraction | Complex | Unit}\r\n   *            Squared value\r\n   */\r\n  return typed(name, {\r\n    number: squareNumber,\r\n    Complex: function Complex(x) {\r\n      return x.mul(x);\r\n    },\r\n    BigNumber: function BigNumber(x) {\r\n      return x.times(x);\r\n    },\r\n    Fraction: function Fraction(x) {\r\n      return x.mul(x);\r\n    },\r\n    Unit: function Unit(x) {\r\n      return x.pow(2);\r\n    }\r\n  });\r\n});"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,IAAIC,IAAI,GAAG,QAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,CAAnB;AACA,OAAO,IAAIC,YAAY,GAAG,eAAeJ,OAAO,CAACE,IAAD,EAAOC,YAAP,EAAqB,UAAAE,IAAI,EAAI;EAC3E,IACEC,KADF,GAEID,IAFJ,CACEC,KADF;EAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,OAAOA,KAAK,CAACJ,IAAD,EAAO;IACjBK,MAAM,EAAEN,YADS;IAEjBO,OAAO,EAAE,SAASA,OAAT,CAAiBC,CAAjB,EAAoB;MAC3B,OAAOA,CAAC,CAACC,GAAF,CAAMD,CAAN,CAAP;IACD,CAJgB;IAKjBE,SAAS,EAAE,SAASA,SAAT,CAAmBF,CAAnB,EAAsB;MAC/B,OAAOA,CAAC,CAACG,KAAF,CAAQH,CAAR,CAAP;IACD,CAPgB;IAQjBI,QAAQ,EAAE,SAASA,QAAT,CAAkBJ,CAAlB,EAAqB;MAC7B,OAAOA,CAAC,CAACC,GAAF,CAAMD,CAAN,CAAP;IACD,CAVgB;IAWjBK,IAAI,EAAE,SAASA,IAAT,CAAcL,CAAd,EAAiB;MACrB,OAAOA,CAAC,CAACM,GAAF,CAAM,CAAN,CAAP;IACD;EAbgB,CAAP,CAAZ;AAeD,CAhD+C,CAAzC"},"metadata":{},"sourceType":"module"}