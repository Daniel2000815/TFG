{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbstractNodeFactory = void 0;\n\nvar Factory_js_1 = require(\"./Factory.js\");\n\nvar AbstractNodeFactory = function (_super) {\n  __extends(AbstractNodeFactory, _super);\n\n  function AbstractNodeFactory() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AbstractNodeFactory.prototype.create = function (kind, properties, children) {\n    if (properties === void 0) {\n      properties = {};\n    }\n\n    if (children === void 0) {\n      children = [];\n    }\n\n    return this.node[kind](properties, children);\n  };\n\n  return AbstractNodeFactory;\n}(Factory_js_1.AbstractFactory);\n\nexports.AbstractNodeFactory = AbstractNodeFactory;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;AA0BA;EAAiGA;;EAAjG;;EAQC;;EAJQC,uCAAP,UAAcC,IAAd,EAA4BC,UAA5B,EAA2DC,QAA3D,EAA6E;IAAjD;MAAAD;IAA6B;;IAAE;MAAAC;IAAkB;;IAC3E,OAAO,KAAKC,IAAL,CAAUH,IAAV,EAAgBC,UAAhB,EAA4BC,QAA5B,CAAP;EACD,CAFM;;EAIT;AAAC,CARD,CAAiGE,4BAAjG;;AAAsBC","names":["__extends","AbstractNodeFactory","kind","properties","children","node","Factory_js_1","exports"],"sourceRoot":"","sources":["../../../ts/core/Tree/NodeFactory.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}