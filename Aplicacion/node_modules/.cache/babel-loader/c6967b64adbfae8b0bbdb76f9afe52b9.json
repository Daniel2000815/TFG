{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nexport var createTrigUnit = /* #__PURE__ */factory('trigUnit', ['typed'], function (_ref) {\n  var typed = _ref.typed;\n  return {\n    Unit: typed.referToSelf(function (self) {\n      return function (x) {\n        if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\n          throw new TypeError('Unit in function cot is no angle');\n        }\n\n        return typed.find(self, x.valueType())(x.value);\n      };\n    })\n  };\n});","map":{"version":3,"names":["factory","createTrigUnit","_ref","typed","Unit","referToSelf","self","x","hasBase","constructor","BASE_UNITS","ANGLE","TypeError","find","valueType","value"],"sources":["C:/Users/daniz/TFG/Aplicacion/node_modules/mathjs/lib/esm/function/trigonometry/trigUnit.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\r\nexport var createTrigUnit = /* #__PURE__ */factory('trigUnit', ['typed'], _ref => {\r\n  var {\r\n    typed\r\n  } = _ref;\r\n  return {\r\n    Unit: typed.referToSelf(self => x => {\r\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\r\n        throw new TypeError('Unit in function cot is no angle');\r\n      }\r\n\r\n      return typed.find(self, x.valueType())(x.value);\r\n    })\r\n  };\r\n});"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,OAAO,IAAIC,cAAc,GAAG,eAAeD,OAAO,CAAC,UAAD,EAAa,CAAC,OAAD,CAAb,EAAwB,UAAAE,IAAI,EAAI;EAChF,IACEC,KADF,GAEID,IAFJ,CACEC,KADF;EAGA,OAAO;IACLC,IAAI,EAAED,KAAK,CAACE,WAAN,CAAkB,UAAAC,IAAI;MAAA,OAAI,UAAAC,CAAC,EAAI;QACnC,IAAI,CAACA,CAAC,CAACC,OAAF,CAAUD,CAAC,CAACE,WAAF,CAAcC,UAAd,CAAyBC,KAAnC,CAAL,EAAgD;UAC9C,MAAM,IAAIC,SAAJ,CAAc,kCAAd,CAAN;QACD;;QAED,OAAOT,KAAK,CAACU,IAAN,CAAWP,IAAX,EAAiBC,CAAC,CAACO,SAAF,EAAjB,EAAgCP,CAAC,CAACQ,KAAlC,CAAP;MACD,CAN2B;IAAA,CAAtB;EADD,CAAP;AASD,CAbiD,CAA3C"},"metadata":{},"sourceType":"module"}