{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.XMLNode = exports.TextNode = exports.AbstractMmlEmptyNode = exports.AbstractMmlBaseNode = exports.AbstractMmlLayoutNode = exports.AbstractMmlTokenNode = exports.AbstractMmlNode = exports.indentAttributes = exports.TEXCLASSNAMES = exports.TEXCLASS = void 0;\n\nvar Attributes_js_1 = require(\"./Attributes.js\");\n\nvar Node_js_1 = require(\"../Tree/Node.js\");\n\nexports.TEXCLASS = {\n  ORD: 0,\n  OP: 1,\n  BIN: 2,\n  REL: 3,\n  OPEN: 4,\n  CLOSE: 5,\n  PUNCT: 6,\n  INNER: 7,\n  VCENTER: 8,\n  NONE: -1\n};\nexports.TEXCLASSNAMES = ['ORD', 'OP', 'BIN', 'REL', 'OPEN', 'CLOSE', 'PUNCT', 'INNER', 'VCENTER'];\nvar TEXSPACELENGTH = ['', 'thinmathspace', 'mediummathspace', 'thickmathspace'];\nvar TEXSPACE = [[0, -1, 2, 3, 0, 0, 0, 1], [-1, -1, 0, 3, 0, 0, 0, 1], [2, 2, 0, 0, 2, 0, 0, 2], [3, 3, 0, 0, 3, 0, 0, 3], [0, 0, 0, 0, 0, 0, 0, 0], [0, -1, 2, 3, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1], [1, -1, 2, 3, 1, 0, 1, 1]];\nexports.indentAttributes = ['indentalign', 'indentalignfirst', 'indentshift', 'indentshiftfirst'];\n\nvar AbstractMmlNode = function (_super) {\n  __extends(AbstractMmlNode, _super);\n\n  function AbstractMmlNode(factory, attributes, children) {\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    if (children === void 0) {\n      children = [];\n    }\n\n    var _this = _super.call(this, factory) || this;\n\n    _this.prevClass = null;\n    _this.prevLevel = null;\n    _this.texclass = null;\n\n    if (_this.arity < 0) {\n      _this.childNodes = [factory.create('inferredMrow')];\n      _this.childNodes[0].parent = _this;\n    }\n\n    _this.setChildren(children);\n\n    _this.attributes = new Attributes_js_1.Attributes(factory.getNodeClass(_this.kind).defaults, factory.getNodeClass('math').defaults);\n\n    _this.attributes.setList(attributes);\n\n    return _this;\n  }\n\n  AbstractMmlNode.prototype.copy = function (keepIds) {\n    var e_1, _a, e_2, _b;\n\n    if (keepIds === void 0) {\n      keepIds = false;\n    }\n\n    var node = this.factory.create(this.kind);\n    node.properties = __assign({}, this.properties);\n\n    if (this.attributes) {\n      var attributes = this.attributes.getAllAttributes();\n\n      try {\n        for (var _c = __values(Object.keys(attributes)), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var name_1 = _d.value;\n\n          if (name_1 !== 'id' || keepIds) {\n            node.attributes.set(name_1, attributes[name_1]);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    if (this.childNodes && this.childNodes.length) {\n      var children = this.childNodes;\n\n      if (children.length === 1 && children[0].isInferred) {\n        children = children[0].childNodes;\n      }\n\n      try {\n        for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n          var child = children_1_1.value;\n\n          if (child) {\n            node.appendChild(child.copy());\n          } else {\n            node.childNodes.push(null);\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (children_1_1 && !children_1_1.done && (_b = children_1.return)) _b.call(children_1);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    return node;\n  };\n\n  Object.defineProperty(AbstractMmlNode.prototype, \"texClass\", {\n    get: function get() {\n      return this.texclass;\n    },\n    set: function set(texClass) {\n      this.texclass = texClass;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlNode.prototype, \"isToken\", {\n    get: function get() {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlNode.prototype, \"isEmbellished\", {\n    get: function get() {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlNode.prototype, \"isSpacelike\", {\n    get: function get() {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlNode.prototype, \"linebreakContainer\", {\n    get: function get() {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlNode.prototype, \"hasNewLine\", {\n    get: function get() {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlNode.prototype, \"arity\", {\n    get: function get() {\n      return Infinity;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlNode.prototype, \"isInferred\", {\n    get: function get() {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlNode.prototype, \"Parent\", {\n    get: function get() {\n      var parent = this.parent;\n\n      while (parent && parent.notParent) {\n        parent = parent.Parent;\n      }\n\n      return parent;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlNode.prototype, \"notParent\", {\n    get: function get() {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  AbstractMmlNode.prototype.setChildren = function (children) {\n    if (this.arity < 0) {\n      return this.childNodes[0].setChildren(children);\n    }\n\n    return _super.prototype.setChildren.call(this, children);\n  };\n\n  AbstractMmlNode.prototype.appendChild = function (child) {\n    var e_3, _a;\n\n    var _this = this;\n\n    if (this.arity < 0) {\n      this.childNodes[0].appendChild(child);\n      return child;\n    }\n\n    if (child.isInferred) {\n      if (this.arity === Infinity) {\n        child.childNodes.forEach(function (node) {\n          return _super.prototype.appendChild.call(_this, node);\n        });\n        return child;\n      }\n\n      var original = child;\n      child = this.factory.create('mrow');\n      child.setChildren(original.childNodes);\n      child.attributes = original.attributes;\n\n      try {\n        for (var _b = __values(original.getPropertyNames()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var name_2 = _c.value;\n          child.setProperty(name_2, original.getProperty(name_2));\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n    }\n\n    return _super.prototype.appendChild.call(this, child);\n  };\n\n  AbstractMmlNode.prototype.replaceChild = function (newChild, oldChild) {\n    if (this.arity < 0) {\n      this.childNodes[0].replaceChild(newChild, oldChild);\n      return newChild;\n    }\n\n    return _super.prototype.replaceChild.call(this, newChild, oldChild);\n  };\n\n  AbstractMmlNode.prototype.core = function () {\n    return this;\n  };\n\n  AbstractMmlNode.prototype.coreMO = function () {\n    return this;\n  };\n\n  AbstractMmlNode.prototype.coreIndex = function () {\n    return 0;\n  };\n\n  AbstractMmlNode.prototype.childPosition = function () {\n    var e_4, _a;\n\n    var child = this;\n    var parent = child.parent;\n\n    while (parent && parent.notParent) {\n      child = parent;\n      parent = parent.parent;\n    }\n\n    if (parent) {\n      var i = 0;\n\n      try {\n        for (var _b = __values(parent.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var node = _c.value;\n\n          if (node === child) {\n            return i;\n          }\n\n          i++;\n        }\n      } catch (e_4_1) {\n        e_4 = {\n          error: e_4_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_4) throw e_4.error;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  AbstractMmlNode.prototype.setTeXclass = function (prev) {\n    this.getPrevClass(prev);\n    return this.texClass != null ? this : prev;\n  };\n\n  AbstractMmlNode.prototype.updateTeXclass = function (core) {\n    if (core) {\n      this.prevClass = core.prevClass;\n      this.prevLevel = core.prevLevel;\n      core.prevClass = core.prevLevel = null;\n      this.texClass = core.texClass;\n    }\n  };\n\n  AbstractMmlNode.prototype.getPrevClass = function (prev) {\n    if (prev) {\n      this.prevClass = prev.texClass;\n      this.prevLevel = prev.attributes.get('scriptlevel');\n    }\n  };\n\n  AbstractMmlNode.prototype.texSpacing = function () {\n    var prevClass = this.prevClass != null ? this.prevClass : exports.TEXCLASS.NONE;\n    var texClass = this.texClass || exports.TEXCLASS.ORD;\n\n    if (prevClass === exports.TEXCLASS.NONE || texClass === exports.TEXCLASS.NONE) {\n      return '';\n    }\n\n    if (prevClass === exports.TEXCLASS.VCENTER) {\n      prevClass = exports.TEXCLASS.ORD;\n    }\n\n    if (texClass === exports.TEXCLASS.VCENTER) {\n      texClass = exports.TEXCLASS.ORD;\n    }\n\n    var space = TEXSPACE[prevClass][texClass];\n\n    if ((this.prevLevel > 0 || this.attributes.get('scriptlevel') > 0) && space >= 0) {\n      return '';\n    }\n\n    return TEXSPACELENGTH[Math.abs(space)];\n  };\n\n  AbstractMmlNode.prototype.hasSpacingAttributes = function () {\n    return this.isEmbellished && this.coreMO().hasSpacingAttributes();\n  };\n\n  AbstractMmlNode.prototype.setInheritedAttributes = function (attributes, display, level, prime) {\n    var e_5, _a;\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    if (display === void 0) {\n      display = false;\n    }\n\n    if (level === void 0) {\n      level = 0;\n    }\n\n    if (prime === void 0) {\n      prime = false;\n    }\n\n    var defaults = this.attributes.getAllDefaults();\n\n    try {\n      for (var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var key = _c.value;\n\n        if (defaults.hasOwnProperty(key) || AbstractMmlNode.alwaysInherit.hasOwnProperty(key)) {\n          var _d = __read(attributes[key], 2),\n              node = _d[0],\n              value = _d[1];\n\n          var noinherit = (AbstractMmlNode.noInherit[node] || {})[this.kind] || {};\n\n          if (!noinherit[key]) {\n            this.attributes.setInherited(key, value);\n          }\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    var displaystyle = this.attributes.getExplicit('displaystyle');\n\n    if (displaystyle === undefined) {\n      this.attributes.setInherited('displaystyle', display);\n    }\n\n    var scriptlevel = this.attributes.getExplicit('scriptlevel');\n\n    if (scriptlevel === undefined) {\n      this.attributes.setInherited('scriptlevel', level);\n    }\n\n    if (prime) {\n      this.setProperty('texprimestyle', prime);\n    }\n\n    var arity = this.arity;\n\n    if (arity >= 0 && arity !== Infinity && (arity === 1 && this.childNodes.length === 0 || arity !== 1 && this.childNodes.length !== arity)) {\n      if (arity < this.childNodes.length) {\n        this.childNodes = this.childNodes.slice(0, arity);\n      } else {\n        while (this.childNodes.length < arity) {\n          this.appendChild(this.factory.create('mrow'));\n        }\n      }\n    }\n\n    this.setChildInheritedAttributes(attributes, display, level, prime);\n  };\n\n  AbstractMmlNode.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {\n    var e_6, _a;\n\n    try {\n      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n        child.setInheritedAttributes(attributes, display, level, prime);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n  };\n\n  AbstractMmlNode.prototype.addInheritedAttributes = function (current, attributes) {\n    var e_7, _a;\n\n    var updated = __assign({}, current);\n\n    try {\n      for (var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var name_3 = _c.value;\n\n        if (name_3 !== 'displaystyle' && name_3 !== 'scriptlevel' && name_3 !== 'style') {\n          updated[name_3] = [this.kind, attributes[name_3]];\n        }\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    return updated;\n  };\n\n  AbstractMmlNode.prototype.inheritAttributesFrom = function (node) {\n    var attributes = node.attributes;\n    var display = attributes.get('displaystyle');\n    var scriptlevel = attributes.get('scriptlevel');\n    var defaults = !attributes.isSet('mathsize') ? {} : {\n      mathsize: ['math', attributes.get('mathsize')]\n    };\n    var prime = node.getProperty('texprimestyle') || false;\n    this.setInheritedAttributes(defaults, display, scriptlevel, prime);\n  };\n\n  AbstractMmlNode.prototype.verifyTree = function (options) {\n    if (options === void 0) {\n      options = null;\n    }\n\n    if (options === null) {\n      return;\n    }\n\n    this.verifyAttributes(options);\n    var arity = this.arity;\n\n    if (options['checkArity']) {\n      if (arity >= 0 && arity !== Infinity && (arity === 1 && this.childNodes.length === 0 || arity !== 1 && this.childNodes.length !== arity)) {\n        this.mError('Wrong number of children for \"' + this.kind + '\" node', options, true);\n      }\n    }\n\n    this.verifyChildren(options);\n  };\n\n  AbstractMmlNode.prototype.verifyAttributes = function (options) {\n    var e_8, _a;\n\n    if (options['checkAttributes']) {\n      var attributes = this.attributes;\n      var bad = [];\n\n      try {\n        for (var _b = __values(attributes.getExplicitNames()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var name_4 = _c.value;\n\n          if (name_4.substr(0, 5) !== 'data-' && attributes.getDefault(name_4) === undefined && !name_4.match(/^(?:class|style|id|(?:xlink:)?href)$/)) {\n            bad.push(name_4);\n          }\n        }\n      } catch (e_8_1) {\n        e_8 = {\n          error: e_8_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_8) throw e_8.error;\n        }\n      }\n\n      if (bad.length) {\n        this.mError('Unknown attributes for ' + this.kind + ' node: ' + bad.join(', '), options);\n      }\n    }\n  };\n\n  AbstractMmlNode.prototype.verifyChildren = function (options) {\n    var e_9, _a;\n\n    try {\n      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n        child.verifyTree(options);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n  };\n\n  AbstractMmlNode.prototype.mError = function (message, options, short) {\n    if (short === void 0) {\n      short = false;\n    }\n\n    if (this.parent && this.parent.isKind('merror')) {\n      return null;\n    }\n\n    var merror = this.factory.create('merror');\n    merror.attributes.set('data-mjx-message', message);\n\n    if (options['fullErrors'] || short) {\n      var mtext = this.factory.create('mtext');\n      var text = this.factory.create('text');\n      text.setText(options['fullErrors'] ? message : this.kind);\n      mtext.appendChild(text);\n      merror.appendChild(mtext);\n      this.parent.replaceChild(merror, this);\n    } else {\n      this.parent.replaceChild(merror, this);\n      merror.appendChild(this);\n    }\n\n    return merror;\n  };\n\n  AbstractMmlNode.defaults = {\n    mathbackground: Attributes_js_1.INHERIT,\n    mathcolor: Attributes_js_1.INHERIT,\n    mathsize: Attributes_js_1.INHERIT,\n    dir: Attributes_js_1.INHERIT\n  };\n  AbstractMmlNode.noInherit = {\n    mstyle: {\n      mpadded: {\n        width: true,\n        height: true,\n        depth: true,\n        lspace: true,\n        voffset: true\n      },\n      mtable: {\n        width: true,\n        height: true,\n        depth: true,\n        align: true\n      }\n    },\n    maligngroup: {\n      mrow: {\n        groupalign: true\n      },\n      mtable: {\n        groupalign: true\n      }\n    }\n  };\n  AbstractMmlNode.alwaysInherit = {\n    scriptminsize: true,\n    scriptsizemultiplier: true\n  };\n  AbstractMmlNode.verifyDefaults = {\n    checkArity: true,\n    checkAttributes: false,\n    fullErrors: false,\n    fixMmultiscripts: true,\n    fixMtables: true\n  };\n  return AbstractMmlNode;\n}(Node_js_1.AbstractNode);\n\nexports.AbstractMmlNode = AbstractMmlNode;\n\nvar AbstractMmlTokenNode = function (_super) {\n  __extends(AbstractMmlTokenNode, _super);\n\n  function AbstractMmlTokenNode() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(AbstractMmlTokenNode.prototype, \"isToken\", {\n    get: function get() {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  AbstractMmlTokenNode.prototype.getText = function () {\n    var e_10, _a;\n\n    var text = '';\n\n    try {\n      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n\n        if (child instanceof TextNode) {\n          text += child.getText();\n        }\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    return text;\n  };\n\n  AbstractMmlTokenNode.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {\n    var e_11, _a;\n\n    try {\n      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n\n        if (child instanceof AbstractMmlNode) {\n          child.setInheritedAttributes(attributes, display, level, prime);\n        }\n      }\n    } catch (e_11_1) {\n      e_11 = {\n        error: e_11_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_11) throw e_11.error;\n      }\n    }\n  };\n\n  AbstractMmlTokenNode.prototype.walkTree = function (func, data) {\n    var e_12, _a;\n\n    func(this, data);\n\n    try {\n      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n\n        if (child instanceof AbstractMmlNode) {\n          child.walkTree(func, data);\n        }\n      }\n    } catch (e_12_1) {\n      e_12 = {\n        error: e_12_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_12) throw e_12.error;\n      }\n    }\n\n    return data;\n  };\n\n  AbstractMmlTokenNode.defaults = __assign(__assign({}, AbstractMmlNode.defaults), {\n    mathvariant: 'normal',\n    mathsize: Attributes_js_1.INHERIT\n  });\n  return AbstractMmlTokenNode;\n}(AbstractMmlNode);\n\nexports.AbstractMmlTokenNode = AbstractMmlTokenNode;\n\nvar AbstractMmlLayoutNode = function (_super) {\n  __extends(AbstractMmlLayoutNode, _super);\n\n  function AbstractMmlLayoutNode() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(AbstractMmlLayoutNode.prototype, \"isSpacelike\", {\n    get: function get() {\n      return this.childNodes[0].isSpacelike;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlLayoutNode.prototype, \"isEmbellished\", {\n    get: function get() {\n      return this.childNodes[0].isEmbellished;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlLayoutNode.prototype, \"arity\", {\n    get: function get() {\n      return -1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  AbstractMmlLayoutNode.prototype.core = function () {\n    return this.childNodes[0];\n  };\n\n  AbstractMmlLayoutNode.prototype.coreMO = function () {\n    return this.childNodes[0].coreMO();\n  };\n\n  AbstractMmlLayoutNode.prototype.setTeXclass = function (prev) {\n    prev = this.childNodes[0].setTeXclass(prev);\n    this.updateTeXclass(this.childNodes[0]);\n    return prev;\n  };\n\n  AbstractMmlLayoutNode.defaults = AbstractMmlNode.defaults;\n  return AbstractMmlLayoutNode;\n}(AbstractMmlNode);\n\nexports.AbstractMmlLayoutNode = AbstractMmlLayoutNode;\n\nvar AbstractMmlBaseNode = function (_super) {\n  __extends(AbstractMmlBaseNode, _super);\n\n  function AbstractMmlBaseNode() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(AbstractMmlBaseNode.prototype, \"isEmbellished\", {\n    get: function get() {\n      return this.childNodes[0].isEmbellished;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  AbstractMmlBaseNode.prototype.core = function () {\n    return this.childNodes[0];\n  };\n\n  AbstractMmlBaseNode.prototype.coreMO = function () {\n    return this.childNodes[0].coreMO();\n  };\n\n  AbstractMmlBaseNode.prototype.setTeXclass = function (prev) {\n    var e_13, _a;\n\n    this.getPrevClass(prev);\n    this.texClass = exports.TEXCLASS.ORD;\n    var base = this.childNodes[0];\n\n    if (base) {\n      if (this.isEmbellished || base.isKind('mi')) {\n        prev = base.setTeXclass(prev);\n        this.updateTeXclass(this.core());\n      } else {\n        base.setTeXclass(null);\n        prev = this;\n      }\n    } else {\n      prev = this;\n    }\n\n    try {\n      for (var _b = __values(this.childNodes.slice(1)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n\n        if (child) {\n          child.setTeXclass(null);\n        }\n      }\n    } catch (e_13_1) {\n      e_13 = {\n        error: e_13_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_13) throw e_13.error;\n      }\n    }\n\n    return prev;\n  };\n\n  AbstractMmlBaseNode.defaults = AbstractMmlNode.defaults;\n  return AbstractMmlBaseNode;\n}(AbstractMmlNode);\n\nexports.AbstractMmlBaseNode = AbstractMmlBaseNode;\n\nvar AbstractMmlEmptyNode = function (_super) {\n  __extends(AbstractMmlEmptyNode, _super);\n\n  function AbstractMmlEmptyNode() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(AbstractMmlEmptyNode.prototype, \"isToken\", {\n    get: function get() {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlEmptyNode.prototype, \"isEmbellished\", {\n    get: function get() {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlEmptyNode.prototype, \"isSpacelike\", {\n    get: function get() {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlEmptyNode.prototype, \"linebreakContainer\", {\n    get: function get() {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlEmptyNode.prototype, \"hasNewLine\", {\n    get: function get() {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlEmptyNode.prototype, \"arity\", {\n    get: function get() {\n      return 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlEmptyNode.prototype, \"isInferred\", {\n    get: function get() {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlEmptyNode.prototype, \"notParent\", {\n    get: function get() {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlEmptyNode.prototype, \"Parent\", {\n    get: function get() {\n      return this.parent;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlEmptyNode.prototype, \"texClass\", {\n    get: function get() {\n      return exports.TEXCLASS.NONE;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlEmptyNode.prototype, \"prevClass\", {\n    get: function get() {\n      return exports.TEXCLASS.NONE;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractMmlEmptyNode.prototype, \"prevLevel\", {\n    get: function get() {\n      return 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  AbstractMmlEmptyNode.prototype.hasSpacingAttributes = function () {\n    return false;\n  };\n\n  Object.defineProperty(AbstractMmlEmptyNode.prototype, \"attributes\", {\n    get: function get() {\n      return null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  AbstractMmlEmptyNode.prototype.core = function () {\n    return this;\n  };\n\n  AbstractMmlEmptyNode.prototype.coreMO = function () {\n    return this;\n  };\n\n  AbstractMmlEmptyNode.prototype.coreIndex = function () {\n    return 0;\n  };\n\n  AbstractMmlEmptyNode.prototype.childPosition = function () {\n    return 0;\n  };\n\n  AbstractMmlEmptyNode.prototype.setTeXclass = function (prev) {\n    return prev;\n  };\n\n  AbstractMmlEmptyNode.prototype.texSpacing = function () {\n    return '';\n  };\n\n  AbstractMmlEmptyNode.prototype.setInheritedAttributes = function (_attributes, _display, _level, _prime) {};\n\n  AbstractMmlEmptyNode.prototype.inheritAttributesFrom = function (_node) {};\n\n  AbstractMmlEmptyNode.prototype.verifyTree = function (_options) {};\n\n  AbstractMmlEmptyNode.prototype.mError = function (_message, _options, _short) {\n    if (_short === void 0) {\n      _short = false;\n    }\n\n    return null;\n  };\n\n  return AbstractMmlEmptyNode;\n}(Node_js_1.AbstractEmptyNode);\n\nexports.AbstractMmlEmptyNode = AbstractMmlEmptyNode;\n\nvar TextNode = function (_super) {\n  __extends(TextNode, _super);\n\n  function TextNode() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.text = '';\n    return _this;\n  }\n\n  Object.defineProperty(TextNode.prototype, \"kind\", {\n    get: function get() {\n      return 'text';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  TextNode.prototype.getText = function () {\n    return this.text;\n  };\n\n  TextNode.prototype.setText = function (text) {\n    this.text = text;\n    return this;\n  };\n\n  TextNode.prototype.copy = function () {\n    return this.factory.create(this.kind).setText(this.getText());\n  };\n\n  TextNode.prototype.toString = function () {\n    return this.text;\n  };\n\n  return TextNode;\n}(AbstractMmlEmptyNode);\n\nexports.TextNode = TextNode;\n\nvar XMLNode = function (_super) {\n  __extends(XMLNode, _super);\n\n  function XMLNode() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.xml = null;\n    _this.adaptor = null;\n    return _this;\n  }\n\n  Object.defineProperty(XMLNode.prototype, \"kind\", {\n    get: function get() {\n      return 'XML';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  XMLNode.prototype.getXML = function () {\n    return this.xml;\n  };\n\n  XMLNode.prototype.setXML = function (xml, adaptor) {\n    if (adaptor === void 0) {\n      adaptor = null;\n    }\n\n    this.xml = xml;\n    this.adaptor = adaptor;\n    return this;\n  };\n\n  XMLNode.prototype.getSerializedXML = function () {\n    return this.adaptor.serializeXML(this.xml);\n  };\n\n  XMLNode.prototype.copy = function () {\n    return this.factory.create(this.kind).setXML(this.adaptor.clone(this.xml));\n  };\n\n  XMLNode.prototype.toString = function () {\n    return 'XML data';\n  };\n\n  return XMLNode;\n}(AbstractMmlEmptyNode);\n\nexports.XMLNode = XMLNode;","map":{"version":3,"mappings":"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","names":["exports","ORD","OP","BIN","REL","OPEN","CLOSE","PUNCT","INNER","VCENTER","NONE","TEXSPACELENGTH","TEXSPACE","__extends","factory","attributes","children","_super","_this","arity","childNodes","create","parent","setChildren","Attributes_js_1","getNodeClass","kind","defaults","setList","AbstractMmlNode","keepIds","node","properties","__assign","getAllAttributes","keys","_d","name_1","set","length","isInferred","children_1_1","child","appendChild","copy","push","Object","texclass","texClass","Infinity","notParent","Parent","call","forEach","original","getPropertyNames","_c","name_2","setProperty","getProperty","newChild","oldChild","replaceChild","i","prev","getPrevClass","core","prevClass","prevLevel","get","space","Math","abs","isEmbellished","coreMO","hasSpacingAttributes","display","level","prime","getAllDefaults","key","hasOwnProperty","alwaysInherit","value","noinherit","noInherit","setInherited","displaystyle","getExplicit","undefined","scriptlevel","slice","setChildInheritedAttributes","setInheritedAttributes","current","updated","name_3","isSet","mathsize","options","verifyAttributes","mError","verifyChildren","bad","getExplicitNames","name_4","substr","getDefault","match","join","verifyTree","message","short","isKind","merror","mtext","text","setText","mathbackground","mathcolor","dir","mstyle","mpadded","width","height","depth","lspace","voffset","mtable","align","maligngroup","mrow","groupalign","scriptminsize","scriptsizemultiplier","checkArity","checkAttributes","fullErrors","fixMmultiscripts","fixMtables","Node_js_1","AbstractMmlTokenNode","TextNode","getText","func","data","walkTree","mathvariant","AbstractMmlLayoutNode","isSpacelike","setTeXclass","updateTeXclass","AbstractMmlBaseNode","base","AbstractMmlEmptyNode","_attributes","_display","_level","_prime","_node","_options","_message","_short","XMLNode","xml","adaptor","serializeXML","setXML","clone"],"sourceRoot":"","sources":["../../../ts/core/MmlTree/MmlNode.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}