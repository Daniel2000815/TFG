{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar StackItemFactory_js_1 = __importDefault(require(\"./StackItemFactory.js\"));\n\nvar NodeFactory_js_1 = require(\"./NodeFactory.js\");\n\nvar NodeUtil_js_1 = __importDefault(require(\"./NodeUtil.js\"));\n\nvar Options_js_1 = require(\"../../util/Options.js\");\n\nvar ParseOptions = function () {\n  function ParseOptions(configuration, options) {\n    if (options === void 0) {\n      options = [];\n    }\n\n    this.options = {};\n    this.packageData = new Map();\n    this.parsers = [];\n    this.root = null;\n    this.nodeLists = {};\n    this.error = false;\n    this.handlers = configuration.handlers;\n    this.nodeFactory = new NodeFactory_js_1.NodeFactory();\n    this.nodeFactory.configuration = this;\n    this.nodeFactory.setCreators(configuration.nodes);\n    this.itemFactory = new StackItemFactory_js_1.default(configuration.items);\n    this.itemFactory.configuration = this;\n    Options_js_1.defaultOptions.apply(void 0, __spreadArray([this.options], __read(options), false));\n    (0, Options_js_1.defaultOptions)(this.options, configuration.options);\n  }\n\n  ParseOptions.prototype.pushParser = function (parser) {\n    this.parsers.unshift(parser);\n  };\n\n  ParseOptions.prototype.popParser = function () {\n    this.parsers.shift();\n  };\n\n  Object.defineProperty(ParseOptions.prototype, \"parser\", {\n    get: function get() {\n      return this.parsers[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ParseOptions.prototype.clear = function () {\n    this.parsers = [];\n    this.root = null;\n    this.nodeLists = {};\n    this.error = false;\n    this.tags.resetTag();\n  };\n\n  ParseOptions.prototype.addNode = function (property, node) {\n    var list = this.nodeLists[property];\n\n    if (!list) {\n      list = this.nodeLists[property] = [];\n    }\n\n    list.push(node);\n\n    if (node.kind !== property) {\n      var inlists = NodeUtil_js_1.default.getProperty(node, 'in-lists') || '';\n      var lists = (inlists ? inlists.split(/,/) : []).concat(property).join(',');\n      NodeUtil_js_1.default.setProperty(node, 'in-lists', lists);\n    }\n  };\n\n  ParseOptions.prototype.getList = function (property) {\n    var e_1, _a;\n\n    var list = this.nodeLists[property] || [];\n    var result = [];\n\n    try {\n      for (var list_1 = __values(list), list_1_1 = list_1.next(); !list_1_1.done; list_1_1 = list_1.next()) {\n        var node = list_1_1.value;\n\n        if (this.inTree(node)) {\n          result.push(node);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (list_1_1 && !list_1_1.done && (_a = list_1.return)) _a.call(list_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    this.nodeLists[property] = result;\n    return result;\n  };\n\n  ParseOptions.prototype.removeFromList = function (property, nodes) {\n    var e_2, _a;\n\n    var list = this.nodeLists[property] || [];\n\n    try {\n      for (var nodes_1 = __values(nodes), nodes_1_1 = nodes_1.next(); !nodes_1_1.done; nodes_1_1 = nodes_1.next()) {\n        var node = nodes_1_1.value;\n        var i = list.indexOf(node);\n\n        if (i >= 0) {\n          list.splice(i, 1);\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (nodes_1_1 && !nodes_1_1.done && (_a = nodes_1.return)) _a.call(nodes_1);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  };\n\n  ParseOptions.prototype.inTree = function (node) {\n    while (node && node !== this.root) {\n      node = node.parent;\n    }\n\n    return !!node;\n  };\n\n  return ParseOptions;\n}();\n\nexports.default = ParseOptions;","map":{"version":3,"mappings":"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","names":["configuration","options","Map","handlers","nodeFactory","NodeFactory_js_1","setCreators","nodes","itemFactory","StackItemFactory_js_1","items","Options_js_1","apply","__spreadArray","__read","ParseOptions","parser","parsers","unshift","shift","Object","root","nodeLists","error","tags","resetTag","property","node","list","push","kind","inlists","NodeUtil_js_1","getProperty","lists","split","concat","join","setProperty","result","list_1_1","inTree","nodes_1_1","i","indexOf","splice","parent"],"sourceRoot":"","sources":["../../../ts/input/tex/ParseOptions.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}