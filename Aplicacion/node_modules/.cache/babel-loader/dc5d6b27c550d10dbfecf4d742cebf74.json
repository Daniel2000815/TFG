{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbstractMathList = void 0;\n\nvar LinkedList_js_1 = require(\"../util/LinkedList.js\");\n\nvar AbstractMathList = function (_super) {\n  __extends(AbstractMathList, _super);\n\n  function AbstractMathList() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AbstractMathList.prototype.isBefore = function (a, b) {\n    return a.start.i < b.start.i || a.start.i === b.start.i && a.start.n < b.start.n;\n  };\n\n  return AbstractMathList;\n}(LinkedList_js_1.LinkedList);\n\nexports.AbstractMathList = AbstractMathList;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AA6BA;EACAA;;EADA;;EAUC;;EAJQC,sCAAP,UAAgBC,CAAhB,EAAsCC,CAAtC,EAA0D;IACxD,OAAQD,CAAC,CAACE,KAAF,CAAQC,CAAR,GAAYF,CAAC,CAACC,KAAF,CAAQC,CAApB,IAA0BH,CAAC,CAACE,KAAF,CAAQC,CAAR,KAAcF,CAAC,CAACC,KAAF,CAAQC,CAAtB,IAA2BH,CAAC,CAACE,KAAF,CAAQE,CAAR,GAAYH,CAAC,CAACC,KAAF,CAAQE,CAAjF;EACD,CAFM;;EAIT;AAAC,CAVD,CACAC,0BADA;;AAAsBC","names":["__extends","AbstractMathList","a","b","start","i","n","LinkedList_js_1","exports"],"sourceRoot":"","sources":["../../ts/core/MathList.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}