{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from\"react\";import{useCallback,useEffect}from\"react\";import ReactFlow,{addEdge,Background,useNodesState,useEdgesState,MarkerType}from\"react-flow-renderer\";import PrimitiveNode from\"./PrimitiveNode.js\";import BooleanNode from\"./BooleanNode.js\";import\"./styles.css\";import{GraphProvider}from\"./GraphContext.js\";var initialNodes=[{id:\"node-0\",type:\"booleanNode\",position:{x:0,y:0},data:{sdf:\"sphere(1.0)\"}},{id:\"node-1\",type:\"primitiveNode\",position:{x:250,y:0},data:{sdf:\"box(1.0, 1.0, 1.0)\"}},{id:\"node-2\",type:\"primitiveNode\",position:{x:250,y:-300},data:{sdf:\"\"}}];var initialEdges=[];var nodeTypes={primitiveNode:PrimitiveNode,booleanNode:BooleanNode};var onInit=function onInit(reactFlowInstance){return console.log(\"flow loaded:\",reactFlowInstance);};export default function Graph(){var _useNodesState=useNodesState([]),_useNodesState2=_slicedToArray(_useNodesState,3),nodes=_useNodesState2[0],setNodes=_useNodesState2[1],onNodesChange=_useNodesState2[2];var _useEdgesState=useEdgesState([]),_useEdgesState2=_slicedToArray(_useEdgesState,3),edges=_useEdgesState2[0],setEdges=_useEdgesState2[1],onEdgesChange=_useEdgesState2[2];var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),id=_React$useState2[0],setId=_React$useState2[1];var updateNodeSdf=function updateNodeSdf(id,newSdf){console.log(\"ACTUALIZADO SDF\");setNodes(function(nds){return nds.map(function(node){if(node.id===id){node.data=_objectSpread(_objectSpread({},node.data),{},{sdf:newSdf});}return node;});});};var connectSdf=function connectSdf(sourceId,targetId,params){var sourceNode=nodes.find(function(n){return n.id===sourceId;});var newSdfs=nodes.find(function(n){return n.id===targetId;}).data.sdfs;var index=parseInt(params.targetHandle,10);console.log(index);newSdfs[index]=sourceNode.data.sdf;console.log(newSdfs);setNodes(function(nds){return nds.map(function(node){if(node.id===targetId){console.log(\"FOUND\");node.data=_objectSpread(_objectSpread({},node.data),{},{sdfs:newSdfs});}onNodesChange([node]);return node;});});};var sharedFunctions={updateNodeSdf:updateNodeSdf,connectSdf:connectSdf};var onConnect=useCallback(function(params){var sourceNode=nodes.find(function(n){return n.id===params.source;});setEdges(function(eds){return addEdge(_objectSpread(_objectSpread({},params),{},{animated:true,markerEnd:{type:MarkerType.Arrow,color:\"#000\"},data:{}}),eds);});},[]);useEffect(function(){console.log(\"NODOS ACTUALIZADOS\");console.log(nodes);},[nodes]);useEffect(function(){console.log(\"NUEVO EDGE:\");console.log(edges);},[edges]);var newPrimitiveNode=function newPrimitiveNode(){setId(id+1);return{id:\"node-\".concat(id),type:\"primitiveNode\",position:{x:0,y:0},data:{sdf:\"sphere(p, 1.0)\",onChangeSdf:updateNodeSdf,onConnectHandle:connectSdf}};};var newBooleanNode=function newBooleanNode(){setId(id+1);return{id:\"node-\".concat(id),type:\"booleanNode\",position:{x:0,y:0},data:{sdfs:[\"0\",\"0\"]}};};var handleKey=function handleKey(e){// SPACE BAR\nif(e.key===\"p\"){var node=newPrimitiveNode();nodes.push(node);onNodesChange([node]);// Para actualizar\n}else if(e.key===\"b\"){var _node=newBooleanNode();nodes.push(_node);onNodesChange([_node]);// Para actualizar\n}};return/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100vh\"},tabIndex:\"0\",onKeyDown:handleKey},/*#__PURE__*/React.createElement(GraphProvider,{value:sharedFunctions},/*#__PURE__*/React.createElement(ReactFlow,{nodes:nodes,edges:edges,onNodesChange:onNodesChange,onEdgesChange:onEdgesChange,onConnect:onConnect// onDisconnect={onDisconnect}\n,nodeTypes:nodeTypes,onInit:onInit,onEdgeClick:function onEdgeClick(ev,edge){return setEdges(edges.filter(function(e){return e.id!=edge.id;}));},snapToGrid:true,fitView:true},/*#__PURE__*/React.createElement(Background,{color:\"#aaa\",gap:10}))));}","map":{"version":3,"names":["React","useCallback","useEffect","ReactFlow","addEdge","Background","useNodesState","useEdgesState","MarkerType","PrimitiveNode","BooleanNode","GraphProvider","initialNodes","id","type","position","x","y","data","sdf","initialEdges","nodeTypes","primitiveNode","booleanNode","onInit","reactFlowInstance","console","log","Graph","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","useState","setId","updateNodeSdf","newSdf","nds","map","node","connectSdf","sourceId","targetId","params","sourceNode","find","n","newSdfs","sdfs","index","parseInt","targetHandle","sharedFunctions","onConnect","source","eds","animated","markerEnd","Arrow","color","newPrimitiveNode","onChangeSdf","onConnectHandle","newBooleanNode","handleKey","e","key","push","height","ev","edge","filter"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/Graph.js"],"sourcesContent":["import React from \"react\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  useNodesState,\r\n  useEdgesState,\r\n  MarkerType,\r\n} from \"react-flow-renderer\";\r\nimport PrimitiveNode from \"./PrimitiveNode.js\";\r\nimport BooleanNode from \"./BooleanNode.js\";\r\n\r\nimport \"./styles.css\";\r\nimport { GraphProvider } from \"./GraphContext.js\";\r\n\r\nconst initialNodes = [\r\n  {\r\n    id: \"node-0\",\r\n    type: \"booleanNode\",\r\n    position: { x: 0, y: 0 },\r\n    data: { sdf: \"sphere(1.0)\" },\r\n  },\r\n  {\r\n    id: \"node-1\",\r\n    type: \"primitiveNode\",\r\n    position: { x: 250, y: 0 },\r\n    data: { sdf: \"box(1.0, 1.0, 1.0)\" },\r\n  },\r\n  {\r\n    id: \"node-2\",\r\n    type: \"primitiveNode\",\r\n    position: { x: 250, y: -300 },\r\n    data: { sdf: \"\" },\r\n  },\r\n];\r\n\r\nconst initialEdges = [];\r\n\r\nconst nodeTypes = { primitiveNode: PrimitiveNode, booleanNode: BooleanNode };\r\n\r\nconst onInit = (reactFlowInstance) =>\r\n  console.log(\"flow loaded:\", reactFlowInstance);\r\n\r\nexport default function Graph() {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [id, setId] = React.useState(0);\r\n\r\n  const updateNodeSdf = (id, newSdf) => {\r\n    console.log(\"ACTUALIZADO SDF\");\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === id) {\r\n          node.data = {\r\n            ...node.data,\r\n            sdf: newSdf,\r\n          };\r\n        }\r\n\r\n        return node;\r\n      })\r\n    );\r\n  };\r\n\r\n  const connectSdf = (sourceId, targetId, params) => {\r\n    const sourceNode = nodes.find(n => n.id===sourceId);\r\n    var newSdfs = nodes.find(n => n.id===targetId).data.sdfs;\r\n    const index = parseInt(params.targetHandle, 10);\r\n    console.log(index);\r\n    newSdfs[index] = sourceNode.data.sdf;\r\n    \r\n    console.log(newSdfs);\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === targetId) {\r\n          console.log(\"FOUND\");\r\n          node.data = {\r\n            ...node.data,\r\n            sdfs: newSdfs,\r\n          };\r\n        }\r\n\r\n        onNodesChange([node]);\r\n        return node;\r\n      })\r\n    );\r\n  };\r\n\r\n  const sharedFunctions = {\r\n    updateNodeSdf,\r\n    connectSdf,\r\n  };\r\n\r\n  const onConnect = useCallback((params) => {\r\n    const sourceNode = nodes.find((n) => n.id === params.source);\r\n\r\n    setEdges((eds) =>\r\n      addEdge(\r\n        {\r\n          ...params,\r\n          animated: true,\r\n          markerEnd: { type: MarkerType.Arrow, color: \"#000\" },\r\n          data: {},\r\n        },\r\n        eds\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"NODOS ACTUALIZADOS\");\r\n    console.log(nodes);\r\n  }, [nodes]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"NUEVO EDGE:\");\r\n    console.log(edges);\r\n  }, [edges]);\r\n\r\n  const newPrimitiveNode = () => {\r\n    setId(id + 1);\r\n    return {\r\n      id: `node-${id}`,\r\n      type: \"primitiveNode\",\r\n      position: { x: 0, y: 0 },\r\n      data: {\r\n        sdf: \"sphere(p, 1.0)\",\r\n        onChangeSdf: updateNodeSdf,\r\n        onConnectHandle: connectSdf,\r\n      },\r\n    };\r\n  };\r\n\r\n  const newBooleanNode = () => {\r\n    setId(id + 1);\r\n    return {\r\n      id: `node-${id}`,\r\n      type: \"booleanNode\",\r\n      position: { x: 0, y: 0 },\r\n      data: {\r\n        sdfs: [\"0\", \"0\"],\r\n      },\r\n    };\r\n  };\r\n\r\n  const handleKey = (e) => {\r\n    // SPACE BAR\r\n    if (e.key === \"p\") {\r\n      const node = newPrimitiveNode();\r\n      nodes.push(node);\r\n\r\n      onNodesChange([node]); // Para actualizar\r\n    } else if (e.key === \"b\") {\r\n      const node = newBooleanNode();\r\n      nodes.push(node);\r\n\r\n      onNodesChange([node]); // Para actualizar\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }} tabIndex=\"0\" onKeyDown={handleKey}>\r\n      <GraphProvider value={sharedFunctions}>\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          // onDisconnect={onDisconnect}\r\n\r\n          nodeTypes={nodeTypes}\r\n          onInit={onInit}\r\n          onEdgeClick={(ev, edge) =>\r\n            setEdges(edges.filter((e) => e.id != edge.id))\r\n          }\r\n          snapToGrid={true}\r\n          fitView\r\n        >\r\n          <Background color=\"#aaa\" gap={10} />\r\n        </ReactFlow>\r\n      </GraphProvider>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}