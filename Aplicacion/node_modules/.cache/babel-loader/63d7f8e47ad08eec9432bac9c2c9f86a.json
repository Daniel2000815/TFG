{"ast":null,"code":"import _objectSpread from \"G:\\\\gitlab\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"G:\\\\gitlab\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"G:\\\\gitlab\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"G:\\\\gitlab\\\\TFG\\\\Aplicacion\\\\src\\\\SurfacePage\\\\SurfaceDialog.js\";\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@mui/material/Grid';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport MathJax from 'react-mathjax';\nimport 'katex/dist/katex.min.css';\nimport useLocalStorage from '../storageHook.js';\nimport Shader from '../CustomComponents/Shader';\nimport CustomInputTable from '../CustomComponents/CustomInputTable';\nexport default function SurfaceDialog(props) {\n  var nerdamer = require('nerdamer');\n\n  require('nerdamer/Calculus');\n\n  var _useState = useState(props.eqData ? props.eqData : null),\n      _useState2 = _slicedToArray(_useState, 2),\n      eqData = _useState2[0],\n      setEqData = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      eqInput = _useState4[0],\n      setEqInput = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nameInput = _useState6[0],\n      setNameInput = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      parametersInput = _useState8[0],\n      setParametersInput = _useState8[1];\n\n  var _useLocalStorage = useLocalStorage('user_implicits', {}),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      storage = _useLocalStorage2[0],\n      setStorage = _useLocalStorage2[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      errorMsg = _useState10[0],\n      setErrorMsg = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      validEq = _useState12[0],\n      setValEq = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      validName = _useState14[0],\n      setValidName = _useState14[1];\n\n  var latexInfo = function latexInfo() {\n    var implicit = eqData && validEq ? nerdamer.convertToLaTeX(eqData.f.toString()) : '';\n    var dx = eqData && validEq ? nerdamer.convertToLaTeX(eqData.dx.toString()) : '';\n    var dy = eqData && validEq ? nerdamer.convertToLaTeX(eqData.dy.toString()) : '';\n    var dz = eqData && validEq ? nerdamer.convertToLaTeX(eqData.dz.toString()) : '';\n    var norm = eqData && validEq ? nerdamer.convertToLaTeX(eqData.norm.toString()) : '';\n    var sdf = eqData && validEq ? nerdamer.convertToLaTeX(eqData.sdf.toString()) : '';\n    return \"\\\\begin{align*} \\n          f(x,y,z) &=  \".concat(implicit, \" \\\\\\\\[10pt]\\n          \\\\nabla f(x,y,z) &= \\\\left( \\n            \").concat(dx, \", \\n            \").concat(dy, \", \\n            \").concat(dz, \"\\n          \\\\right) \\\\\\\\[10pt]\\n          \\\\Vert \\\\nabla f(x,y,z) \\\\Vert &= \").concat(norm, \" \\\\\\\\[10pt]\\n          \\\\text{sdf}(x,y,z) &= \").concat(sdf, \"\\n        \\\\end{align*}\");\n  };\n\n  var traverseTree = function traverseTree(node) {\n    var parametersSymbols = Object.keys(parametersInput).map(function (val, key) {\n      return parametersInput[key].symbol;\n    });\n\n    if (node) {\n      if (node.type === 'VARIABLE_OR_LITERAL') {\n        var isVariable = [].concat(_toConsumableArray(parametersSymbols), ['x', 'y', 'z']).includes(node.value);\n        return isVariable ? node.value : parseFloat(node.value).toFixed(4);\n      }\n\n      if (node.type === 'OPERATOR') {\n        var left = traverseTree(node.left);\n        var right = traverseTree(node.right);\n\n        if (node.value === '^') {\n          return \"pow(\".concat(left, \", \").concat(right, \")\");\n        } else {\n          if (right && left) return \"(\".concat(left, \")\").concat(node.value, \"(\").concat(right, \")\");else if (left) return \"\".concat(node.value, \"(\").concat(left, \")\");else return '????';\n        } // return node.toString();\n\n      }\n\n      if (node.type === 'FUNCTION') {\n        var _left = traverseTree(node.left);\n\n        var _right = traverseTree(node.right);\n\n        if (node.value === '^') {\n          return \"pow(\".concat(_left, \", \").concat(_right, \")\");\n        } else {\n          if (_right) return \"\".concat(node.value, \"(\").concat(_right, \")\");else return '????';\n        }\n      }\n    }\n  };\n\n  var handleNewEquation = function handleNewEquation(newEq) {\n    var f = null;\n    setEqInput(newEq);\n\n    try {\n      f = nerdamer(newEq);\n    } catch (error) {\n      setErrorMsg(error.message);\n      setValEq(false);\n      console.warn('ERROR PARSING EQUATION');\n      console.log(error);\n      return;\n    }\n\n    setErrorMsg('');\n    setValEq(true);\n    var dfdx = nerdamer.diff(f, 'x', 1);\n    var dfdy = nerdamer.diff(f, 'y', 1);\n    var dfdz = nerdamer.diff(f, 'z', 1);\n    var norm = nerdamer(\"sqrt((\".concat(dfdx, \")^2 + (\").concat(dfdy, \")^2 + (\").concat(dfdz, \")^2)\"));\n\n    if (norm.toString() === '0') {\n      setValEq(false);\n      setErrorMsg(\"Norm can't be 0\");\n      return;\n    }\n\n    var sdf = nerdamer(\"(\".concat(f, \")/(\").concat(norm, \")\"));\n    var x = nerdamer.tree(sdf.toString());\n    setEqData({\n      f: f,\n      dx: dfdx,\n      dy: dfdy,\n      dz: dfdz,\n      norm: norm,\n      sdf: sdf,\n      parsedSdf: \"return \".concat(raverseTree(x))\n    });\n  };\n\n  var handleSave = function handleSave() {\n    if (nameInput in storage) {\n      return;\n    } else {\n      var newData = _objectSpread({}, storage);\n\n      newData[nameInput.toLowerCase()] = {\n        id: nameInput.toLowerCase(),\n        name: nameInput,\n        implicit: eqData.f.toString(),\n        sdf: eqData.sdf.toString(),\n        parsedSdf: eqData.parsedSdf,\n        fHeader: \"\".concat(nameInput.toLowerCase(), \"(vec3 p \").concat(parametersInput.length > 0 ? ',' : '').concat(parametersInput.map(function (p) {\n          return \"float \".concat(p.symbol);\n        }).join(','), \")\"),\n        parameters: parametersInput\n      };\n      setStorage(newData);\n      props.handleClose();\n    }\n  };\n\n  useEffect(function () {\n    if (props.savedData) {\n      setNameInput(props.savedData.name);\n      setEqInput(props.savedData.implicit);\n      setParametersInput(props.savedData.parameters);\n      handleNewEquation(props.savedData.implicit);\n    } else {\n      setNameInput('');\n      setEqInput('');\n      setParametersInput([]);\n      setEqData(null);\n    }\n  }, [props.savedData]);\n  useEffect(function () {\n    setValidName(!(nameInput in storage));\n  }, [nameInput]);\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: props.open,\n    onClose: props.handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, \"New Surface\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: nameInput,\n    error: !validName || nameInput === '',\n    helperText: nameInput === '' ? '' : validName ? '' : 'Name already in use',\n    onChange: function onChange(e) {\n      return setNameInput(e.target.value);\n    },\n    id: \"name\",\n    label: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    sx: {\n      width: '100%'\n    },\n    value: eqInput,\n    defaultValue: \"\",\n    label: \"Implicit\",\n    onChange: function onChange(e) {\n      return handleNewEquation(e.target.value);\n    },\n    id: \"Implicit\",\n    error: !validEq || eqInput === '',\n    helperText: errorMsg,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 19\n        }\n      }, \" = 0\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MathJax.Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MathJax.Node, {\n    formula: latexInfo(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Shader, {\n    sdf: 'sphere(p, 1.0)',\n    uniforms: {\n      color: {\n        type: '3fv',\n        value: [1.0, 1.0, 0.0]\n      }\n    },\n    style: {\n      margin: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomInputTable, {\n    rows: parametersInput,\n    handleNewParameters: function handleNewParameters(newParams) {\n      return setParametersInput(newParams);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: props.handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSave,\n    disabled: !validName || !validEq || nameInput === '' || eqInput === '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, \"Save\")));\n}","map":{"version":3,"names":["React","useState","useEffect","Grid","InputAdornment","TextField","Dialog","DialogActions","DialogContent","DialogTitle","Button","MathJax","useLocalStorage","Shader","CustomInputTable","SurfaceDialog","props","nerdamer","require","eqData","setEqData","eqInput","setEqInput","nameInput","setNameInput","parametersInput","setParametersInput","storage","setStorage","errorMsg","setErrorMsg","validEq","setValEq","validName","setValidName","latexInfo","implicit","convertToLaTeX","f","toString","dx","dy","dz","norm","sdf","traverseTree","node","parametersSymbols","Object","keys","map","val","key","symbol","type","isVariable","includes","value","parseFloat","toFixed","left","right","handleNewEquation","newEq","error","message","console","warn","log","dfdx","diff","dfdy","dfdz","x","tree","parsedSdf","raverseTree","handleSave","newData","toLowerCase","id","name","fHeader","length","p","join","parameters","handleClose","savedData","open","e","target","width","endAdornment","color","margin","newParams"],"sources":["G:/gitlab/TFG/Aplicacion/src/SurfacePage/SurfaceDialog.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Button from '@mui/material/Button';\r\nimport MathJax from 'react-mathjax';\r\nimport 'katex/dist/katex.min.css';\r\nimport useLocalStorage from '../storageHook.js';\r\nimport Shader from '../CustomComponents/Shader';\r\nimport CustomInputTable from '../CustomComponents/CustomInputTable';\r\n\r\nexport default function SurfaceDialog(props) {\r\n  var nerdamer = require('nerdamer');\r\n  require('nerdamer/Calculus');\r\n\r\n  const [eqData, setEqData] = useState(props.eqData ? props.eqData : null);\r\n  const [eqInput, setEqInput] = useState('');\r\n  const [nameInput, setNameInput] = useState('');\r\n  const [parametersInput, setParametersInput] = useState([]);\r\n  const [storage, setStorage] = useLocalStorage('user_implicits', {});\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const [validEq, setValEq] = useState(false);\r\n  const [validName, setValidName] = useState(false);\r\n\r\n  const latexInfo = () => {\r\n    const implicit =\r\n      eqData && validEq ? nerdamer.convertToLaTeX(eqData.f.toString()) : '';\r\n    const dx =\r\n      eqData && validEq ? nerdamer.convertToLaTeX(eqData.dx.toString()) : '';\r\n    const dy =\r\n      eqData && validEq ? nerdamer.convertToLaTeX(eqData.dy.toString()) : '';\r\n    const dz =\r\n      eqData && validEq ? nerdamer.convertToLaTeX(eqData.dz.toString()) : '';\r\n    const norm =\r\n      eqData && validEq ? nerdamer.convertToLaTeX(eqData.norm.toString()) : '';\r\n    const sdf =\r\n      eqData && validEq ? nerdamer.convertToLaTeX(eqData.sdf.toString()) : '';\r\n\r\n    return `\\\\begin{align*} \r\n          f(x,y,z) &=  ${implicit} \\\\\\\\[10pt]\r\n          \\\\nabla f(x,y,z) &= \\\\left( \r\n            ${dx}, \r\n            ${dy}, \r\n            ${dz}\r\n          \\\\right) \\\\\\\\[10pt]\r\n          \\\\Vert \\\\nabla f(x,y,z) \\\\Vert &= ${norm} \\\\\\\\[10pt]\r\n          \\\\text{sdf}(x,y,z) &= ${sdf}\r\n        \\\\end{align*}`;\r\n  };\r\n\r\n  const traverseTree = (node) => {\r\n    const parametersSymbols = Object.keys(parametersInput).map((val, key) => parametersInput[key].symbol);\r\n\r\n    if (node) {\r\n      if (node.type === 'VARIABLE_OR_LITERAL') {\r\n        const isVariable = [...parametersSymbols, 'x', 'y', 'z'].includes(node.value);\r\n\r\n        return isVariable ? node.value : parseFloat(node.value).toFixed(4);\r\n      }\r\n      if (node.type === 'OPERATOR') {\r\n        let left = traverseTree(node.left);\r\n        let right = traverseTree(node.right);\r\n\r\n        if (node.value === '^') {\r\n          return `pow(${left}, ${right})`;\r\n        } else {\r\n          if (right && left) return `(${left})${node.value}(${right})`;\r\n          else if (left) return `${node.value}(${left})`;\r\n          else return '????';\r\n        }\r\n\r\n        // return node.toString();\r\n      }\r\n      if (node.type === 'FUNCTION') {\r\n        let left = traverseTree(node.left);\r\n        let right = traverseTree(node.right);\r\n\r\n        if (node.value === '^') {\r\n          return `pow(${left}, ${right})`;\r\n        } else {\r\n          if (right) return `${node.value}(${right})`;\r\n          else return '????';\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleNewEquation = (newEq) => {\r\n    let f = null;\r\n    setEqInput(newEq);\r\n\r\n    try {\r\n      f = nerdamer(newEq);\r\n    } catch (error) {\r\n      setErrorMsg(error.message);\r\n      setValEq(false);\r\n\r\n      console.warn('ERROR PARSING EQUATION');\r\n      console.log(error);\r\n\r\n      return;\r\n    }\r\n\r\n    setErrorMsg('');\r\n    setValEq(true);\r\n\r\n    let dfdx = nerdamer.diff(f, 'x', 1);\r\n    let dfdy = nerdamer.diff(f, 'y', 1);\r\n    let dfdz = nerdamer.diff(f, 'z', 1);\r\n    let norm = nerdamer(`sqrt((${dfdx})^2 + (${dfdy})^2 + (${dfdz})^2)`);\r\n\r\n    if (norm.toString() === '0') {\r\n      setValEq(false);\r\n      setErrorMsg(\"Norm can't be 0\");\r\n      return;\r\n    }\r\n\r\n    let sdf = nerdamer(`(${f})/(${norm})`);\r\n    var x = nerdamer.tree(sdf.toString());\r\n\r\n    setEqData({\r\n      f: f,\r\n      dx: dfdx,\r\n      dy: dfdy,\r\n      dz: dfdz,\r\n      norm: norm,\r\n      sdf: sdf,\r\n      parsedSdf: `return ${raverseTree(x)}`,\r\n    });\r\n\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (nameInput in storage) {\r\n      return;\r\n    } else {\r\n      let newData = { ...storage };\r\n      newData[nameInput.toLowerCase()] = {\r\n        id: nameInput.toLowerCase(),\r\n        name: nameInput,\r\n        implicit: eqData.f.toString(),\r\n        sdf: eqData.sdf.toString(),\r\n        parsedSdf: eqData.parsedSdf,\r\n        fHeader: `${nameInput.toLowerCase()}(vec3 p ${parametersInput.length > 0 ? ',' : ''}${(parametersInput.map(p => `float ${p.symbol}`)).join(',')})`,\r\n        parameters: parametersInput,\r\n      };\r\n\r\n\r\n      setStorage(newData);\r\n      props.handleClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    if (props.savedData) {\r\n      setNameInput(props.savedData.name);\r\n      setEqInput(props.savedData.implicit);\r\n      setParametersInput(props.savedData.parameters);\r\n      handleNewEquation(props.savedData.implicit);\r\n    } else {\r\n      setNameInput('');\r\n      setEqInput('');\r\n      setParametersInput([]);\r\n      setEqData(null);\r\n    }\r\n  }, [props.savedData]);\r\n\r\n  useEffect(() => {\r\n    setValidName(!(nameInput in storage));\r\n  }, [nameInput]);\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={props.handleClose}>\r\n      <DialogTitle>New Surface</DialogTitle>\r\n\r\n      <DialogContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              value={nameInput}\r\n              error={!validName || nameInput === ''}\r\n              helperText={\r\n                nameInput === '' ? '' : validName ? '' : 'Name already in use'\r\n              }\r\n              onChange={(e) => setNameInput(e.target.value)}\r\n              id=\"name\"\r\n              label=\"Name\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              sx={{ width: '100%' }}\r\n              value={eqInput}\r\n              defaultValue=\"\"\r\n              label=\"Implicit\"\r\n              onChange={(e) => handleNewEquation(e.target.value)}\r\n              id=\"Implicit\"\r\n              error={!validEq || eqInput === ''}\r\n              helperText={errorMsg}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\"> = 0</InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <MathJax.Provider>\r\n              <MathJax.Node formula={latexInfo()} />\r\n            </MathJax.Provider>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Shader\r\n              sdf={'sphere(p, 1.0)'}\r\n              uniforms={{ color: { type: '3fv', value: [1.0, 1.0, 0.0] } }}\r\n              style={{ margin: '10px' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <CustomInputTable\r\n              rows={parametersInput}\r\n              handleNewParameters={(newParams) => setParametersInput(newParams)}\r\n            />\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose}>Cancel</Button>\r\n        <Button\r\n          onClick={handleSave}\r\n          disabled={\r\n            !validName || !validEq || nameInput === '' || eqInput === ''\r\n          }\r\n        >\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}