{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.divide = void 0;\n\nvar Errors_1 = require(\"../../../Core/Errors\");\n\nvar Matrix_1 = require(\"../../../Types/Matrix\");\n\nvar index_1 = require(\"../index\");\n\nvar Utils_1 = require(\"../../../Core/Utils\");\n/**\n * Gets called when the parser finds the / operator. See this.add\n * @param {Symbol} a\n * @param {Symbol} b\n * @returns {Symbol}\n */\n\n\nfunction divide(a, b) {\n  var aIsSymbol = (0, Utils_1.isSymbol)(a),\n      bIsSymbol = (0, Utils_1.isSymbol)(b);\n\n  if (aIsSymbol && bIsSymbol) {\n    //forward to Unit division\n    if (a.unit || b.unit) {\n      return deps.Unit.divide(a, b);\n    }\n\n    var result;\n    if (b.equals(0)) throw new Errors_1.DivisionByZero('Division by zero not allowed!');\n\n    if (a.isConstant() && b.isConstant()) {\n      result = a.clone();\n      result.multiplier = result.multiplier.divide(b.multiplier);\n    } else {\n      b.invert();\n      result = (0, index_1.multiply)(a, b);\n    }\n\n    return result;\n  } else {\n    //******* Vectors & Matrices *********//\n    var isVectorA = (0, Utils_1.isVector)(a),\n        isVectorB = (0, Utils_1.isVector)(b);\n\n    if (aIsSymbol && isVectorB) {\n      b = b.map(function (x) {\n        return divide(a.clone(), x);\n      });\n    } else if (isVectorA && bIsSymbol) {\n      b = a.map(function (x) {\n        return divide(x, b.clone());\n      });\n    } else if (isVectorA && isVectorB) {\n      if (a.dimensions() === b.dimensions()) {\n        b = b.map(function (x, i) {\n          return divide(a.elements[--i], x);\n        });\n      } else (0, Errors_1.err)('Cannot divide vectors. Dimensions do not match!');\n    } else {\n      var isMatrixA = (0, Utils_1.isMatrix)(a),\n          isMatrixB = (0, Utils_1.isMatrix)(b);\n\n      if (isMatrixA && bIsSymbol) {\n        var M = new Matrix_1.Matrix();\n        a.eachElement(function (x, i, j) {\n          M.set(i, j, divide(x, b.clone()));\n        });\n        b = M;\n      } else if (aIsSymbol && isMatrixB) {\n        var M = new Matrix_1.Matrix();\n        b.eachElement(function (x, i, j) {\n          M.set(i, j, divide(a.clone(), x));\n        });\n        b = M;\n      } else if (isMatrixA && isMatrixB) {\n        var M = new Matrix_1.Matrix();\n\n        if (a.rows() === b.rows() && a.cols() === b.cols()) {\n          a.eachElement(function (x, i, j) {\n            M.set(i, j, divide(x, b.elements[i][j]));\n          });\n          b = M;\n        } else {\n          (0, Errors_1.err)('Dimensions do not match!');\n        }\n      } else if (isMatrixA && isVectorB) {\n        if (a.cols() === b.dimensions()) {\n          var M = new Matrix_1.Matrix();\n          a.eachElement(function (x, i, j) {\n            M.set(i, j, divide(x, b.elements[i].clone()));\n          });\n          b = M;\n        } else {\n          (0, Errors_1.err)('Unable to divide matrix by vector.');\n        }\n      }\n    }\n\n    return b;\n  }\n}\n\nexports.divide = divide;","map":{"version":3,"mappings":"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","names":["divide","a","b","aIsSymbol","bIsSymbol","unit","deps","Unit","result","equals","Errors_1","isConstant","clone","multiplier","invert","isVectorA","isVectorB","map","x","dimensions","i","elements","isMatrixA","isMatrixB","M","Matrix_1","eachElement","j","set","rows","cols","exports"],"sourceRoot":"","sources":["../../../../src/Functions/Core/operations/divide.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}