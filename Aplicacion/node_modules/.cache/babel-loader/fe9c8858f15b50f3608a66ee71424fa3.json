{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGTextNode = void 0;\n\nvar MmlNode_js_1 = require(\"../../../core/MmlTree/MmlNode.js\");\n\nvar Wrapper_js_1 = require(\"../Wrapper.js\");\n\nvar TextNode_js_1 = require(\"../../common/Wrappers/TextNode.js\");\n\nvar SVGTextNode = function (_super) {\n  __extends(SVGTextNode, _super);\n\n  function SVGTextNode() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SVGTextNode.prototype.toSVG = function (parent) {\n    var e_1, _a;\n\n    var text = this.node.getText();\n    var variant = this.parent.variant;\n    if (text.length === 0) return;\n\n    if (variant === '-explicitFont') {\n      this.element = this.adaptor.append(parent, this.jax.unknownText(text, variant));\n    } else {\n      var chars = this.remappedText(text, variant);\n\n      if (this.parent.childNodes.length > 1) {\n        parent = this.element = this.adaptor.append(parent, this.svg('g', {\n          'data-mml-node': 'text'\n        }));\n      }\n\n      var x = 0;\n\n      try {\n        for (var chars_1 = __values(chars), chars_1_1 = chars_1.next(); !chars_1_1.done; chars_1_1 = chars_1.next()) {\n          var n = chars_1_1.value;\n          x += this.placeChar(n, x, 0, parent, variant);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (chars_1_1 && !chars_1_1.done && (_a = chars_1.return)) _a.call(chars_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n\n  SVGTextNode.kind = MmlNode_js_1.TextNode.prototype.kind;\n  SVGTextNode.styles = {\n    'mjx-container[jax=\"SVG\"] path[data-c], mjx-container[jax=\"SVG\"] use[data-c]': {\n      'stroke-width': 3\n    }\n  };\n  return SVGTextNode;\n}((0, TextNode_js_1.CommonTextNodeMixin)(Wrapper_js_1.SVGWrapper));\n\nexports.SVGTextNode = SVGTextNode;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AACA;;AACA;;AAYA;EACAA;;EADA;;EAsCC;;EAlBQC,8BAAP,UAAaC,MAAb,EAAsB;;;IACpB,IAAMC,IAAI,GAAI,KAAKC,IAAL,CAAuBC,OAAvB,EAAd;IACA,IAAMC,OAAO,GAAG,KAAKJ,MAAL,CAAYI,OAA5B;IACA,IAAIH,IAAI,CAACI,MAAL,KAAgB,CAApB,EAAuB;;IACvB,IAAID,OAAO,KAAK,eAAhB,EAAiC;MAC/B,KAAKE,OAAL,GAAe,KAAKC,OAAL,CAAaC,MAAb,CAAoBR,MAApB,EAA4B,KAAKS,GAAL,CAASC,WAAT,CAAqBT,IAArB,EAA2BG,OAA3B,CAA5B,CAAf;IACD,CAFD,MAEO;MACL,IAAMO,KAAK,GAAG,KAAKC,YAAL,CAAkBX,IAAlB,EAAwBG,OAAxB,CAAd;;MACA,IAAI,KAAKJ,MAAL,CAAYa,UAAZ,CAAuBR,MAAvB,GAAgC,CAApC,EAAuC;QACrCL,MAAM,GAAG,KAAKM,OAAL,GAAe,KAAKC,OAAL,CAAaC,MAAb,CAAoBR,MAApB,EAA4B,KAAKc,GAAL,CAAS,GAAT,EAAc;UAAC,iBAAiB;QAAlB,CAAd,CAA5B,CAAxB;MACD;;MACD,IAAIC,CAAC,GAAG,CAAR;;;QACA,KAAgB,+BAAKC,0BAArB,EAAqB,eAArB,EAAqBA,0BAArB,EAAuB;UAAlB,IAAMC,CAAC,kBAAP;UACHF,CAAC,IAAI,KAAKG,SAAL,CAAeD,CAAf,EAAkBF,CAAlB,EAAqB,CAArB,EAAwBf,MAAxB,EAAgCI,OAAhC,CAAL;QACD;;;;;;;;;;;;IACF;EACF,CAhBM;;EAdOL,mBAAOoB,sBAASC,SAAT,CAAmBC,IAA1B;EAKAtB,qBAAoB;IAChC,+EAA+E;MAC7E,gBAAgB;IAD6D;EAD/C,CAApB;EA2BhB;AAAC,CAtCD,CACA,uCAAmDuB,uBAAnD,CADA;;AAAaC","names":["__extends","SVGTextNode","parent","text","node","getText","variant","length","element","adaptor","append","jax","unknownText","chars","remappedText","childNodes","svg","x","chars_1_1","n","placeChar","MmlNode_js_1","prototype","kind","Wrapper_js_1","exports"],"sourceRoot":"","sources":["../../../../ts/output/svg/Wrappers/TextNode.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}