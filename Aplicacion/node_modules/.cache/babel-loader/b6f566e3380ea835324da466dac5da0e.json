{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pfactor = void 0;\nvar Symbol_1 = require(\"../../../Types/Symbol\");\nvar Utils_1 = require(\"../../../Core/Utils\");\nvar Math2_1 = require(\"../../Math2\");\nvar Frac_1 = require(\"../../../Types/Frac\");\nvar index_1 = require(\"../index\");\nvar Parser_1 = require(\"../../../Parser/Parser\");\nfunction pfactor(symbol) {\n  //Fix issue #458 | nerdamer(\"sqrt(1-(3.3333333550520926e-7)^2)\").evaluate().text()\n  //More Big Number issues >:(\n  if (symbol.greaterThan(9.999999999998891e+41) || symbol.equals(-1)) return symbol;\n  //Fix issue #298\n  if (symbol.equals(Math.PI)) return new Symbol_1.Symbol(Math.PI);\n  //evaluate the symbol to merge constants\n  symbol = (0, Parser_1.evaluate)(symbol.clone());\n  if (symbol.isConstant()) {\n    var retval = new Symbol_1.Symbol(1);\n    var m = symbol.toString();\n    if ((0, Utils_1.isInt)(m)) {\n      var factors = Math2_1.Math2.ifactor(m);\n      for (var factor in factors) {\n        var p = factors[factor];\n        retval = (0, index_1.multiply)(retval, (0, Symbol_1.symfunction)('parens', [new Symbol_1.Symbol(factor).setPower(new Frac_1.Frac(p))]));\n      }\n    } else {\n      var n = pfactor(new Symbol_1.Symbol(symbol.multiplier.num));\n      var d = pfactor(new Symbol_1.Symbol(symbol.multiplier.den));\n      retval = (0, index_1.multiply)((0, Symbol_1.symfunction)('parens', [n]), (0, Symbol_1.symfunction)('parens', [d]).invert());\n    }\n  } else retval = (0, Symbol_1.symfunction)('pfactor', arguments);\n  return retval;\n}\nexports.pfactor = pfactor;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAgBA,OAAO,CAACC,MAAM;EAC1B;EACA;EACA,IAAIA,MAAM,CAACC,WAAW,CAAC,qBAAqB,CAAC,IAAID,MAAM,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC,EAC9D,OAAOF,MAAM;EACjB;EACA,IAAIA,MAAM,CAACE,MAAM,CAACC,IAAI,CAACC,EAAE,CAAC,EACtB,OAAO,IAAIC,eAAM,CAACF,IAAI,CAACC,EAAE,CAAC;EAC9B;EACAJ,MAAM,GAAG,qBAAQ,EAACA,MAAM,CAACM,KAAK,EAAE,CAAC;EAEjC,IAAIN,MAAM,CAACO,UAAU,EAAE,EAAE;IACrB,IAAIC,MAAM,GAAG,IAAIH,eAAM,CAAC,CAAC,CAAC;IAC1B,IAAII,CAAC,GAAGT,MAAM,CAACU,QAAQ,EAAE;IACzB,IAAI,iBAAK,EAACD,CAAC,CAAC,EAAE;MACV,IAAIE,OAAO,GAAGC,aAAK,CAACC,OAAO,CAACJ,CAAC,CAAC;MAC9B,KAAK,IAAIK,MAAM,IAAIH,OAAO,EAAE;QACxB,IAAII,CAAC,GAAGJ,OAAO,CAACG,MAAM,CAAC;QACvBN,MAAM,GAAG,oBAAQ,EAACA,MAAM,EAAE,wBAAW,EAAC,QAAQ,EAAE,CAAC,IAAIH,eAAM,CAACS,MAAM,CAAC,CAACE,QAAQ,CAAC,IAAIC,WAAI,CAACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;KAEnG,MACI;MACD,IAAIG,CAAC,GAAGnB,OAAO,CAAC,IAAIM,eAAM,CAACL,MAAM,CAACmB,UAAU,CAACC,GAAG,CAAC,CAAC;MAClD,IAAIC,CAAC,GAAGtB,OAAO,CAAC,IAAIM,eAAM,CAACL,MAAM,CAACmB,UAAU,CAACG,GAAG,CAAC,CAAC;MAClDd,MAAM,GAAG,oBAAQ,EAAC,wBAAW,EAAC,QAAQ,EAAE,CAACU,CAAC,CAAC,CAAC,EAAE,wBAAW,EAAC,QAAQ,EAAE,CAACG,CAAC,CAAC,CAAC,CAACE,MAAM,EAAE,CAAC;;GAEzF,MAEGf,MAAM,GAAG,wBAAW,EAAC,SAAS,EAAEgB,SAAS,CAAC;EAC9C,OAAOhB,MAAM;AACjB;AA9BAiB","names":["pfactor","symbol","greaterThan","equals","Math","PI","Symbol_1","clone","isConstant","retval","m","toString","factors","Math2_1","ifactor","factor","p","setPower","Frac_1","n","multiplier","num","d","den","invert","arguments","exports"],"sourceRoot":"","sources":["../../../../src/Functions/Core/math/pfactor.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}