{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * Token represents a lexical token. It has a type and a value.\n * @param type (String) Token type. A list of types is found in \"utils/tokens.js\".\n * @param value Value of the token.\n */\n\n\nvar Token = function () {\n  function Token(type) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\n    _classCallCheck(this, Token);\n\n    this.type = type;\n    this.value = value;\n    this.name = null; // Used in function and command tokens to retain the fn name when minified\n  }\n\n  _createClass(Token, [{\n    key: \"equals\",\n    value: function equals(token) {\n      return this.type === token.type && this.value === token.value;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (TRIVIAL_TOKENS.indexOf(this.type) >= 0) {\n        return this.type;\n      }\n\n      var val = typeof this.value === \"function\" ? this.name : this.value;\n      return this.type + \"[\" + val + \"]\";\n    }\n  }]);\n\n  return Token;\n}();\n\nToken.TYPE_LPAREN = \"LPAREN\";\nToken.TYPE_RPAREN = \"RPAREN\";\nToken.TYPE_PLUS = \"PLUS\";\nToken.TYPE_MINUS = \"MINUS\";\nToken.TYPE_TIMES = \"TIMES\";\nToken.TYPE_DIVIDE = \"DIVIDE\";\nToken.TYPE_COMMAND = \"COMMAND\";\nToken.TYPE_SYMBOL = \"SYMBOL\";\nToken.TYPE_WHITESPACE = \"WHITESPACE\";\nToken.TYPE_ABS = \"ABSOLUTEVAL\";\nToken.TYPE_BANG = \"BANG\";\nToken.TYPE_COMMA = \"COMMA\";\nToken.TYPE_POWER = \"POWER\";\nToken.TYPE_NUMBER = \"NUMBER\";\nToken.patterns = new Map([[Token.TYPE_LPAREN, /(\\(|\\[|{|\\\\left\\(|\\\\left\\[)/], // Match (, [, {, \\left(, \\left[\n[Token.TYPE_RPAREN, /(\\)|]|}|\\\\right\\)|\\\\right])/], // Match ), ], }, \\right), \\right]\n[Token.TYPE_PLUS, /\\+/], [Token.TYPE_MINUS, /-/], [Token.TYPE_TIMES, /\\*/], [Token.TYPE_DIVIDE, /\\//], [Token.TYPE_COMMAND, /\\\\[A-Za-z]+/], [Token.TYPE_SYMBOL, /[A-Za-z_][A-Za-z_0-9]*/], [Token.TYPE_WHITESPACE, /\\s+/], // Whitespace\n[Token.TYPE_ABS, /\\|/], [Token.TYPE_BANG, /!/], [Token.TYPE_COMMA, /,/], [Token.TYPE_POWER, /\\^/], [Token.TYPE_NUMBER, /\\d+(\\.\\d+)?/]]);\nexports.default = Token;\n;\n/**\n * Trivial tokens are those that can only have a single value, so printing their value is unnecessary.\n */\n\nvar TRIVIAL_TOKENS = [\"TPLUS\", \"TMINUS\", \"TTIMES\", \"TDIVIDE\", \"TWS\", \"TABS\", \"TBANG\", \"TCOMMA\", \"TPOWER\"];","map":{"version":3,"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","Token","type","arguments","undefined","name","equals","token","toString","TRIVIAL_TOKENS","indexOf","val","TYPE_LPAREN","TYPE_RPAREN","TYPE_PLUS","TYPE_MINUS","TYPE_TIMES","TYPE_DIVIDE","TYPE_COMMAND","TYPE_SYMBOL","TYPE_WHITESPACE","TYPE_ABS","TYPE_BANG","TYPE_COMMA","TYPE_POWER","TYPE_NUMBER","patterns","Map","default"],"sources":["C:/Users/daniz/TFG/Aplicacion/node_modules/evaluatex/dist/Token.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Token represents a lexical token. It has a type and a value.\n * @param type (String) Token type. A list of types is found in \"utils/tokens.js\".\n * @param value Value of the token.\n */\nvar Token = function () {\n    function Token(type) {\n        var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\n        _classCallCheck(this, Token);\n\n        this.type = type;\n        this.value = value;\n        this.name = null; // Used in function and command tokens to retain the fn name when minified\n    }\n\n    _createClass(Token, [{\n        key: \"equals\",\n        value: function equals(token) {\n            return this.type === token.type && this.value === token.value;\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            if (TRIVIAL_TOKENS.indexOf(this.type) >= 0) {\n                return this.type;\n            }\n\n            var val = typeof this.value === \"function\" ? this.name : this.value;\n\n            return this.type + \"[\" + val + \"]\";\n        }\n    }]);\n\n    return Token;\n}();\n\nToken.TYPE_LPAREN = \"LPAREN\";\nToken.TYPE_RPAREN = \"RPAREN\";\nToken.TYPE_PLUS = \"PLUS\";\nToken.TYPE_MINUS = \"MINUS\";\nToken.TYPE_TIMES = \"TIMES\";\nToken.TYPE_DIVIDE = \"DIVIDE\";\nToken.TYPE_COMMAND = \"COMMAND\";\nToken.TYPE_SYMBOL = \"SYMBOL\";\nToken.TYPE_WHITESPACE = \"WHITESPACE\";\nToken.TYPE_ABS = \"ABSOLUTEVAL\";\nToken.TYPE_BANG = \"BANG\";\nToken.TYPE_COMMA = \"COMMA\";\nToken.TYPE_POWER = \"POWER\";\nToken.TYPE_NUMBER = \"NUMBER\";\nToken.patterns = new Map([[Token.TYPE_LPAREN, /(\\(|\\[|{|\\\\left\\(|\\\\left\\[)/], // Match (, [, {, \\left(, \\left[\n[Token.TYPE_RPAREN, /(\\)|]|}|\\\\right\\)|\\\\right])/], // Match ), ], }, \\right), \\right]\n[Token.TYPE_PLUS, /\\+/], [Token.TYPE_MINUS, /-/], [Token.TYPE_TIMES, /\\*/], [Token.TYPE_DIVIDE, /\\//], [Token.TYPE_COMMAND, /\\\\[A-Za-z]+/], [Token.TYPE_SYMBOL, /[A-Za-z_][A-Za-z_0-9]*/], [Token.TYPE_WHITESPACE, /\\s+/], // Whitespace\n[Token.TYPE_ABS, /\\|/], [Token.TYPE_BANG, /!/], [Token.TYPE_COMMA, /,/], [Token.TYPE_POWER, /\\^/], [Token.TYPE_NUMBER, /\\d+(\\.\\d+)?/]]);\nexports.default = Token;\n;\n\n/**\n * Trivial tokens are those that can only have a single value, so printing their value is unnecessary.\n */\nvar TRIVIAL_TOKENS = [\"TPLUS\", \"TMINUS\", \"TTIMES\", \"TDIVIDE\", \"TWS\", \"TABS\", \"TBANG\", \"TCOMMA\", \"TPOWER\"];"],"mappings":"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"},"metadata":{},"sourceType":"script"}