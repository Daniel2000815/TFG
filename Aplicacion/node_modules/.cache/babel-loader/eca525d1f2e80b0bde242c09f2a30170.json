{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.evaluate = exports.parse = exports.ParseDeps = exports.Parser = void 0;\n\nvar Collection_1 = require(\"./Collection\");\n\nvar Slice_1 = require(\"./Slice\");\n\nvar Token_1 = require(\"./Token\");\n\nvar Trig_1 = require(\"../Functions/Trig\");\n\nvar Trig_hyperbolic_1 = require(\"../Functions/Trig.hyperbolic\");\n\nvar Symbol_1 = require(\"../Types/Symbol\");\n\nvar Settings_1 = require(\"../Settings\");\n\nvar RPN_1 = require(\"./RPN\");\n\nvar Utils_1 = require(\"../Core/Utils\");\n\nvar Groups_1 = require(\"../Types/Groups\");\n\nvar LaTeX_1 = require(\"../LaTeX/LaTeX\");\n\nvar Vector_1 = require(\"../Types/Vector\");\n\nvar Errors_1 = require(\"../Core/Errors\");\n\nvar Core_1 = require(\"../Functions/Core\"); //Uses modified Shunting-yard algorithm. http://en.wikipedia.org/wiki/Shunting-yard_algorithm\n\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(tokenizer, operators, functionProvider, variables, peekers, units) {\n    var _this = this;\n\n    _classCallCheck(this, Parser);\n\n    // exports for back compatibility\n    this.classes = {\n      Collection: Collection_1.Collection,\n      Slice: Slice_1.Slice,\n      Token: Token_1.Token\n    };\n    this.trig = Trig_1.Trig;\n    this.trigh = Trig_hyperbolic_1.TrigHyperbolic;\n    this.error = Errors_1.err;\n    this.symfunction = Symbol_1.symfunction;\n    this.bin = {}; // private\n\n    this.remove_redundant_powers = function (arr) {\n      // The filtered array\n      var narr = [];\n\n      while (arr.length) {\n        // Remove the element from the front\n        var e = arr.shift();\n        var next = arr[0];\n        var next_is_array = (0, Utils_1.isArray)(next);\n        var next_is_minus = next === '-'; // Remove redundant plusses\n\n        if (e === '^') {\n          if (next === '+') {\n            arr.shift();\n          } else if (next_is_array && next[0] === '+') {\n            next.shift();\n          } // Remove redundant parentheses\n\n\n          if (next_is_array && next.length === 1) {\n            arr.unshift(arr.shift()[0]);\n          }\n        } // Check if it's a negative power\n\n\n        if (e === '^' && (next_is_array && next[0] === '-' || next_is_minus)) {\n          // If so:\n          // - Remove it from the new array, place a one and a division sign in that array and put it back\n          var last = narr.pop(); // Check if it's something multiplied by\n\n          var before = narr[narr.length - 1];\n          var before_last = '1';\n\n          if (before === '*') {\n            narr.pop(); // For simplicity we just pop it.\n\n            before_last = narr.pop();\n          } // Implied multiplication\n          else if ((0, Utils_1.isArray)(before)) {\n            before_last = narr.pop();\n          }\n\n          narr.push(before_last, '/', last, e); // Remove the negative sign from the power\n\n          if (next_is_array) {\n            next.shift();\n          } else {\n            arr.shift();\n          } // Remove it from the array so we don't end up with redundant parentheses if we can\n\n\n          if (next_is_array && next.length === 1) {\n            narr.push(arr.shift()[0]);\n          }\n        } else {\n          narr.push(e);\n        }\n      }\n\n      return narr;\n    };\n\n    this.tokenizer = tokenizer;\n    this.operators = operators;\n    this.functionProvider = functionProvider;\n    this.variables = variables;\n    this.peekers = peekers;\n    this.units = units;\n    operators.injectOperatorsDeps({\n      registerOperator: function registerOperator(name, operation) {\n        return _this.setAction(name, operation);\n      }\n    });\n  }\n\n  _createClass(Parser, [{\n    key: \"getAction\",\n    value: function getAction(name) {\n      // return this.actions[name];\n      return this[name];\n    }\n  }, {\n    key: \"setAction\",\n    value: function setAction(name, func) {\n      // this.actions[name] = func;\n      this[name] = func;\n    }\n  }, {\n    key: \"setOperator\",\n    value: function setOperator(operator) {\n      var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      var shift = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n      this.operators.setOperator(operator, action, shift);\n    } //delay setting of constants until Settings is ready\n\n  }, {\n    key: \"initConstants\",\n    value: function initConstants() {\n      this.variables.setConstant('E', new Symbol_1.Symbol(Settings_1.Settings.E));\n      this.variables.setConstant('PI', new Symbol_1.Symbol(Settings_1.Settings.PI));\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(e) {\n      var substitutions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var tokens = this.tokenizer.tokenize(e, true);\n      var rpn = this.toRPN(tokens);\n      return this.parseRPN(rpn, substitutions);\n    }\n    /**\n     * Tokenizes the string\n     * @param {String} e\n     * @returns {Token[]}\n     */\n\n  }, {\n    key: \"tokenize\",\n    value: function tokenize(e) {\n      return this.tokenizer.tokenize(e, false);\n    }\n    /**\n     * Puts token array in Reverse Polish Notation\n     * @param {Token[]} tokens\n     * @returns {Token[]}\n     */\n\n  }, {\n    key: \"toRPN\",\n    value: function toRPN(tokens) {\n      return RPN_1.RPN.TokensToRPN(tokens);\n    }\n    /**\n     * Parses the tokens\n     * @param {Token[]} rpn\n     * @param {object} substitutions\n     * @returns {Symbol}\n     */\n\n  }, {\n    key: \"parseRPN\",\n    value: function parseRPN(rpn, substitutions) {\n      var _this2 = this;\n\n      var rpnDeps = {\n        callfunction: function callfunction() {\n          return _this2.callfunction.apply(_this2, arguments);\n        },\n        getAction: function getAction(action) {\n          return _this2.getAction(action).bind(_this2);\n        }\n      };\n      var rpnParser = new RPN_1.RPN(rpnDeps, this.variables, this.peekers);\n      return rpnParser.parseRPN(rpn, substitutions);\n    }\n    /**\n     * This method is supposed to behave similarly to the override method but it does not override\n     * the existing function rather it only extends it\n     * @param {String} what\n     * @param {Function} with_what\n     * @param {boolean} force_call\n     */\n\n  }, {\n    key: \"extend\",\n    value: function extend(what, with_what, force_call) {\n      var _this3 = this;\n\n      var extended = this.getAction(what);\n\n      if (typeof extended === 'function' && typeof with_what === 'function') {\n        var f = extended;\n        this.setAction(what, function (a, b) {\n          if ((0, Utils_1.isSymbol)(a) && (0, Utils_1.isSymbol)(b) && !force_call) {\n            return f.call(_this3, a, b);\n          } else {\n            return with_what.call(_this3, a, b, f);\n          }\n        });\n      }\n    }\n    /**\n     * This method gives the ability to override operators with new methods.\n     * @param {String} which\n     * @param {Function} with_what\n     */\n\n  }, {\n    key: \"override\",\n    value: function override(which, with_what) {\n      if (!this.bin[which]) {\n        this.bin[which] = [];\n      }\n\n      this.bin[which].push(this[which]);\n      this[which] = with_what;\n    }\n    /**\n     * Restores a previously overridden operator\n     * @param {String} what\n     */\n\n  }, {\n    key: \"restore\",\n    value: function restore(what) {\n      if (this[what]) {\n        this[what] = this.bin[what].pop();\n      }\n    }\n  }, {\n    key: \"clean\",\n    value: function clean(symbol) {\n      var _this4 = this;\n\n      // handle functions with numeric values\n      // handle denominator within denominator\n      // handle trig simplifications\n      var g = symbol.group,\n          retval; //Now let's get to work\n\n      if (g === Groups_1.Groups.CP) {\n        var num = symbol.getNum(),\n            den = symbol.getDenom() || new Symbol_1.Symbol(1),\n            p = Number(symbol.power),\n            factor = new Symbol_1.Symbol(1);\n\n        if (Math.abs(p) === 1) {\n          den.each(function (x) {\n            if (x.group === Groups_1.Groups.CB) {\n              factor = (0, Core_1.multiply)(factor, _this4.clean(x.getDenom()));\n            } else if (x.power.lessThan(0)) {\n              factor = (0, Core_1.multiply)(factor, _this4.clean(x.clone().toUnitMultiplier()));\n            }\n          });\n          var new_den = new Symbol_1.Symbol(0); //now divide out the factor and add to new den\n\n          den.each(function (x) {\n            new_den = (0, Core_1.add)((0, Core_1.divide)(x, factor.clone()), new_den);\n          });\n          factor.invert(); //invert so it can be added to the top\n\n          var new_num;\n\n          if (num.isComposite()) {\n            new_num = new Symbol_1.Symbol(0);\n            num.each(function (x) {\n              new_num = (0, Core_1.add)((0, Core_1.multiply)(_this4.clean(x), factor.clone()), new_num);\n            });\n          } else new_num = (0, Core_1.multiply)(factor, num);\n\n          retval = (0, Core_1.divide)(new_num, new_den);\n        }\n      } else if (g === Groups_1.Groups.CB) {\n        retval = new Symbol_1.Symbol(1);\n        symbol.each(function (x) {\n          retval = (0, Core_1.multiply)(retval, _this4.clean(x));\n        });\n      } else if (g === Groups_1.Groups.FN) {\n        if (symbol.args.length === 1 && symbol.args[0].isConstant()) retval = (0, Utils_1.block)('PARSE2NUMBER', function () {\n          return _this4.parse(symbol);\n        }, true);\n      }\n\n      if (!retval) retval = symbol;\n      return retval;\n    }\n    /**\n     * An internal function call for the Parser. This will either trigger a real\n     * function call if it can do so or just return a symbolic representation of the\n     * function using symfunction.\n     * @param {String} fn_name\n     * @param {Array} args\n     * @param {int} allowed_args\n     * @returns {Symbol}\n     */\n\n  }, {\n    key: \"callfunction\",\n    value: function callfunction(fn_name, args) {\n      var allowed_args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n      var fn_settings = this.functionProvider.getFunctionDescriptor(fn_name);\n      if (!fn_settings) (0, Errors_1.err)('Nerdamer currently does not support the function ' + fn_name);\n      var num_allowed_args = fn_settings[1] || allowed_args,\n          //get the number of allowed arguments\n      fn = fn_settings[0],\n          //get the mapped function\n      retval; //We want to be able to call apply on the arguments or create a symfunction. Both require\n      //an array so make sure to wrap the argument in an array.\n\n      if (!(args instanceof Array)) args = args !== undefined ? [args] : [];\n\n      if (num_allowed_args !== -1) {\n        var is_array = (0, Utils_1.isArray)(num_allowed_args),\n            min_args = is_array ? num_allowed_args[0] : num_allowed_args,\n            max_args = is_array ? num_allowed_args[1] : num_allowed_args,\n            num_args = args.length;\n        var error_msg = fn_name + ' requires a {0} of {1} arguments. {2} provided!';\n        if (num_args < min_args) (0, Errors_1.err)((0, Utils_1.format)(error_msg, 'minimum', min_args, num_args));\n        if (num_args > max_args) (0, Errors_1.err)((0, Utils_1.format)(error_msg, 'maximum', max_args, num_args));\n      }\n      /*\n       * The following are very important to the how nerdamer constructs functions!\n       * Assumption 1 - if fn is undefined then handling of the function is purely numeric. This\n       *     enables us to reuse Math, Math2, ..., any function from Settings.FUNCTIONS_MODULES entry\n       * Assumption 2 - if fn is defined then that function takes care of EVERYTHING including symbolics\n       * Assumption 3 - if the user calls symbolics on a function that returns a numeric value then\n       *     they are expecting a symbolic output.\n       */\n      //check if arguments are all numers\n\n\n      var numericArgs = (0, Utils_1.allNumbers)(args); //Big number support. Check if Big number is requested and the arguments are all numeric and, not imaginary\n      //            if (Settings.USE_BIG && numericArgs) {\n      //                retval = Big[fn_name].apply(undefined, args);\n      //            }\n      //            else {\n\n      if (!fn) {\n        //Remember assumption 1. No function defined so it MUST be numeric in nature\n        fn = this.functionProvider.findFunction(fn_name);\n        if (Settings_1.Settings.PARSE2NUMBER && numericArgs) retval = (0, Symbol_1.bigConvert)(fn.apply(fn, args));else retval = (0, Symbol_1.symfunction)(fn_name, args);\n      } else {\n        //Remember assumption 2. The function is defined so it MUST handle all aspects including numeric values\n        var thisArg = fn_settings[2] || {};\n        thisArg.parser = this;\n        retval = fn.apply(thisArg, args);\n      } //            }\n\n\n      return retval;\n    }\n  }, {\n    key: \"getFunction\",\n    value: //TODO: Utilize the function below instead of the linked function\n    function getFunction(name) {\n      return this.functionProvider.getFunctionDescriptors(name)[0];\n    }\n    /**\n     * TODO: Switch to Parser.tokenize for this method\n     * Reads a string into an array of Symbols and operators\n     * @param {String} expression_string\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"toObject\",\n    value: function toObject(expression_string) {\n      var objectify = function objectify(tokens) {\n        var output = [];\n\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i];\n          var v = token.value;\n\n          if (token.type === Token_1.Token.VARIABLE_OR_LITERAL) {\n            output.push(new Symbol_1.Symbol(v));\n          } else if (token.type === Token_1.Token.FUNCTION) {\n            //jump ahead since the next object are the arguments\n            i++; //create a symbolic function and stick it on output\n\n            var f = (0, Symbol_1.symfunction)(v, objectify(tokens[i]));\n            f.isConversion = true;\n            output.push(f);\n          } else if (token.type === Token_1.Token.OPERATOR) {\n            output.push(v);\n          } else {\n            output.push(objectify(token));\n          }\n        }\n\n        return output;\n      };\n\n      return objectify(this.tokenize(expression_string));\n    } // A helper method for toTeX\n    // private\n\n  }, {\n    key: \"chunkAtCommas\",\n    value: function chunkAtCommas(arr) {\n      var chunks = [[]];\n\n      for (var j = 0, k = 0, l = arr.length; j < l; j++) {\n        if (arr[j] === ',') {\n          k++;\n          chunks[k] = [];\n        } else {\n          chunks[k].push(arr[j]);\n        }\n      }\n\n      return chunks;\n    } // Helper method for toTeX\n    // private\n\n  }, {\n    key: \"rem_brackets\",\n    value: function rem_brackets(str) {\n      return str.replace(/^\\\\left\\((.+)\\\\right\\)$/g, function (str, a) {\n        if (a) {\n          return a;\n        }\n\n        return str;\n      });\n    }\n    /**\n     * Convert expression or object to LaTeX\n     * @param {string} expression_or_obj\n     * @param {ConvertToLaTeXOptions} opt\n     * @returns {string}\n     */\n\n  }, {\n    key: \"toTeX\",\n    value: function toTeX(expression_or_obj, opt) {\n      var _this5 = this;\n\n      opt = opt || {}; // Add decimal option as per issue #579. Consider passing an object to Latex.latex as option instead of string\n\n      var decimals = opt.decimals === true ? 'decimals' : undefined;\n      var obj = typeof expression_or_obj === 'string' ? this.toObject(expression_or_obj) : expression_or_obj,\n          TeX = [],\n          cdot = typeof opt.cdot === 'undefined' ? '\\\\cdot' : opt.cdot; //set omit cdot to true by default\n      // Remove negative powers as per issue #570\n\n      obj = this.remove_redundant_powers(obj);\n\n      if ((0, Utils_1.isArray)(obj)) {\n        var nobj = [],\n            a,\n            b; //first handle ^\n\n        for (var i = 0; i < obj.length; i++) {\n          a = obj[i];\n\n          if (obj[i + 1] === '^') {\n            b = obj[i + 2];\n            nobj.push(LaTeX_1.LaTeX.braces(this.toTeX([a])) + '^' + LaTeX_1.LaTeX.braces(this.toTeX([b])));\n            i += 2;\n          } else {\n            nobj.push(a);\n          }\n        }\n\n        obj = nobj;\n      }\n\n      for (var _i = 0, l = obj.length; _i < l; _i++) {\n        var e = obj[_i]; // Convert * to cdot\n\n        if (e === '*') {\n          e = cdot;\n        }\n\n        if ((0, Utils_1.isSymbol)(e)) {\n          if (e.group === Groups_1.Groups.FN) {\n            var fname = e.fname,\n                f = void 0;\n            if (fname === Settings_1.Settings.SQRT) f = '\\\\sqrt' + LaTeX_1.LaTeX.braces(this.toTeX(e.args));else if (fname === Settings_1.Settings.ABS) f = LaTeX_1.LaTeX.brackets(this.toTeX(e.args), 'abs');else if (fname === Settings_1.Settings.PARENTHESIS) f = LaTeX_1.LaTeX.brackets(this.toTeX(e.args), 'parens');else if (fname === Settings_1.Settings.LOG10) {\n              f = '\\\\' + Settings_1.Settings.LOG10_LATEX + '\\\\left( ' + this.toTeX(e.args) + '\\\\right)';\n            } else if (fname === 'integrate') {\n              /* Retrive [Expression, x] */\n              var chunks = this.chunkAtCommas(e.args);\n              /* Build TeX */\n\n              var expr = LaTeX_1.LaTeX.braces(this.toTeX(chunks[0])),\n                  dx = this.toTeX(chunks[1]);\n              f = '\\\\int ' + expr + '\\\\, d' + dx;\n            } else if (fname === 'defint') {\n              var _chunks = this.chunkAtCommas(e.args),\n                  _expr = LaTeX_1.LaTeX.braces(this.toTeX(_chunks[0])),\n                  _dx = this.toTeX(_chunks[3]),\n                  lb = this.toTeX(_chunks[1]),\n                  ub = this.toTeX(_chunks[2]);\n\n              f = '\\\\int\\\\limits_{' + lb + '}^{' + ub + '} ' + _expr + '\\\\, d' + _dx;\n            } else if (fname === 'diff') {\n              var _chunks2 = this.chunkAtCommas(e.args);\n\n              var _dx2 = '',\n                  _expr2 = LaTeX_1.LaTeX.braces(this.toTeX(_chunks2[0]));\n              /* Handle cases: one argument provided, we need to guess the variable, and assume n = 1 */\n\n\n              if (_chunks2.length === 1) {\n                var vars = [];\n\n                for (var j = 0; j < _chunks2[0].length; j++) {\n                  if (_chunks2[0][j].group === 3) {\n                    vars.push(_chunks2[0][j].value);\n                  }\n                }\n\n                vars.sort();\n                _dx2 = vars.length > 0 ? '\\\\frac{d}{d ' + vars[0] + '}' : '\\\\frac{d}{d x}';\n              }\n              /* If two arguments, we have expression and variable, we assume n = 1 */\n              else if (_chunks2.length === 2) {\n                _dx2 = '\\\\frac{d}{d ' + _chunks2[1] + '}';\n              }\n              /* If we have more than 2 arguments, we assume we've got everything */\n              else {\n                _dx2 = '\\\\frac{d^{' + _chunks2[2] + '}}{d ' + this.toTeX(_chunks2[1]) + '^{' + _chunks2[2] + '}}';\n              }\n\n              f = _dx2 + '\\\\left(' + _expr2 + '\\\\right)';\n            } else if (fname === 'sum' || fname === 'product') {\n              // Split e.args into 4 parts based on locations of , symbols.\n              var argSplit = [[], [], [], []],\n                  _j = 0,\n                  _i2 = void 0;\n\n              for (_i2 = 0; _i2 < e.args.length; _i2++) {\n                if (e.args[_i2] === ',') {\n                  _j++;\n                  continue;\n                }\n\n                argSplit[_j].push(e.args[_i2]);\n              } // Then build TeX string.\n\n\n              f = (fname === 'sum' ? '\\\\sum_' : '\\\\prod_') + LaTeX_1.LaTeX.braces(this.toTeX(argSplit[1]) + ' = ' + this.toTeX(argSplit[2]));\n              f += '^' + LaTeX_1.LaTeX.braces(this.toTeX(argSplit[3])) + LaTeX_1.LaTeX.braces(this.toTeX(argSplit[0]));\n            } else if (fname === 'limit') {\n              var args = this.chunkAtCommas(e.args).map(function (x) {\n                if (Array.isArray(x)) return _this5.toTeX(x.join(''));\n                return _this5.toTeX(String(x));\n              });\n              f = '\\\\lim_' + LaTeX_1.LaTeX.braces(args[1] + '\\\\to ' + args[2]) + ' ' + LaTeX_1.LaTeX.braces(args[0]);\n            } else if (fname === Settings_1.Settings.FACTORIAL || fname === Settings_1.Settings.DOUBLEFACTORIAL) f = this.toTeX(e.args) + (fname === Settings_1.Settings.FACTORIAL ? '!' : '!!');else {\n              f = LaTeX_1.LaTeX.latex(e, decimals); //f = '\\\\mathrm'+LaTeX.braces(fname.replace(/_/g, '\\\\_')) + LaTeX.brackets(this.toTeX(e.args), 'parens');\n            }\n            TeX.push(f);\n          } else {\n            TeX.push(LaTeX_1.LaTeX.latex(e, decimals));\n          }\n        } else if ((0, Utils_1.isArray)(e)) {\n          TeX.push(LaTeX_1.LaTeX.brackets(this.toTeX(e)));\n        } else {\n          if (e === '/') TeX.push(LaTeX_1.LaTeX.frac(this.rem_brackets(TeX.pop()), this.rem_brackets(this.toTeX([obj[++_i]]))));else TeX.push(e);\n        }\n      }\n\n      return TeX.join(' ');\n    }\n  }, {\n    key: \"isOperator\",\n    value: function isOperator(name) {\n      return this.operators.isOperator();\n    }\n  }, {\n    key: \"getOperatorsClass\",\n    value: function getOperatorsClass() {\n      return this.operators;\n    }\n  }, {\n    key: \"getBrackets\",\n    value: function getBrackets() {\n      return this.operators.getBrackets();\n    }\n  }, {\n    key: \"functions\",\n    get: function get() {\n      return this.getFunctions();\n    }\n  }, {\n    key: \"getFunctions\",\n    value: function getFunctions() {\n      return this.functionProvider.getFunctionDescriptors();\n    }\n  }, {\n    key: \"getFunctionProvider\",\n    value: function getFunctionProvider() {\n      return this.functionProvider;\n    } // Gets called when the parser finds the , operator.\n    // Commas return a Collector object which is roughly an array\n\n  }, {\n    key: \"comma\",\n    value: function comma(a, b) {\n      if (!(a instanceof Collection_1.Collection)) a = Collection_1.Collection.create(a);\n      a.append(b);\n      return a;\n    } // Used to slice elements from arrays\n\n  }, {\n    key: \"slice\",\n    value: function slice(a, b) {\n      return new Slice_1.Slice(a, b);\n    } // The equality setter\n\n  }, {\n    key: \"equals\",\n    value: function equals(a, b) {\n      // Equality can only be set for group S so complain it's not\n      if (a.group !== Groups_1.Groups.S && !a.isLinear()) {\n        (0, Errors_1.err)('Cannot set equality for ' + a.toString());\n      }\n\n      this.variables.setVar(a.value, b.clone());\n      return b;\n    } // Percent\n\n  }, {\n    key: \"percent\",\n    value: function percent(a) {\n      return (0, Core_1.divide)(a, new Symbol_1.Symbol(100));\n    } // Set variable\n\n  }, {\n    key: \"assign\",\n    value: function assign(a, b) {\n      var _this6 = this;\n\n      if (a instanceof Collection_1.Collection && b instanceof Collection_1.Collection) {\n        a.elements.map(function (x, i) {\n          return _this6.assign(x, b.elements[i]);\n        });\n        return Vector_1.Vector.fromArray(b.elements);\n      }\n\n      if (a.parent) {\n        // It's referring to the parent instead. The current item can be discarded\n        var e = a.parent;\n        e.elements[e.getter] = b;\n        delete e.getter;\n        return e;\n      }\n\n      if (a.group !== Groups_1.Groups.S) {\n        throw new Errors_1.NerdamerValueError('Cannot complete operation. Incorrect LH value for ' + a);\n      }\n\n      this.variables.setVar(a.value, b);\n      return b;\n    }\n  }, {\n    key: \"function_assign\",\n    value: function function_assign(a, b) {\n      var f = a.elements.pop();\n      return this.setFunction(f, a.elements, b);\n    } // Function to quickly convert bools to Symbols\n\n  }, {\n    key: \"bool2Symbol\",\n    value: function bool2Symbol(x) {\n      return new Symbol_1.Symbol(x === true ? 1 : 0);\n    } //check for equality\n\n  }, {\n    key: \"eq\",\n    value: function eq(a, b) {\n      return this.bool2Symbol(a.equals(b));\n    } //checks for greater than\n\n  }, {\n    key: \"gt\",\n    value: function gt(a, b) {\n      return this.bool2Symbol(a.gt(b));\n    } //checks for greater than equal\n\n  }, {\n    key: \"gte\",\n    value: function gte(a, b) {\n      return this.bool2Symbol(a.gte(b));\n    } //checks for less than\n\n  }, {\n    key: \"lt\",\n    value: function lt(a, b) {\n      return this.bool2Symbol(a.lt(b));\n    } //checks for less than equal\n\n  }, {\n    key: \"lte\",\n    value: function lte(a, b) {\n      return this.bool2Symbol(a.lte(b));\n    } // wraps the factorial\n\n  }, {\n    key: \"factorial\",\n    value: function factorial(a) {\n      return (0, Symbol_1.symfunction)(Settings_1.Settings.FACTORIAL, [a]);\n    } // wraps the double factorial\n\n  }, {\n    key: \"dfactorial\",\n    value: function dfactorial(a) {\n      return (0, Symbol_1.symfunction)(Settings_1.Settings.DOUBLEFACTORIAL, [a]);\n    } //Link the functions to the parse so they're available outside of the library.\n    //This is strictly for convenience and may be deprecated.\n\n  }, {\n    key: \"expand\",\n    value: function expand(symbol) {\n      var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      return (0, Core_1.expand)(symbol, opt);\n    }\n  }, {\n    key: \"round\",\n    value: function round(x, s) {\n      return (0, Core_1.round)(x, s);\n    }\n  }, {\n    key: \"cbrt\",\n    value: function cbrt(symbol) {\n      return (0, Core_1.cbrt)(symbol);\n    }\n  }, {\n    key: \"abs\",\n    value: function abs(symbol) {\n      return (0, Core_1.abs)(symbol);\n    }\n  }, {\n    key: \"log\",\n    value: function log(symbol, base) {\n      return (0, Core_1.log)(symbol, base);\n    }\n  }, {\n    key: \"rationalize\",\n    value: function rationalize(symbol) {\n      return (0, Core_1.rationalize)(symbol);\n    }\n  }, {\n    key: \"nthroot\",\n    value: function nthroot(num, p, prec, asbig) {\n      return (0, Core_1.nthroot)(num, p, prec, asbig);\n    }\n  }, {\n    key: \"arg\",\n    value: function arg(symbol) {\n      return (0, Core_1.arg)(symbol);\n    }\n  }, {\n    key: \"conjugate\",\n    value: function conjugate(symbol) {\n      return (0, Core_1.conjugate)(symbol);\n    }\n  }, {\n    key: \"imagpart\",\n    value: function imagpart(symbol) {\n      return (0, Core_1.imagpart)(symbol);\n    }\n  }, {\n    key: \"realpart\",\n    value: function realpart(symbol) {\n      return (0, Core_1.realpart)(symbol);\n    }\n  }, {\n    key: \"sqrt\",\n    value: function sqrt(symbol) {\n      return (0, Core_1.sqrt)(symbol);\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(a, b) {\n      return (0, Core_1.multiply)(a, b);\n    }\n  }, {\n    key: \"divide\",\n    value: function divide(a, b) {\n      return (0, Core_1.divide)(a, b);\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract(a, b) {\n      return (0, Core_1.subtract)(a, b);\n    }\n  }, {\n    key: \"add\",\n    value: function add(a, b) {\n      return (0, Core_1.add)(a, b);\n    }\n  }, {\n    key: \"pow\",\n    value: function pow(a, b) {\n      return (0, Core_1.pow)(a, b);\n    }\n  }, {\n    key: \"mod\",\n    value: function mod(symbol1, symbol2) {\n      return (0, Core_1.mod)(symbol1, symbol2);\n    }\n  }, {\n    key: \"tree\",\n    value: function tree(expression) {\n      var tokens = this.tokenize(expression);\n      tokens = this.toRPN(tokens);\n      return this.tokenizer.tree(tokens);\n    }\n  }, {\n    key: \"setFunction\",\n    value: function setFunction(name, params_array, body) {\n      (0, Utils_1.validateName)(name);\n\n      if (!this.variables.isReserved(name)) {\n        params_array = params_array || this.parse(body).variables(); // The function gets set to PARSER.mapped function which is just\n        // a generic function call.\n        //The loader for functions which are not part of Math2\n\n        var mapped_function = function mapped_function() {\n          var subs = {},\n              params = this.params;\n\n          for (var i = 0; i < params.length; i++) {\n            subs[params[i]] = String(arguments[i]);\n          }\n\n          return this.parser.parse(this.body, subs);\n        };\n\n        this.functionProvider.setFunctionDescriptor(name, [mapped_function, params_array.length, {\n          name: name,\n          params: params_array,\n          body: body\n        }]);\n        return body;\n      }\n\n      return null;\n    }\n  }]);\n\n  return Parser;\n}();\n\nexports.Parser = Parser; // type ParseDepsType = {\n//     parser: Parser | null;\n// }\n\n/**\n *\n * @type {{parser: Parser}}\n */\n\nexports.ParseDeps = {\n  parser: null\n};\n/**\n *\n * @param {string | Symbol} e\n * @param {object} substitutions\n * @return {*}\n */\n\nfunction parse(e) {\n  var substitutions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return exports.ParseDeps.parser.parse(e, substitutions);\n}\n\nexports.parse = parse;\n/**\n * As the name states. It forces evaluation of the expression\n * @param {string} expression\n * @param {Symbol} o\n * @deprecated use Utils.evaluate instead\n */\n\nfunction evaluate(expression) {\n  var o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  return (0, Utils_1.block)('PARSE2NUMBER', function () {\n    return parse(expression, o);\n  }, true);\n}\n\nexports.evaluate = evaluate;","map":{"version":3,"mappings":"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","names":["Parser","tokenizer","operators","functionProvider","variables","peekers","units","Collection","Collection_1","Slice","Slice_1","Token","Token_1","Trig_1","Trig_hyperbolic_1","Errors_1","Symbol_1","arr","narr","length","e","shift","next","next_is_array","next_is_minus","unshift","last","pop","before","before_last","push","injectOperatorsDeps","registerOperator","name","operation","setAction","func","operator","action","undefined","setOperator","setConstant","Settings_1","E","PI","substitutions","tokens","tokenize","rpn","toRPN","parseRPN","RPN_1","TokensToRPN","rpnDeps","callfunction","getAction","bind","rpnParser","what","with_what","force_call","extended","f","a","b","call","which","bin","symbol","g","group","retval","Groups_1","CP","num","getNum","den","getDenom","p","Number","power","factor","Math","abs","each","x","CB","clean","lessThan","clone","toUnitMultiplier","new_den","invert","new_num","isComposite","FN","args","isConstant","parse","fn_name","allowed_args","fn_settings","getFunctionDescriptor","num_allowed_args","fn","Array","is_array","min_args","max_args","num_args","error_msg","numericArgs","findFunction","PARSE2NUMBER","apply","thisArg","parser","getFunctionDescriptors","expression_string","objectify","output","i","l","token","v","value","type","VARIABLE_OR_LITERAL","FUNCTION","isConversion","OPERATOR","chunks","j","k","str","replace","expression_or_obj","opt","decimals","obj","toObject","TeX","cdot","remove_redundant_powers","nobj","LaTeX_1","braces","toTeX","fname","SQRT","ABS","brackets","PARENTHESIS","LOG10","LOG10_LATEX","chunkAtCommas","expr","dx","lb","ub","vars","sort","argSplit","map","isArray","join","String","FACTORIAL","DOUBLEFACTORIAL","latex","frac","rem_brackets","isOperator","getBrackets","getFunctions","create","append","S","isLinear","toString","setVar","elements","assign","Vector_1","fromArray","parent","getter","setFunction","bool2Symbol","equals","gt","gte","lt","lte","s","base","prec","asbig","symbol1","symbol2","expression","tree","params_array","body","isReserved","mapped_function","subs","params","arguments","setFunctionDescriptor","exports","evaluate","o"],"sourceRoot":"","sources":["../../src/Parser/Parser.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}