{"ast":null,"code":"import Fraction from 'fraction.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'Fraction';\nvar dependencies = [];\nexport var createFractionClass = /* #__PURE__ */factory(name, dependencies, function () {\n  /**\r\n   * Attach type information\r\n   */\n  Object.defineProperty(Fraction, 'name', {\n    value: 'Fraction'\n  });\n  Fraction.prototype.constructor = Fraction;\n  Fraction.prototype.type = 'Fraction';\n  Fraction.prototype.isFraction = true;\n  /**\r\n   * Get a JSON representation of a Fraction containing type information\r\n   * @returns {Object} Returns a JSON object structured as:\r\n   *                   `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\r\n   */\n\n  Fraction.prototype.toJSON = function () {\n    return {\n      mathjs: 'Fraction',\n      n: this.s * this.n,\n      d: this.d\n    };\n  };\n  /**\r\n   * Instantiate a Fraction from a JSON object\r\n   * @param {Object} json  a JSON object structured as:\r\n   *                       `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\r\n   * @return {BigNumber}\r\n   */\n\n\n  Fraction.fromJSON = function (json) {\n    return new Fraction(json);\n  };\n\n  return Fraction;\n}, {\n  isClass: true\n});","map":{"version":3,"names":["Fraction","factory","name","dependencies","createFractionClass","Object","defineProperty","value","prototype","constructor","type","isFraction","toJSON","mathjs","n","s","d","fromJSON","json","isClass"],"sources":["C:/Users/daniz/TFG/Aplicacion/node_modules/mathjs/lib/esm/type/fraction/Fraction.js"],"sourcesContent":["import Fraction from 'fraction.js';\r\nimport { factory } from '../../utils/factory.js';\r\nvar name = 'Fraction';\r\nvar dependencies = [];\r\nexport var createFractionClass = /* #__PURE__ */factory(name, dependencies, () => {\r\n  /**\r\n   * Attach type information\r\n   */\r\n  Object.defineProperty(Fraction, 'name', {\r\n    value: 'Fraction'\r\n  });\r\n  Fraction.prototype.constructor = Fraction;\r\n  Fraction.prototype.type = 'Fraction';\r\n  Fraction.prototype.isFraction = true;\r\n  /**\r\n   * Get a JSON representation of a Fraction containing type information\r\n   * @returns {Object} Returns a JSON object structured as:\r\n   *                   `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\r\n   */\r\n\r\n  Fraction.prototype.toJSON = function () {\r\n    return {\r\n      mathjs: 'Fraction',\r\n      n: this.s * this.n,\r\n      d: this.d\r\n    };\r\n  };\r\n  /**\r\n   * Instantiate a Fraction from a JSON object\r\n   * @param {Object} json  a JSON object structured as:\r\n   *                       `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\r\n   * @return {BigNumber}\r\n   */\r\n\r\n\r\n  Fraction.fromJSON = function (json) {\r\n    return new Fraction(json);\r\n  };\r\n\r\n  return Fraction;\r\n}, {\r\n  isClass: true\r\n});"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,IAAIC,IAAI,GAAG,UAAX;AACA,IAAIC,YAAY,GAAG,EAAnB;AACA,OAAO,IAAIC,mBAAmB,GAAG,eAAeH,OAAO,CAACC,IAAD,EAAOC,YAAP,EAAqB,YAAM;EAChF;AACF;AACA;EACEE,MAAM,CAACC,cAAP,CAAsBN,QAAtB,EAAgC,MAAhC,EAAwC;IACtCO,KAAK,EAAE;EAD+B,CAAxC;EAGAP,QAAQ,CAACQ,SAAT,CAAmBC,WAAnB,GAAiCT,QAAjC;EACAA,QAAQ,CAACQ,SAAT,CAAmBE,IAAnB,GAA0B,UAA1B;EACAV,QAAQ,CAACQ,SAAT,CAAmBG,UAAnB,GAAgC,IAAhC;EACA;AACF;AACA;AACA;AACA;;EAEEX,QAAQ,CAACQ,SAAT,CAAmBI,MAAnB,GAA4B,YAAY;IACtC,OAAO;MACLC,MAAM,EAAE,UADH;MAELC,CAAC,EAAE,KAAKC,CAAL,GAAS,KAAKD,CAFZ;MAGLE,CAAC,EAAE,KAAKA;IAHH,CAAP;EAKD,CAND;EAOA;AACF;AACA;AACA;AACA;AACA;;;EAGEhB,QAAQ,CAACiB,QAAT,GAAoB,UAAUC,IAAV,EAAgB;IAClC,OAAO,IAAIlB,QAAJ,CAAakB,IAAb,CAAP;EACD,CAFD;;EAIA,OAAOlB,QAAP;AACD,CApCsD,EAoCpD;EACDmB,OAAO,EAAE;AADR,CApCoD,CAAhD"},"metadata":{},"sourceType":"module"}