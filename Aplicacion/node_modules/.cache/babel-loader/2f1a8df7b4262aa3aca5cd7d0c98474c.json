{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Box from'@mui/material/Box';import CustomTable from'../CustomComponents/CustomTable';import nerdamer from'nerdamer';import'katex/dist/katex.min.css';import Latex from'react-latex-next';import useLocalStorage from'../storageHook.js';import SurfaceDialog from'./SurfaceDialog';var latexEq=function latexEq(eq){return/*#__PURE__*/React.createElement(Latex,null,\"$ \".concat(eq,\" $\"));};var tableCols=[{id:'name',label:'Name',minWidth:170},{id:'implicit',label:'Implicit',minWidth:350},{id:'sdf',label:'SDF',minWidth:10}];export default function SurfacePage(){var _useLocalStorage=useLocalStorage('user_implicits',{}),_useLocalStorage2=_slicedToArray(_useLocalStorage,2),storage=_useLocalStorage2[0],setStorage=_useLocalStorage2[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),dialogOpen=_useState2[0],setDialogOpen=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tableRows=_useState4[0],setTableRows=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),editedRow=_useState6[0],setEditedRow=_useState6[1];useEffect(function(){var newRows=[];Object.keys(storage).forEach(function(key,index){var item=storage[key];newRows.push({id:item.id,name:item.name,implicit:latexEq(nerdamer.convertToLaTeX(item.implicit)),sdf:item.sdf});});setTableRows(newRows);},[storage]);var handleDelete=function handleDelete(selectedList){// Convert `obj` to a key/value array\n// `[['name', 'Luke Skywalker'], ['title', 'Jedi Knight'], ...]`\nvar asArray=Object.entries(storage);var filtered=asArray.filter(function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];return!selectedList.includes(key);});// Convert the key/value array back to an object:\n// `{ name: 'Luke Skywalker', title: 'Jedi Knight' }`\nvar newStorage=Object.fromEntries(filtered);setStorage(newStorage);};return/*#__PURE__*/React.createElement(Box,null,/*#__PURE__*/React.createElement(CustomTable,{rows:tableRows,columns:tableCols,handleDelete:handleDelete,handleCreateRow:function handleCreateRow(){setEditedRow(\"\");setDialogOpen(true);},handleRowClick:function handleRowClick(name){setEditedRow(name);setDialogOpen(true);}}),/*#__PURE__*/React.createElement(SurfaceDialog,{savedData:editedRow?storage[editedRow]:null,open:dialogOpen,handleClose:function handleClose(){return setDialogOpen(false);}}));}","map":{"version":3,"names":["React","useState","useEffect","Box","CustomTable","nerdamer","Latex","useLocalStorage","SurfaceDialog","latexEq","eq","tableCols","id","label","minWidth","SurfacePage","storage","setStorage","dialogOpen","setDialogOpen","tableRows","setTableRows","editedRow","setEditedRow","newRows","Object","keys","forEach","key","index","item","push","name","implicit","convertToLaTeX","sdf","handleDelete","selectedList","asArray","entries","filtered","filter","value","includes","newStorage","fromEntries"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/SurfacePage/SurfacePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport CustomTable from '../CustomComponents/CustomTable';\r\nimport nerdamer from 'nerdamer';\r\nimport 'katex/dist/katex.min.css';\r\nimport Latex from 'react-latex-next';\r\nimport useLocalStorage from '../storageHook.js';\r\nimport SurfaceDialog from './SurfaceDialog';\r\n\r\nconst latexEq = (eq) => {\r\n  return <Latex>{`$ ${eq} $`}</Latex>;\r\n};\r\nconst tableCols = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'implicit', label: 'Implicit', minWidth: 350 },\r\n  { id: 'sdf', label: 'SDF', minWidth: 10 },\r\n];\r\n\r\nexport default function SurfacePage() {\r\n  const [storage, setStorage] = useLocalStorage('user_implicits', {});\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [tableRows, setTableRows] = useState([]);\r\n  const [editedRow, setEditedRow] = useState('');\r\n\r\n  useEffect(() => {\r\n    let newRows = [];\r\n\r\n    Object.keys(storage).forEach(function (key, index) {\r\n      const item = storage[key];\r\n\r\n      newRows.push({\r\n        id: item.id,\r\n        name: item.name,\r\n        implicit: latexEq(nerdamer.convertToLaTeX(item.implicit)),\r\n        sdf: item.sdf,\r\n      });\r\n    });\r\n\r\n    setTableRows(newRows);\r\n  }, [storage]);\r\n\r\n  const handleDelete = (selectedList) => {\r\n    // Convert `obj` to a key/value array\r\n    // `[['name', 'Luke Skywalker'], ['title', 'Jedi Knight'], ...]`\r\n    const asArray = Object.entries(storage);\r\n    const filtered = asArray.filter(\r\n      ([key, value]) => !selectedList.includes(key)\r\n    );\r\n\r\n    // Convert the key/value array back to an object:\r\n    // `{ name: 'Luke Skywalker', title: 'Jedi Knight' }`\r\n    const newStorage = Object.fromEntries(filtered);\r\n    setStorage(newStorage);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      \r\n      <CustomTable\r\n        rows={tableRows}\r\n        columns={tableCols}\r\n        handleDelete={handleDelete}\r\n        handleCreateRow={() => {setEditedRow(\"\"); setDialogOpen(true)}}\r\n        handleRowClick={(name)=>{setEditedRow(name); setDialogOpen(true)}}\r\n      />\r\n\r\n      <SurfaceDialog\r\n        savedData={editedRow ? storage[editedRow] : null}\r\n        open={dialogOpen}\r\n        handleClose={() => setDialogOpen(false)}\r\n      />\r\n      \r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}