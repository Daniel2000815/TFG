{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\CustomComponents\\\\CustomTable.js\";\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nvar columns = [{\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'code',\n  label: \"ISO\\xA0Code\",\n  minWidth: 100\n}, {\n  id: 'population',\n  label: 'Population',\n  minWidth: 170,\n  align: 'right',\n  format: function format(value) {\n    return value.toLocaleString('en-US');\n  }\n}, {\n  id: 'size',\n  label: \"Size\\xA0(km\\xB2)\",\n  minWidth: 170,\n  align: 'right',\n  format: function format(value) {\n    return value.toLocaleString('en-US');\n  }\n}, {\n  id: 'density',\n  label: 'Density',\n  minWidth: 170,\n  align: 'right',\n  format: function format(value) {\n    return value.toFixed(2);\n  }\n}];\n\nfunction createData(name, code, population, size) {\n  var density = population / size;\n  return {\n    name: name,\n    code: code,\n    population: population,\n    size: size,\n    density: density\n  };\n}\n\nvar rows = [createData('India', 'IN', 1324171354, 3287263), createData('China', 'CN', 1403500365, 9596961), createData('Italy', 'IT', 60483973, 301340), createData('United States', 'US', 327167434, 9833520), createData('Canada', 'CA', 37602103, 9984670), createData('Australia', 'AU', 25475400, 7692024), createData('Germany', 'DE', 83019200, 357578), createData('Ireland', 'IE', 4857000, 70273), createData('Mexico', 'MX', 126577691, 1972550), createData('Japan', 'JP', 126317000, 377973), createData('France', 'FR', 67022000, 640679), createData('United Kingdom', 'GB', 67545757, 242495), createData('Russia', 'RU', 146793744, 17098246), createData('Nigeria', 'NG', 200962417, 923768), createData('Brazil', 'BR', 210147125, 8515767)];\nexport default function CustomTable() {\n  var _this = this;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(10),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    sx: {\n      width: '100%',\n      overflow: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    sx: {\n      maxHeight: 440\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, columns.map(function (column) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      key: column.id,\n      align: column.align,\n      style: {\n        minWidth: column.minWidth\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, column.label);\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, columns.map(function (column) {\n      var value = row[column.id];\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onPageChange: handleChangePage,\n    onRowsPerPageChange: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","name","code","population","size","density","rows","CustomTable","useState","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","width","overflow","maxHeight","map","column","slice","row","length"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/CustomComponents/CustomTable.js"],"sourcesContent":["import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\r\n  {\r\n    id: 'population',\r\n    label: 'Population',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'size',\r\n    label: 'Size\\u00a0(km\\u00b2)',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'density',\r\n    label: 'Density',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nfunction createData(name, code, population, size) {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nconst rows = [\r\n  createData('India', 'IN', 1324171354, 3287263),\r\n  createData('China', 'CN', 1403500365, 9596961),\r\n  createData('Italy', 'IT', 60483973, 301340),\r\n  createData('United States', 'US', 327167434, 9833520),\r\n  createData('Canada', 'CA', 37602103, 9984670),\r\n  createData('Australia', 'AU', 25475400, 7692024),\r\n  createData('Germany', 'DE', 83019200, 357578),\r\n  createData('Ireland', 'IE', 4857000, 70273),\r\n  createData('Mexico', 'MX', 126577691, 1972550),\r\n  createData('Japan', 'JP', 126317000, 377973),\r\n  createData('France', 'FR', 67022000, 640679),\r\n  createData('United Kingdom', 'GB', 67545757, 242495),\r\n  createData('Russia', 'RU', 146793744, 17098246),\r\n  createData('Nigeria', 'NG', 200962417, 923768),\r\n  createData('Brazil', 'BR', 210147125, 8515767),\r\n];\r\n\r\nexport default function CustomTable() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n      <TableContainer sx={{ maxHeight: 440 }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === 'number'\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}