{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\Graph.js\";\nimport React from \"react\";\nimport { useCallback, useEffect } from \"react\";\nimport ReactFlow, { addEdge, Background, useNodesState, useEdgesState, MarkerType } from \"react-flow-renderer\";\nimport ButtonEdge from './ButtonEdge.js';\nimport PrimitiveNode from \"./PrimitiveNode.js\";\nimport BooleanNode from \"./BooleanNode.js\";\nimport \"./styles.css\";\nvar initialNodes = [{\n  id: \"node-0\",\n  type: \"booleanNode\",\n  position: {\n    x: 0,\n    y: 0\n  },\n  data: {\n    sdf: \"sphere(1.0)\"\n  }\n}, {\n  id: \"node-1\",\n  type: \"primitiveNode\",\n  position: {\n    x: 250,\n    y: 0\n  },\n  data: {\n    sdf: \"box(1.0, 1.0, 1.0)\"\n  }\n}, {\n  id: \"node-2\",\n  type: \"primitiveNode\",\n  position: {\n    x: 250,\n    y: -300\n  },\n  data: {\n    sdf: \"\"\n  }\n}];\nvar initialEdges = [];\nvar nodeTypes = {\n  primitiveNode: PrimitiveNode,\n  booleanNode: BooleanNode\n};\n\nvar onInit = function onInit(reactFlowInstance) {\n  return console.log('flow loaded:', reactFlowInstance);\n};\n\nexport default function Graph() {\n  var _useNodesState = useNodesState([]),\n      _useNodesState2 = _slicedToArray(_useNodesState, 3),\n      nodes = _useNodesState2[0],\n      setNodes = _useNodesState2[1],\n      onNodesChange = _useNodesState2[2];\n\n  var _useEdgesState = useEdgesState(initialEdges),\n      _useEdgesState2 = _slicedToArray(_useEdgesState, 3),\n      edges = _useEdgesState2[0],\n      setEdges = _useEdgesState2[1],\n      onEdgesChange = _useEdgesState2[2];\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      id = _React$useState2[0],\n      setId = _React$useState2[1]; // no funciona: borra todos\n\n\n  var onRemoveEdge = function onRemoveEdge(id) {\n    console.log(edges);\n    setEdges(edges.filter(function (edge) {\n      return edge.id == id;\n    }));\n    onEdgesChange(edges);\n  };\n\n  var updateNodeSdf = function updateNodeSdf(id, newSdf) {\n    console.log(\"ALO\");\n    setNodes(function (nds) {\n      return nds.map(function (node) {\n        if (node.id === id) {\n          node.data = _objectSpread(_objectSpread({}, node.data), {}, {\n            sdf: newSdf\n          });\n        }\n\n        return node;\n      });\n    });\n  };\n\n  var connectSdf = function connectSdf(sourceId, targetId) {\n    var sourceNode = nodes.find(function (n) {\n      return n.id === sourceId;\n    });\n    var targetNode = nodes.find(function (n) {\n      return n.id === targetId;\n    });\n    setNodes(function (nds) {\n      return nds.map(function (node) {\n        if (node.id === targetId) {\n          node.data = {\n            sdfs: [].concat(_toConsumableArray(targetNode.data.sdfs), [sourceNode.data.sdf])\n          };\n        }\n\n        return node;\n      });\n    });\n  };\n\n  var onConnect = useCallback(function (params) {\n    return setEdges(function (eds) {\n      return addEdge(_objectSpread(_objectSpread({}, params), {}, {\n        animated: true,\n        markerEnd: {\n          type: MarkerType.Arrow,\n          color: '#000'\n        },\n        data: {}\n      }), eds);\n    });\n  }, []);\n  useEffect(function () {\n    console.log(\"ASASA\");\n    console.log(edges);\n  }, [edges]);\n\n  var newPrimitiveNode = function newPrimitiveNode() {\n    setId(id + 1);\n    return {\n      id: \"node-\".concat(id),\n      type: \"primitiveNode\",\n      position: {\n        x: 0,\n        y: 0\n      },\n      data: {\n        sdf: \"sphere(p, 1.0)\",\n        onChangeSdf: updateNodeSdf,\n        onConnectHandle: connectSdf\n      }\n    };\n  };\n\n  var newBooleanNode = function newBooleanNode() {\n    setId(id + 1);\n    return {\n      id: \"node-\".concat(id),\n      type: \"booleanNode\",\n      position: {\n        x: 0,\n        y: 0\n      },\n      data: {\n        sdfs: []\n      }\n    };\n  };\n\n  var handleKey = function handleKey(e) {\n    // SPACE BAR\n    if (e.key === \"p\") {\n      var node = newPrimitiveNode();\n      nodes.push(node);\n      onNodesChange([node]); // Para actualizar\n    } else if (e.key === \"b\") {\n      var _node = newBooleanNode();\n\n      nodes.push(_node);\n      onNodesChange([_node]); // Para actualizar\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100vh\"\n    },\n    tabIndex: \"0\",\n    onKeyDown: handleKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    onConnect: onConnect // onDisconnect={onDisconnect}\n    ,\n    nodeTypes: nodeTypes,\n    onInit: onInit,\n    onEdgeClick: function onEdgeClick(ev, edge) {\n      return setEdges(edges.filter(function (e) {\n        return e.id != edge.id;\n      }));\n    },\n    snapToGrid: true,\n    fitView: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Background, {\n    color: \"#aaa\",\n    gap: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"names":["React","useCallback","useEffect","ReactFlow","addEdge","Background","useNodesState","useEdgesState","MarkerType","ButtonEdge","PrimitiveNode","BooleanNode","initialNodes","id","type","position","x","y","data","sdf","initialEdges","nodeTypes","primitiveNode","booleanNode","onInit","reactFlowInstance","console","log","Graph","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","useState","setId","onRemoveEdge","filter","edge","updateNodeSdf","newSdf","nds","map","node","connectSdf","sourceId","targetId","sourceNode","find","n","targetNode","sdfs","onConnect","params","eds","animated","markerEnd","Arrow","color","newPrimitiveNode","onChangeSdf","onConnectHandle","newBooleanNode","handleKey","e","key","push","height","ev"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/Graph.js"],"sourcesContent":["import React from \"react\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  useNodesState,\r\n  useEdgesState,\r\n  MarkerType\r\n} from \"react-flow-renderer\";\r\nimport ButtonEdge from './ButtonEdge.js';\r\nimport PrimitiveNode from \"./PrimitiveNode.js\";\r\nimport BooleanNode from \"./BooleanNode.js\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst initialNodes = [\r\n  {\r\n    id: \"node-0\",\r\n    type: \"booleanNode\",\r\n    position: { x: 0, y: 0 },\r\n    data: { sdf: \"sphere(1.0)\" }\r\n  },\r\n  {\r\n    id: \"node-1\",\r\n    type: \"primitiveNode\",\r\n    position: { x: 250, y: 0 },\r\n    data: { sdf: \"box(1.0, 1.0, 1.0)\" }\r\n  },\r\n  {\r\n    id: \"node-2\",\r\n    type: \"primitiveNode\",\r\n    position: { x: 250, y: -300},\r\n    data: { sdf: \"\" }\r\n  }\r\n];\r\n\r\nconst initialEdges = [\r\n\r\n];\r\n\r\nconst nodeTypes = { primitiveNode: PrimitiveNode, booleanNode: BooleanNode };\r\n\r\nconst onInit = (reactFlowInstance) => console.log('flow loaded:', reactFlowInstance);\r\n\r\nexport default function Graph() {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n  const [id, setId] = React.useState(0);\r\n\r\n  // no funciona: borra todos\r\n  const onRemoveEdge = (id) =>{\r\n    console.log(edges);\r\n    setEdges(edges.filter(edge => edge.id == id));\r\n    onEdgesChange(edges);\r\n  }\r\n\r\n  const updateNodeSdf = (id, newSdf) =>{\r\n    console.log(\"ALO\");\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === id) {\r\n          node.data = {\r\n            ...node.data,\r\n            sdf: newSdf,\r\n          };\r\n        }\r\n\r\n        return node;\r\n      })\r\n    );\r\n  }\r\n\r\n  const connectSdf = (sourceId, targetId) => {\r\n    const sourceNode = nodes.find(n => n.id===sourceId);\r\n    const targetNode = nodes.find(n => n.id===targetId);\r\n\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === targetId) {\r\n          node.data = {\r\n            sdfs: [...targetNode.data.sdfs, sourceNode.data.sdf],\r\n          };\r\n        }\r\n\r\n        return node;\r\n      })\r\n    );\r\n  }\r\n\r\n  const onConnect = useCallback(\r\n    \r\n    (params) => setEdges(\r\n      (eds) => addEdge(\r\n        { \r\n          ...params, \r\n          animated:true, \r\n          markerEnd: { type: MarkerType.Arrow, color: '#000' }, \r\n          data: {} \r\n        }, \r\n        eds)\r\n      ),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(\"ASASA\");\r\n    console.log(edges);\r\n  }, [edges]);\r\n\r\n  const newPrimitiveNode = () =>{\r\n    setId(id+1);\r\n    return {\r\n      id: `node-${id}`,\r\n      type: \"primitiveNode\",\r\n      position: { x: 0, y: 0 },\r\n      data: { \r\n        sdf: \"sphere(p, 1.0)\",\r\n        onChangeSdf: updateNodeSdf,\r\n        onConnectHandle: connectSdf\r\n      }\r\n    }\r\n  }\r\n\r\n  const newBooleanNode = () =>{\r\n    setId(id+1);\r\n    return {\r\n      id: `node-${id}`,\r\n      type: \"booleanNode\",\r\n      position: { x: 0, y: 0 },\r\n      data: { \r\n        sdfs: [],\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleKey= (e) => {\r\n    // SPACE BAR\r\n    if (e.key === \"p\") {\r\n      const node = newPrimitiveNode();\r\n      nodes.push(node);\r\n\r\n      onNodesChange([node]);  // Para actualizar\r\n    }\r\n    else if (e.key === \"b\") {\r\n      const node = newBooleanNode();\r\n      nodes.push(node);\r\n\r\n      onNodesChange([node]);  // Para actualizar\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <div style={{height: \"100vh\"}} tabIndex=\"0\" onKeyDown={handleKey}>\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n\r\n        onNodesChange={onNodesChange}\r\n        onEdgesChange={onEdgesChange}\r\n        onConnect={onConnect}\r\n        // onDisconnect={onDisconnect}\r\n\r\n        nodeTypes={nodeTypes}\r\n\r\n        onInit={onInit}\r\n        onEdgeClick={(ev, edge)=>setEdges(edges.filter(e => e.id != edge.id))}\r\n\r\n        snapToGrid={true}\r\n        fitView\r\n      >\r\n        <Background color=\"#aaa\" gap={10} />\r\n        </ReactFlow>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}