{"ast":null,"code":"import _asyncToGenerator from \"G:\\\\gitlab\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _createForOfIteratorHelper from \"G:\\\\gitlab\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _objectSpread from \"G:\\\\gitlab\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"G:\\\\gitlab\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"G:\\\\gitlab\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"G:\\\\gitlab\\\\TFG\\\\Aplicacion\\\\src\\\\Graph.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport ReactFlow, { addEdge, Background, useNodesState, useEdgesState, MarkerType } from \"react-flow-renderer\";\nimport PrimitiveNode from \"./CustomNodes/PrimitiveNode.js\";\nimport BooleanNode from \"./CustomNodes/BooleanNode.js\";\nimport DeformNode from \"./CustomNodes/DeformNode.js\";\nimport ButtonEdge from \"./CustomNodes/ButtonEdge\";\nimport CustomControls from \"./CustomControls.js\";\nimport \"./styles.css\";\nimport { GraphProvider } from \"./GraphContext.js\";\nvar flowKey = \"savedGraph\";\nvar nodeTypes = {\n  primitiveNode: PrimitiveNode,\n  booleanNode: BooleanNode,\n  deformNode: DeformNode\n};\nvar edgeTypes = {\n  buttonEdge: ButtonEdge\n};\nvar initialNodes = [{\n  id: \"prim-0\",\n  type: \"primitiveNode\",\n  position: {\n    x: -50,\n    y: -150\n  },\n  dragHandle: \".custom-node-header\",\n  data: {\n    inputs: {},\n    sdf: \"\",\n    children: []\n  }\n}, {\n  id: \"prim-1\",\n  type: \"primitiveNode\",\n  dragHandle: \".custom-node-header\",\n  position: {\n    x: -50,\n    y: 200\n  },\n  data: {\n    inputs: {},\n    sdf: \"\",\n    children: []\n  }\n}, {\n  id: \"prim-2\",\n  type: \"primitiveNode\",\n  position: {\n    x: -50,\n    y: 550\n  },\n  dragHandle: \".custom-node-header\",\n  data: {\n    inputs: {},\n    sdf: \"\",\n    children: []\n  }\n}, {\n  id: \"deform-0\",\n  type: \"deformNode\",\n  dragHandle: \".custom-node-header\",\n  position: {\n    x: 200,\n    y: 0\n  },\n  data: {\n    inputs: {},\n    sdf: \"\",\n    children: []\n  }\n}, {\n  id: \"bool-1\",\n  type: \"booleanNode\",\n  dragHandle: \".custom-node-header\",\n  position: {\n    x: 200,\n    y: 325\n  },\n  data: {\n    inputs: {},\n    sdf: \"\",\n    children: []\n  }\n}, {\n  id: \"bool-2\",\n  type: \"booleanNode\",\n  dragHandle: \".custom-node-header\",\n  position: {\n    x: 450,\n    y: 150\n  },\n  data: {\n    inputs: {},\n    sdf: \"\",\n    children: []\n  }\n}];\n\nvar onInit = function onInit(reactFlowInstance) {\n  return console.log(\"flow loaded:\", reactFlowInstance);\n};\n\nexport default function Graph() {\n  var _useNodesState = useNodesState(initialNodes),\n      _useNodesState2 = _slicedToArray(_useNodesState, 3),\n      nodes = _useNodesState2[0],\n      setNodes = _useNodesState2[1],\n      onNodesChange = _useNodesState2[2];\n\n  var _useEdgesState = useEdgesState([]),\n      _useEdgesState2 = _slicedToArray(_useEdgesState, 3),\n      edges = _useEdgesState2[0],\n      setEdges = _useEdgesState2[1],\n      onEdgesChange = _useEdgesState2[2];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      rfInstance = _useState2[0],\n      setRfInstance = _useState2[1];\n\n  var _React$useState = React.useState(3),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      id = _React$useState2[0],\n      setId = _React$useState2[1];\n\n  var updateNodeSdf = function updateNodeSdf(id, newSdf, parent) {\n    console.log(\"ACTUALIZADONDO SDF DE \" + id);\n\n    var nodesCopy = _toConsumableArray(nodes);\n\n    var parent = nodesCopy.find(function (node) {\n      return node.id === id;\n    });\n    parent.data = _objectSpread(_objectSpread({}, parent.data), {}, {\n      sdf: newSdf\n    });\n\n    var _iterator = _createForOfIteratorHelper(parent.data.children),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var child = _step.value;\n\n        var _iterator2 = _createForOfIteratorHelper(nodesCopy),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var node = _step2.value;\n\n            if (node.id === child) {\n              var newInputs = node.data.inputs;\n              newInputs[\"\".concat(id)] = newSdf;\n              node.data = _objectSpread(_objectSpread({}, node.data), {}, {\n                inputs: newInputs\n              });\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    setNodes(nodesCopy);\n  };\n\n  var removeChild = function removeChild(parent, child) {\n    setNodes(function (nds) {\n      return nds.map(function (node) {\n        if (node.id === parent) {\n          console.log(\"ELIMINANDO HIJO \".concat(child, \" DE \").concat(parent));\n          var newChildren = node.data.children;\n          newChildren = newChildren.filter(function (c) {\n            return c.id != child;\n          });\n          node.data = _objectSpread(_objectSpread({}, node.data), {}, {\n            children: newChildren\n          });\n        }\n\n        if (node.id === child) {\n          console.log(\"ACTUALIZANDO \".concat(child));\n          var newInputs = node.data.inputs;\n          newInputs[\"\".concat(parent)] = \"\";\n          node.data = _objectSpread(_objectSpread({}, node.data), {}, {\n            inputs: newInputs\n          });\n        }\n\n        onNodesChange([node]);\n        return node;\n      });\n    });\n  };\n\n  var removeEdge = function removeEdge(edgeId) {\n    console.log(\"WDGES: \");\n    console.log(edges);\n    var edge = edges.find(function (e) {\n      return e.id === edgeId;\n    });\n    var newEdges = edges.filter(function (edge) {\n      console.log(edge.source);\n      return edge.id != edgeId;\n    });\n    setEdges(newEdges);\n    removeChild(edge.source, edge.target);\n  };\n\n  var sharedFunctions = {\n    updateNodeSdf: updateNodeSdf,\n    removeEdge: removeEdge\n  };\n\n  var onConnect = function onConnect(params) {\n    var sourceNode = nodes.find(function (n) {\n      return n.id === params.source;\n    }); // CREAMOS EDGE\n\n    setEdges(function (eds) {\n      return addEdge(_objectSpread(_objectSpread({}, params), {}, {\n        type: \"buttonEdge\",\n        animated: true,\n        markerEnd: {\n          type: MarkerType.Arrow,\n          color: \"#000\"\n        }\n      }), eds);\n    }); // AÑADIMOS HIJO AL PADRE\n\n    var newChildren = sourceNode.data.children;\n    newChildren.push(params.target);\n    setNodes(function (nds) {\n      return nds.map(function (node) {\n        if (node.id === params.source) {\n          console.log(\"A\\xD1ADIENDO HIJO \".concat(params.target, \" A \").concat(params.source)); // var newChildren = node.data.children;\n          // console.log(typeof newChildren);\n          // console.log(newChildren);\n          // newChildren.push(params.target);\n\n          console.log(newChildren);\n          node.data = _objectSpread(_objectSpread({}, node.data), {}, {\n            children: newChildren\n          });\n        }\n\n        if (node.id === params.target) {\n          console.log(\"INICIALIZANDO \".concat(params.source));\n          var newInputs = node.data.inputs;\n          newInputs[\"\".concat(params.source)] = sourceNode.data.sdf;\n          node.data = _objectSpread(_objectSpread({}, node.data), {}, {\n            inputs: newInputs\n          });\n        }\n\n        onNodesChange([node]);\n        return node;\n      });\n    }); // INICIAMOS HIJO\n  };\n\n  useEffect(function () {\n    console.log(\"NODOS ACTUALIZADOS\");\n    console.log(nodes);\n  }, [nodes]);\n  useEffect(function () {\n    console.log(\"NUEVO EDGE:\");\n    console.log(edges);\n  }, [edges]);\n\n  var onSave = function onSave() {\n    if (rfInstance) {\n      var flow = rfInstance.toObject();\n      console.log(\"FLOW SAVED:\");\n      console.log(flow);\n      localStorage.setItem(flowKey, JSON.stringify(flow));\n    }\n  };\n\n  var onLoad = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var flow, _flow$viewport, _flow$viewport$x, x, _flow$viewport$y, y, _flow$viewport$zoom, zoom;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              flow = JSON.parse(localStorage.getItem(flowKey));\n\n              if (flow) {\n                console.log(\"FLOW LOADED:\");\n                console.log(flow);\n                _flow$viewport = flow.viewport, _flow$viewport$x = _flow$viewport.x, x = _flow$viewport$x === void 0 ? 0 : _flow$viewport$x, _flow$viewport$y = _flow$viewport.y, y = _flow$viewport$y === void 0 ? 0 : _flow$viewport$y, _flow$viewport$zoom = _flow$viewport.zoom, zoom = _flow$viewport$zoom === void 0 ? 1 : _flow$viewport$zoom;\n                setNodes(flow.nodes || []);\n                setEdges(flow.edges || []);\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onLoad() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var newNode = function newNode(nodeType) {\n    var xPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var yPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    setId(id + 1);\n    var nodeId = \"node-\".concat(id);\n    return {\n      id: nodeId,\n      type: nodeType,\n      dragHandle: \".custom-node-header\",\n      position: {\n        x: xPos,\n        y: yPos\n      },\n      data: {\n        inputs: {},\n        sdf: \"\",\n        children: []\n      }\n    };\n  };\n\n  var handleKey = function handleKey(e) {\n    var node = null; // SPACE BAR\n\n    if (e.key.toLowerCase() === \"p\") node = newNode(\"primitiveNode\");else if (e.key.toLowerCase() === \"b\") node = newNode(\"booleanNode\");else if (e.key.toLowerCase() === \"d\") node = newNode(\"deformNode\");\n\n    if (node) {\n      nodes.push(node);\n      onNodesChange([node]); // Para actualizar\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100vh\"\n    },\n    tabIndex: \"0\",\n    onKeyDown: handleKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GraphProvider, {\n    value: sharedFunctions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    onConnect: onConnect // onDisconnect={onDisconnect}\n    ,\n    nodeTypes: nodeTypes,\n    edgeTypes: edgeTypes,\n    onInit: setRfInstance // onEdgeClick={(ev, edge) =>\n    //   setEdges(edges.filter((e) => e.id != edge.id))\n    // }\n    ,\n    snapToGrid: true,\n    fitView: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Background, {\n    variant: \"lines\",\n    color: \"#aaa\",\n    gap: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CustomControls, {\n    save: onSave,\n    load: onLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"names":["React","useState","useEffect","ReactFlow","addEdge","Background","useNodesState","useEdgesState","MarkerType","PrimitiveNode","BooleanNode","DeformNode","ButtonEdge","CustomControls","GraphProvider","flowKey","nodeTypes","primitiveNode","booleanNode","deformNode","edgeTypes","buttonEdge","initialNodes","id","type","position","x","y","dragHandle","data","inputs","sdf","children","onInit","reactFlowInstance","console","log","Graph","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","rfInstance","setRfInstance","setId","updateNodeSdf","newSdf","parent","nodesCopy","find","node","child","newInputs","removeChild","nds","map","newChildren","filter","c","removeEdge","edgeId","edge","e","newEdges","source","target","sharedFunctions","onConnect","params","sourceNode","n","eds","animated","markerEnd","Arrow","color","push","onSave","flow","toObject","localStorage","setItem","JSON","stringify","onLoad","parse","getItem","viewport","zoom","newNode","nodeType","xPos","yPos","nodeId","handleKey","key","toLowerCase","height"],"sources":["G:/gitlab/TFG/Aplicacion/src/Graph.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  useNodesState,\r\n  useEdgesState,\r\n  MarkerType,\r\n} from \"react-flow-renderer\";\r\nimport PrimitiveNode from \"./CustomNodes/PrimitiveNode.js\";\r\nimport BooleanNode from \"./CustomNodes/BooleanNode.js\";\r\nimport DeformNode from \"./CustomNodes/DeformNode.js\";\r\n\r\nimport ButtonEdge from \"./CustomNodes/ButtonEdge\";\r\nimport CustomControls from \"./CustomControls.js\";\r\nimport \"./styles.css\";\r\nimport { GraphProvider } from \"./GraphContext.js\";\r\n\r\nconst flowKey = \"savedGraph\";\r\nconst nodeTypes = { primitiveNode: PrimitiveNode, booleanNode: BooleanNode, deformNode: DeformNode };\r\nconst edgeTypes = { buttonEdge: ButtonEdge };\r\n\r\nconst initialNodes = [\r\n  {\r\n    id: `prim-0`,\r\n    type: \"primitiveNode\",\r\n    position: { x: -50, y: -150 },\r\n    dragHandle: \".custom-node-header\",\r\n    data: { inputs: {}, sdf: \"\", children: [] },\r\n  },\r\n  {\r\n    id: `prim-1`,\r\n    type: \"primitiveNode\",\r\n    dragHandle: \".custom-node-header\",\r\n    position: { x: -50, y: 200 },\r\n    data: { inputs: {}, sdf: \"\", children: [] },\r\n  },\r\n  {\r\n    id: `prim-2`,\r\n    type: \"primitiveNode\",\r\n    position: { x: -50, y: 550 },\r\n    dragHandle: \".custom-node-header\",\r\n    data: { inputs: {}, sdf: \"\", children: [] },\r\n  },\r\n  {\r\n    id: `deform-0`,\r\n    type: \"deformNode\",\r\n    dragHandle: \".custom-node-header\",\r\n    position: { x: 200, y: 0 },\r\n    data: { inputs: {}, sdf: \"\", children: [] },\r\n  },\r\n  {\r\n    id: `bool-1`,\r\n    type: \"booleanNode\",\r\n    dragHandle: \".custom-node-header\",\r\n    position: { x: 200, y: 325 },\r\n    data: { inputs: {}, sdf: \"\", children: [] },\r\n  },\r\n  {\r\n    id: `bool-2`,\r\n    type: \"booleanNode\",\r\n    dragHandle: \".custom-node-header\",\r\n    position: { x: 450, y: 150 },\r\n    data: { inputs: {}, sdf: \"\", children: [] },\r\n  },\r\n];\r\n\r\nconst onInit = (reactFlowInstance) =>\r\n  console.log(\"flow loaded:\", reactFlowInstance);\r\n\r\nexport default function Graph() {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [rfInstance, setRfInstance] = useState(null);\r\n  const [id, setId] = React.useState(3);\r\n\r\n  const updateNodeSdf = (id, newSdf, parent) => {\r\n    console.log(\"ACTUALIZADONDO SDF DE \" + id);\r\n    var nodesCopy = [...nodes];\r\n    var parent = nodesCopy.find((node) => node.id === id);\r\n    parent.data = {\r\n      ...parent.data,\r\n      sdf: newSdf,\r\n    };\r\n\r\n    for (var child of parent.data.children) {\r\n      for (var node of nodesCopy) {\r\n        if (node.id === child) {\r\n          var newInputs = node.data.inputs;\r\n          newInputs[`${id}`] = newSdf;\r\n\r\n          node.data = {\r\n            ...node.data,\r\n            inputs: newInputs,\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    setNodes(nodesCopy);\r\n  };\r\n\r\n  const removeChild = (parent, child) => {\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === parent) {\r\n          console.log(`ELIMINANDO HIJO ${child} DE ${parent}`);\r\n\r\n          var newChildren = node.data.children;\r\n          newChildren = newChildren.filter(function (c) {\r\n            return c.id != child;\r\n          });\r\n\r\n          node.data = {\r\n            ...node.data,\r\n            children: newChildren,\r\n          };\r\n        }\r\n        if (node.id === child) {\r\n          console.log(`ACTUALIZANDO ${child}`);\r\n          var newInputs = node.data.inputs;\r\n          newInputs[`${parent}`] = \"\";\r\n          node.data = {\r\n            ...node.data,\r\n            inputs: newInputs,\r\n          };\r\n        }\r\n\r\n        onNodesChange([node]);\r\n        return node;\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeEdge = (edgeId) => {\r\n    console.log(\"WDGES: \");\r\n    console.log(edges);\r\n    const edge = edges.find((e) => e.id === edgeId);\r\n\r\n    var newEdges = edges.filter((edge) => {\r\n      console.log(edge.source);\r\n      return edge.id != edgeId;\r\n    });\r\n\r\n    setEdges(newEdges);\r\n    removeChild(edge.source, edge.target);\r\n  };\r\n\r\n  const sharedFunctions = {\r\n    updateNodeSdf,\r\n    removeEdge,\r\n  };\r\n\r\n  const onConnect = (params) => {\r\n    const sourceNode = nodes.find((n) => n.id === params.source);\r\n\r\n    // CREAMOS EDGE\r\n    setEdges((eds) =>\r\n      addEdge(\r\n        {\r\n          ...params,\r\n          type: \"buttonEdge\",\r\n          animated: true,\r\n          markerEnd: { type: MarkerType.Arrow, color: \"#000\" },\r\n        },\r\n        eds\r\n      )\r\n    );\r\n\r\n    // AÑADIMOS HIJO AL PADRE\r\n    var newChildren = sourceNode.data.children;\r\n    newChildren.push(params.target);\r\n\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === params.source) {\r\n          console.log(`AÑADIENDO HIJO ${params.target} A ${params.source}`);\r\n\r\n          // var newChildren = node.data.children;\r\n          // console.log(typeof newChildren);\r\n          // console.log(newChildren);\r\n          // newChildren.push(params.target);\r\n          console.log(newChildren);\r\n          node.data = {\r\n            ...node.data,\r\n            children: newChildren,\r\n          };\r\n        }\r\n        if (node.id === params.target) {\r\n          console.log(`INICIALIZANDO ${params.source}`);\r\n          var newInputs = node.data.inputs;\r\n          newInputs[`${params.source}`] = sourceNode.data.sdf;\r\n          node.data = {\r\n            ...node.data,\r\n            inputs: newInputs,\r\n          };\r\n        }\r\n\r\n        onNodesChange([node]);\r\n        return node;\r\n      })\r\n    );\r\n\r\n    // INICIAMOS HIJO\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"NODOS ACTUALIZADOS\");\r\n    console.log(nodes);\r\n  }, [nodes]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"NUEVO EDGE:\");\r\n    console.log(edges);\r\n  }, [edges]);\r\n\r\n  const onSave = () => {\r\n    if (rfInstance) {\r\n      const flow = rfInstance.toObject();\r\n      console.log(\"FLOW SAVED:\");\r\n      console.log(flow);\r\n      localStorage.setItem(flowKey, JSON.stringify(flow));\r\n    }\r\n  };\r\n\r\n  const onLoad = async () => {\r\n    const flow = JSON.parse(localStorage.getItem(flowKey));\r\n\r\n    if (flow) {\r\n      console.log(\"FLOW LOADED:\");\r\n      console.log(flow);\r\n      const { x = 0, y = 0, zoom = 1 } = flow.viewport;\r\n      setNodes(flow.nodes || []);\r\n      setEdges(flow.edges || []);\r\n    }\r\n  };\r\n\r\n  const newNode = (nodeType, xPos = 0, yPos = 0) => {\r\n    setId(id + 1);\r\n    const nodeId = `node-${id}`;\r\n    return {\r\n      id: nodeId,\r\n      type: nodeType,\r\n      dragHandle: \".custom-node-header\",\r\n      position: { x: xPos, y: yPos },\r\n      data: {\r\n        inputs: {},\r\n        sdf: \"\",\r\n        children: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  const handleKey = (e) => {\r\n    let node = null;\r\n\r\n    // SPACE BAR\r\n    if (e.key.toLowerCase() === \"p\")      node = newNode(\"primitiveNode\");\r\n    else if (e.key.toLowerCase() === \"b\") node = newNode(\"booleanNode\");\r\n    else if (e.key.toLowerCase() === \"d\") node = newNode(\"deformNode\");\r\n\r\n    if(node){\r\n      nodes.push(node);\r\n      onNodesChange([node]); // Para actualizar\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }} tabIndex=\"0\" onKeyDown={handleKey}>\r\n      <GraphProvider value={sharedFunctions}>\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          // onDisconnect={onDisconnect}\r\n\r\n          nodeTypes={nodeTypes}\r\n          edgeTypes={edgeTypes}\r\n          onInit={setRfInstance}\r\n          // onEdgeClick={(ev, edge) =>\r\n          //   setEdges(edges.filter((e) => e.id != edge.id))\r\n          // }\r\n          snapToGrid={true}\r\n          fitView\r\n        >\r\n          <Background variant=\"lines\" color=\"#aaa\" gap={10} />\r\n          <CustomControls save={onSave} load={onLoad}/>\r\n        </ReactFlow>\r\n      </GraphProvider>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}