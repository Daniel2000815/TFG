{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Core = void 0;\n\nvar FunctionProvider_1 = require(\"../Providers/FunctionProvider\");\n\nvar OperatorDictionary_1 = require(\"../Providers/OperatorDictionary\");\n\nvar VariableDictionary_1 = require(\"../Providers/VariableDictionary\");\n\nvar Tokenizer_1 = require(\"../Parser/Tokenizer\");\n\nvar Expression_1 = require(\"../Parser/Expression\");\n\nvar pow_1 = require(\"../Functions/Core/operations/pow\");\n\nvar Parser_1 = require(\"../Parser/Parser\");\n\nvar Settings_1 = require(\"../Settings\");\n\nvar Math2_1 = require(\"../Functions/Math2\");\n\nvar Symbol_1 = require(\"../Types/Symbol\");\n\nvar Utils = __importStar(require(\"./Utils\"));\n\nvar Errors_1 = require(\"./Errors\");\n\nvar Groups_1 = require(\"../Types/Groups\");\n\nvar Frac_1 = require(\"../Types/Frac\");\n\nvar Vector_1 = require(\"../Types/Vector\");\n\nvar Matrix_1 = require(\"../Types/Matrix\");\n\nvar Scientific_1 = __importDefault(require(\"../Types/Scientific\"));\n\nvar LaTeX_1 = require(\"../LaTeX/LaTeX\");\n\nvar bigInt_1 = __importDefault(require(\"../3rdparty/bigInt\"));\n\nvar decimal_js_1 = __importDefault(require(\"decimal.js\"));\n\nvar exceptions = __importStar(require(\"./Errors\"));\n\nvar Core = /*#__PURE__*/_createClass(function Core() {\n  _classCallCheck(this, Core);\n\n  this.groups = Groups_1.Groups;\n  this.Symbol = Symbol_1.Symbol;\n  this.Expression = Expression_1.Expression;\n  this.Frac = Frac_1.Frac;\n  this.Vector = Vector_1.Vector;\n  this.Matrix = Matrix_1.Matrix;\n  this.Parser = Parser_1.Parser;\n  this.Scientific = Scientific_1.default;\n  this.Math2 = Math2_1.Math2;\n  this.LaTeX = LaTeX_1.LaTeX;\n  this.PARENTHESIS = Settings_1.Settings.PARENTHESIS;\n  this.Settings = Settings_1.Settings;\n  this.err = Errors_1.err;\n  this.bigInt = bigInt_1.default;\n  this.bigDec = decimal_js_1.default;\n  this.exceptions = exceptions;\n  var functionProvider = this.functionProvider = new FunctionProvider_1.FunctionProvider();\n  var operators = this.operators = new OperatorDictionary_1.OperatorDictionary();\n  var variableDictionary = this.variableDictionary = new VariableDictionary_1.VariableDictionary();\n  var units = {};\n  var tokenizer = new Tokenizer_1.Tokenizer(functionProvider, operators, units);\n  var peekers = this.peekers = {\n    pre_operator: [],\n    post_operator: [],\n    pre_function: [],\n    post_function: []\n  };\n  var EXPRESSIONS = this.EXPRESSIONS = [];\n  Expression_1.Expression.$EXPRESSIONS = EXPRESSIONS;\n  (0, pow_1.primeFactors)(314146179365); //link the Math2 object to Settings.FUNCTION_MODULES\n\n  Settings_1.Settings.FUNCTION_MODULES.push(Math2_1.Math2);\n  variableDictionary.reserveNames(Math2_1.Math2); //reserve the names in Math2\n\n  var parser = new Parser_1.Parser(tokenizer, operators, functionProvider, variableDictionary, peekers, units);\n  Parser_1.ParseDeps.parser = parser;\n  this.PARSER = parser;\n  variableDictionary.reserveNames(variableDictionary.getAllConstants());\n  variableDictionary.reserveNames(functionProvider.getFunctionDescriptors());\n  parser.initConstants(); //bug fix for error but needs to be revisited\n\n  if (!parser.error) parser.error = Errors_1.err; //Store the log and log10 functions\n\n  Settings_1.Settings.LOG_FNS = {\n    log: functionProvider.getFunctionDescriptor('log'),\n    log10: functionProvider.getFunctionDescriptor('log10')\n  };\n  this.Utils = Object.assign(Object.assign({}, Utils), {\n    clearU: function clearU(u) {\n      return variableDictionary.clearU(u);\n    },\n    getU: function getU(symbol) {\n      return variableDictionary.getU(symbol);\n    },\n    importFunctions: function importFunctions() {\n      return functionProvider.importFunctions();\n    },\n    reserveNames: function reserveNames(module) {\n      return variableDictionary.reserveNames(module);\n    },\n    isReserved: function isReserved(name) {\n      return variableDictionary.isReserved(name);\n    },\n    round: Utils.nround\n  });\n});\n\nexports.Core = Core;","map":{"version":3,"mappings":"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","names":["Core","Groups_1","Symbol_1","Expression_1","Frac_1","Vector_1","Matrix_1","Parser_1","Scientific_1","Math2_1","LaTeX_1","Settings_1","PARENTHESIS","Errors_1","bigInt_1","decimal_js_1","exceptions","functionProvider","FunctionProvider_1","operators","OperatorDictionary_1","variableDictionary","VariableDictionary_1","units","tokenizer","Tokenizer_1","peekers","pre_operator","post_operator","pre_function","post_function","EXPRESSIONS","$EXPRESSIONS","FUNCTION_MODULES","push","reserveNames","parser","PARSER","getAllConstants","getFunctionDescriptors","initConstants","error","LOG_FNS","log","getFunctionDescriptor","log10","Utils","Object","clearU","u","getU","symbol","importFunctions","module","isReserved","name","round","nround","exports"],"sourceRoot":"","sources":["../../src/Core/Core.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}