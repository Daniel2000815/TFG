{"ast":null,"code":"\"use strict\";\n\n//Math2 ========================================================================\n//This object holds additional functions for nerdamer. Think of it as an extension of the Math object.\n//I really don't like touching objects which aren't mine hence the reason for Math2. The names of the\n//functions within are pretty self-explanatory.\n//NOTE: DO NOT USE INLINE COMMENTS WITH THE MATH2 OBJECT! THIS BREAK DURING COMPILATION OF BUILDFUNCTION.\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Math2 = void 0;\nvar Frac_1 = require(\"../Types/Frac\");\nvar bigInt_1 = __importDefault(require(\"../3rdparty/bigInt\"));\nvar Utils_1 = require(\"../Core/Utils\");\nvar Symbol_1 = require(\"../Types/Symbol\");\nvar Math_consts_1 = require(\"./Math.consts\");\nvar Groups_1 = require(\"../Types/Groups\");\n// noinspection JSUnusedGlobalSymbols\nexports.Math2 = {\n  csc: function csc(x) {\n    return 1 / Math.sin(x);\n  },\n  sec: function sec(x) {\n    return 1 / Math.cos(x);\n  },\n  cot: function cot(x) {\n    return 1 / Math.tan(x);\n  },\n  acsc: function acsc(x) {\n    return Math.asin(1 / x);\n  },\n  asec: function asec(x) {\n    return Math.acos(1 / x);\n  },\n  acot: function acot(x) {\n    return Math.PI / 2 - Math.atan(x);\n  },\n  // https://gist.github.com/jiggzson/df0e9ae8b3b06ff3d8dc2aa062853bd8\n  erf: function erf(x) {\n    var t = 1 / (1 + 0.5 * Math.abs(x));\n    var result = 1 - t * Math.exp(-x * x - 1.26551223 + t * (1.00002368 + t * (0.37409196 + t * (0.09678418 + t * (-0.18628806 + t * (0.27886807 + t * (-1.13520398 + t * (1.48851587 + t * (-0.82215223 + t * 0.17087277)))))))));\n    return x >= 0 ? result : -result;\n  },\n  diff: function diff(f) {\n    var h = 0.001;\n    return function (x) {\n      return (f(x + h) - f(x - h)) / (2 * h);\n    };\n  },\n  median: function median() {\n    for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n      values[_key] = arguments[_key];\n    }\n    values.sort(function (a, b) {\n      return a - b;\n    });\n    var half = Math.floor(values.length / 2);\n    if (values.length % 2) return values[half];\n    return (values[half - 1] + values[half]) / 2.0;\n  },\n  /*\n   * Reverses continued fraction calculation\n   * @param {obj} contd\n   * @returns {Number}\n   */\n  fromContinued: function fromContinued(contd) {\n    var arr = contd.fractions.slice();\n    var e = 1 / arr.pop();\n    for (var i = 0, l = arr.length; i < l; i++) {\n      e = 1 / (arr.pop() + e);\n    }\n    return contd.sign * (contd.whole + e);\n  },\n  /*\n   * Calculates continued fractions\n   * @param {Number} n\n   * @param {Number} x The number of places\n   * @returns {Number}\n   */\n  continuedFraction: function continuedFraction(n, x) {\n    x = x || 20;\n    var sign = Math.sign(n); /*store the sign*/\n    var absn = Math.abs(n); /*get the absolute value of the number*/\n    var whole = Math.floor(absn); /*get the whole*/\n    var ni = absn - whole; /*subtract the whole*/\n    var c = 0; /*the counter to keep track of iterations*/\n    var done = false;\n    var epsilon = 1e-14;\n    var max = 1e7;\n    var e, w;\n    var retval = {\n      whole: whole,\n      sign: sign,\n      fractions: []\n    };\n    /*start calculating*/\n    while (!done && ni !== 0) {\n      /*invert and get the whole*/\n      e = 1 / ni;\n      w = Math.floor(e);\n      if (w > max) {\n        /*this signals that we may have already gone too far*/\n        var d = exports.Math2.fromContinued(retval) - n;\n        if (d <= Number.EPSILON) break;\n      }\n      /*add to result*/\n      retval.fractions.push(w);\n      /*move the ni to the decimal*/\n      ni = e - w;\n      /*ni should always be a decimal. If we have a whole number then we're in the rounding errors*/\n      if (ni <= epsilon || c >= x - 1) done = true;\n      c++;\n    }\n    /*cleanup 1/(n+1/1) = 1/(n+1) so just move the last digit one over if it's one*/\n    var idx = retval.fractions.length - 1;\n    if (retval.fractions[idx] === 1) {\n      retval.fractions.pop();\n      /*increase the last one by one*/\n      retval.fractions[--idx]++;\n    }\n    return retval;\n  },\n  bigpow: function bigpow(n, p) {\n    if (!(n instanceof Frac_1.Frac)) n = Frac_1.Frac.create(n);\n    if (!(p instanceof Frac_1.Frac)) p = Frac_1.Frac.create(p);\n    var retval = new Frac_1.Frac(0);\n    if (p.isInteger()) {\n      retval.num = n.num.pow(p.toString());\n      retval.den = n.den.pow(p.toString());\n    } else {\n      var num = Frac_1.Frac.create(Math.pow(n.num, p.num));\n      var den = Frac_1.Frac.create(Math.pow(n.den, p.num));\n      retval.num = exports.Math2.nthroot(num, p.den.toString());\n      retval.den = exports.Math2.nthroot(den, p.den);\n    }\n    return retval;\n  },\n  //http://stackoverflow.com/questions/15454183/how-to-make-a-function-that-computes-the-factorial-for-numbers-with-decimals\n  gamma: function gamma(z) {\n    var g = 7;\n    var C = [0.99999999999980993, 676.5203681218851, -1259.1392167224028, 771.32342877765313, -176.61502916214059, 12.507343278686905, -0.13857109526572012, 9.9843695780195716e-6, 1.5056327351493116e-7];\n    if (z < 0.5) return Math.PI / (Math.sin(Math.PI * z) * exports.Math2.gamma(1 - z));else {\n      z -= 1;\n      var x = C[0];\n      for (var i = 1; i < g + 2; i++) {\n        x += C[i] / (z + i);\n      }\n      var t = z + g + 0.5;\n      return Math.sqrt(2 * Math.PI) * Math.pow(t, z + 0.5) * Math.exp(-t) * x;\n    }\n  },\n  //factorial\n  bigfactorial: function bigfactorial(x) {\n    var retval = new bigInt_1.default(1);\n    for (var i = 2; i <= x; i++) {\n      retval = retval.times(i);\n    }\n    return new Frac_1.Frac(retval);\n  },\n  //https://en.wikipedia.org/wiki/Logarithm#Calculation\n  bigLog: function bigLog(x) {\n    if (Math_consts_1.BIGLOG_CACHE[x]) {\n      return Frac_1.Frac.quick.apply(null, Math_consts_1.BIGLOG_CACHE[x].split('/'));\n    }\n    x = new Frac_1.Frac(x);\n    var n = 80;\n    var retval = new Frac_1.Frac(0);\n    var a = x.subtract(new Frac_1.Frac(1));\n    var b = x.add(new Frac_1.Frac(1));\n    for (var i = 0; i < n; i++) {\n      var t = new Frac_1.Frac(2 * i + 1);\n      var k = exports.Math2.bigpow(a.divide(b), t);\n      var r = t.clone().invert().multiply(k);\n      retval = retval.add(r);\n    }\n    return retval.multiply(new Frac_1.Frac(2));\n  },\n  //the factorial function but using the big library instead\n  factorial: function factorial(x) {\n    var is_int = x % 1 === 0;\n    /*factorial for negative integers is complex infinity according to Wolfram Alpha*/\n    if (is_int && x < 0) return NaN;\n    if (!is_int) return exports.Math2.gamma(x + 1);\n    var retval = 1;\n    for (var i = 2; i <= x; i++) {\n      retval = retval * i;\n    }\n    return retval;\n  },\n  //double factorial\n  //http://mathworld.wolfram.com/DoubleFactorial.html\n  dfactorial: function dfactorial(x) {\n    if ((0, Utils_1.isInt)(x)) {\n      var even = x % 2 === 0;\n      /* If x = even then n = x/2 else n = (x-1)/2*/\n      var n = even ? x / 2 : (x + 1) / 2;\n      /*the return value*/\n      var r = new Frac_1.Frac(1);\n      /*start the loop*/\n      if (even) for (var i = 1; i <= n; i++) {\n        r = r.multiply(new Frac_1.Frac(2).multiply(new Frac_1.Frac(i)));\n      } else for (var _i = 1; _i <= n; _i++) {\n        r = r.multiply(new Frac_1.Frac(2).multiply(new Frac_1.Frac(_i)).subtract(new Frac_1.Frac(1)));\n      }\n    } else {\n      /*Not yet extended to bigNum*/\n      r = Math.pow(2, (1 + 2 * x - Math.cos(Math.PI * x)) / 4) * Math.pow(Math.PI, (Math.cos(Math.PI * x) - 1) / 4) * exports.Math2.gamma(1 + x / 2);\n    }\n    /*done*/\n    return r;\n  },\n  GCD: function GCD() {\n    var args = (0, Utils_1.arrayUnique)([].slice.call(arguments).map(function (x) {\n        return Math.abs(x);\n      })).sort(),\n      a = Math.abs(args.shift()),\n      n = args.length;\n    while (n-- > 0) {\n      var b = Math.abs(args.shift());\n      while (true) {\n        a %= b;\n        if (a === 0) {\n          a = b;\n          break;\n        }\n        b %= a;\n        if (b === 0) break;\n      }\n    }\n    return a;\n  },\n  QGCD: function QGCD() {\n    var args = [].slice.call(arguments);\n    var a = args[0];\n    for (var i = 1; i < args.length; i++) {\n      var b = args[i];\n      var sign = a.isNegative() && b.isNegative() ? -1 : 1;\n      a = b.gcd(a);\n      if (sign < 0) a.negate();\n    }\n    return a;\n  },\n  LCM: function LCM(a, b) {\n    return a * b / exports.Math2.GCD(a, b);\n  },\n  //pow but with the handling of negative numbers\n  //http://stackoverflow.com/questions/12810765/calculating-cubic-root-for-negative-number\n  pow: function pow(b, e) {\n    if (b < 0) {\n      if (Math.abs(e) < 1) {\n        /*nth root of a negative number is imaginary when n is even*/\n        if (1 / e % 2 === 0) return NaN;\n        return -Math.pow(Math.abs(b), e);\n      }\n    }\n    return Math.pow(b, e);\n  },\n  factor: function factor(n) {\n    n = Number(n);\n    var sign = Math.sign(n); /*store the sign*/\n    /*move the number to absolute value*/\n    n = Math.abs(n);\n    var ifactors = exports.Math2.ifactor(n);\n    var factors = new Symbol_1.Symbol();\n    factors.symbols = {};\n    factors.group = Groups_1.Groups.CB;\n    for (var x in ifactors) {\n      var factor = new Symbol_1.Symbol(1);\n      factor.group = Groups_1.Groups.P; /*cheat a little*/\n      factor.value = x;\n      factor.power = new Symbol_1.Symbol(ifactors[x]);\n      factors.symbols[x] = factor;\n    }\n    factors.updateHash();\n    if (n === 1) {\n      factors = new Symbol_1.Symbol(n);\n    }\n    /*put back the sign*/\n    if (sign < 0) factors.negate();\n    return factors;\n  },\n  /**\n   * Uses trial division\n   * @param {Integer} n - the number being factored\n   * @param {object} factors -  the factors object\n   * @returns {object}\n   */\n  sfactor: function sfactor(n, factors) {\n    factors = factors || {};\n    var r = Math.floor(Math.sqrt(n));\n    var lcprime = Math_consts_1.PRIMES[Math_consts_1.PRIMES.length - 1];\n    /*a one-time cost... Hopefully ... And don't bother for more than a million*/\n    /*takes too long*/\n    if (r > lcprime && n < 1e6) (0, Utils_1.generatePrimes)(r);\n    var l = Math_consts_1.PRIMES.length;\n    for (var i = 0; i < l; i++) {\n      var prime = Math_consts_1.PRIMES[i];\n      /*trial division*/\n      while (n % prime === 0) {\n        n = n / prime;\n        factors[prime] = (factors[prime] || 0) + 1;\n      }\n    }\n    if (n > 1) factors[n] = 1;\n    return factors;\n  },\n  /**\n   * Pollard's rho\n   * @param {Integer | string | bigInt} n\n   * @returns {object}\n   */\n  ifactor: function ifactor(n) {\n    var input = new bigInt_1.default(n);\n    n = String(n);\n    if (n === '0') return {\n      '0': 1\n    };\n    n = new bigInt_1.default(n); /*convert to bigInt for safety*/\n    var sign = n.sign ? -1 : 1;\n    n = n.abs();\n    var factors = {}; /*factor object being returned.*/\n    if (n.lt('65536')) {\n      /*less than 2^16 just use trial division*/\n      factors = exports.Math2.sfactor(n, factors);\n    } else {\n      var add = function add(e) {\n        if (!e.isPrime()) {\n          factors = exports.Math2.sfactor(e, factors);\n        } else factors[e] = (factors[e] || 0) + 1;\n      };\n      try {\n        //set a safety\n        var max = 1e3;\n        var safety = 0;\n        while (!n.abs().equals(1)) {\n          if (n.isPrime()) {\n            add(n);\n            break;\n          } else {\n            var factor;\n            (function () {\n              var rho = function rho(c) {\n                var xf = new bigInt_1.default(c),\n                  cz = 2,\n                  x = new bigInt_1.default(c),\n                  factor = new bigInt_1.default(1);\n                while (factor.equals(1)) {\n                  for (var i = 0; i <= cz && factor.equals(1); i++) {\n                    //trigger the safety\n                    if (safety++ > max) throw new Error('stopping');\n                    x = x.pow(2).add(1).mod(n);\n                    factor = bigInt_1.default.gcd(x.minus(xf).abs(), n);\n                  }\n                  cz = cz * 2;\n                  xf = x;\n                }\n                if (factor.equals(n)) {\n                  return rho(c + 1);\n                }\n                return factor;\n              };\n              factor = rho(2);\n              add(factor);\n              /*divide out the factor*/\n              n = n.divide(factor);\n            })();\n          }\n        }\n      } catch (e) {\n        //reset factors\n        factors = {};\n        add(input);\n      }\n    }\n    /*put the sign back*/\n    if (sign === -1) {\n      var sm = (0, Utils_1.arrayMin)(Object.keys(factors)); /*/get the smallest number*/\n      factors['-' + sm] = factors[sm];\n      delete factors[sm];\n    }\n    return factors;\n  },\n  //factors a number into rectangular box. If sides are primes that this will be\n  //their prime factors. e.g. 21 -> (7)(3), 133 -> (7)(19)\n  boxfactor: function boxfactor(n, max) {\n    max = max || 200; //stop after this number of iterations\n    var c,\n      r,\n      d = Math.floor(5 / 12 * n),\n      //the divisor\n      i = 0,\n      //number of iterations\n      safety = false;\n    while (true) {\n      c = Math.floor(n / d);\n      r = n % d;\n      if (r === 0) break; //we're done\n      if (safety) return [n, 1];\n      d = Math.max(r, d - r);\n      i++;\n      safety = i > max;\n    }\n    return [c, d, i];\n  },\n  fib: function fib(n) {\n    var sign = Math.sign(n);\n    n = Math.abs(n);\n    sign = (0, Utils_1.even)(n) ? sign : Math.abs(sign);\n    var a = 0,\n      b = 1,\n      f = 1;\n    for (var i = 2; i <= n; i++) {\n      f = a + b;\n      a = b;\n      b = f;\n    }\n    return f * sign;\n  },\n  mod: function mod(x, y) {\n    return x % y;\n  },\n  //http://mathworld.wolfram.com/IntegerPart.html\n  integer_part: function integer_part(x) {\n    var sign = Math.sign(x);\n    return sign * Math.floor(Math.abs(x));\n  },\n  simpson: function simpson(f, a, b, step) {\n    var get_value = function get_value(f, x, side) {\n      var v = f(x);\n      var d = 0.000000000001;\n      if (isNaN(v)) {\n        v = f(side === 1 ? x + d : x - d);\n      }\n      return v;\n    };\n    step = step || 0.0001;\n    //calculate the number of intervals\n    var n = Math.abs(Math.floor((b - a) / step));\n    //simpson's rule requires an even number of intervals. If it's not then add 1\n    if (n % 2 !== 0) n++;\n    //get the interval size\n    var dx = (b - a) / n;\n    //get x0\n    var retval = get_value(f, a, 1);\n    //get the middle part 4x1+2x2+4x3 ...\n    //but first set a flag to see if it's even or odd.\n    //The first one is odd so we start there\n    var even = false;\n    //get x1\n    var xi = a + dx;\n    //the coefficient\n    var c, k;\n    //https://en.wikipedia.org/wiki/Simpson%27s_rule\n    for (var i = 1; i < n; i++) {\n      c = even ? 2 : 4;\n      k = c * get_value(f, xi, 1);\n      retval += k;\n      //flip the even flag\n      even = !even;\n      //increment xi\n      xi += dx;\n    }\n    //add xn\n    return (retval + get_value(f, xi, 2)) * (dx / 3);\n  },\n  /**\n   * https://github.com/scijs/integrate-adaptive-simpson\n   * @param {Function} f - the function being integrated\n   * @param {Number} a - lower bound\n   * @param {Number} b - upper bound\n   * @param {Number} tol - step width\n   * @param {Number} maxdepth\n   * @returns {Number}\n   */\n  num_integrate: function num_integrate(f, a, b, tol, maxdepth) {\n    if (maxdepth < 0) throw new Error('max depth cannot be negative');\n    /* This algorithm adapted from pseudocode in:*/\n    /* http://www.math.utk.edu/~ccollins/refs/Handouts/rich.pdf*/\n    function adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, depth, state) {\n      if (state.nanEncountered) {\n        return NaN;\n      }\n      var h, f1, f2, sl, sr, s2, m, V1, V2, err;\n      h = b - a;\n      f1 = f(a + h * 0.25);\n      f2 = f(b - h * 0.25);\n      /* Simple check for NaN:*/\n      if (isNaN(f1)) {\n        state.nanEncountered = true;\n        return;\n      }\n      /* Simple check for NaN:*/\n      if (isNaN(f2)) {\n        state.nanEncountered = true;\n        return;\n      }\n      sl = h * (fa + 4 * f1 + fm) / 12;\n      sr = h * (fm + 4 * f2 + fb) / 12;\n      s2 = sl + sr;\n      err = (s2 - V0) / 15;\n      if (state.maxDepthCount > 1000 * maxdepth) {\n        return;\n      }\n      if (depth > maxdepth) {\n        state.maxDepthCount++;\n        return s2 + err;\n      } else if (Math.abs(err) < tol) {\n        return s2 + err;\n      } else {\n        m = a + h * 0.5;\n        V1 = adsimp(f, a, m, fa, f1, fm, sl, tol * 0.5, maxdepth, depth + 1, state);\n        if (isNaN(V1)) {\n          state.nanEncountered = true;\n          return NaN;\n        }\n        V2 = adsimp(f, m, b, fm, f2, fb, sr, tol * 0.5, maxdepth, depth + 1, state);\n        if (isNaN(V2)) {\n          state.nanEncountered = true;\n          return NaN;\n        }\n        return V1 + V2;\n      }\n    }\n    function integrate(f, a, b, tol, maxdepth) {\n      var state = {\n        maxDepthCount: 0,\n        nanEncountered: false\n      };\n      if (tol === undefined) {\n        tol = 1e-9;\n      }\n      if (maxdepth === undefined) {\n        /*Issue #458 - This was lowered because of performance issues. */\n        /*This was suspected from before but is now confirmed with this issue*/\n        maxdepth = 45;\n      }\n      var fa = f(a);\n      var fm = f(0.5 * (a + b));\n      var fb = f(b);\n      var V0 = (fa + 4 * fm + fb) * (b - a) / 6;\n      var result = adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, 1, state);\n      if (state.maxDepthCount > 0) {\n        (0, Utils_1.warn)('integrate-adaptive-simpson: Warning: maximum recursion depth (' + maxdepth + ') reached ' + state.maxDepthCount + ' times');\n      }\n      if (state.nanEncountered) {\n        throw new Error('Function does not converge over interval!');\n      }\n      return result;\n    }\n    var retval;\n    try {\n      retval = integrate(f, a, b, tol, maxdepth);\n    } catch (e) {\n      /*fallback to non-adaptive*/\n      return exports.Math2.simpson(f, a, b);\n    }\n    return (0, Utils_1.nround)(retval, 12);\n  },\n  //https://en.wikipedia.org/wiki/Trigonometric_integral\n  //CosineIntegral\n  Ci: function Ci(x) {\n    var n = 20,\n      /*roughly Euler–Mascheroni*/\n      g = 0.5772156649015329,\n      sum = 0;\n    for (var i = 1; i < n; i++) {\n      /*cache 2n*/\n      var n2 = 2 * i;\n      sum += Math.pow(-1, i) * Math.pow(x, n2) / (n2 * exports.Math2.factorial(n2));\n    }\n    return Math.log(x) + g + sum;\n  },\n  /*SineIntegral*/\n  Si: function Si(x) {\n    var n = 20,\n      sum = 0;\n    for (var i = 0; i < n; i++) {\n      var n2 = 2 * i;\n      sum += Math.pow(-1, i) * Math.pow(x, n2 + 1) / ((n2 + 1) * exports.Math2.factorial(n2 + 1));\n    }\n    return sum;\n  },\n  /*ExponentialIntegral*/\n  Ei: function Ei(x) {\n    if (Number(x) === 0) return -Infinity;\n    var n = 30,\n      g = 0.5772156649015328606,\n      /*roughly Euler–Mascheroni*/sum = 0;\n    for (var i = 1; i < n; i++) {\n      sum += Math.pow(x, i) / (i * exports.Math2.factorial(i));\n    }\n    return g + Math.abs(Math.log(x)) + sum;\n  },\n  /*Hyperbolic Sine Integral*/\n  /*http://mathworld.wolfram.com/Shi.html*/\n  Shi: function Shi(x) {\n    var n = 30,\n      sum = 0,\n      k,\n      t;\n    for (var i = 0; i < n; i++) {\n      k = 2 * i;\n      t = k + 1;\n      sum += Math.pow(x, t) / (t * t * exports.Math2.factorial(k));\n    }\n    return sum;\n  },\n  /*the cosine integral function*/\n  Chi: function Chi(x) {\n    var dx, g, f;\n    dx = 0.001;\n    g = 0.5772156649015328606;\n    f = function f(t) {\n      return (Math.cosh(t) - 1) / t;\n    };\n    return Math.log(x) + g + exports.Math2.num_integrate(f, 0.002, x, dx);\n  },\n  /*the log integral*/\n  Li: function Li(x) {\n    return exports.Math2.Ei(exports.Math2.bigLog(x));\n  },\n  /*the gamma incomplete function*/\n  gamma_incomplete: function gamma_incomplete(n) {\n    var x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var t = n - 1,\n      sum = 0;\n    for (var i = 0; i < t; i++) {\n      sum += Math.pow(x, i) / exports.Math2.factorial(i);\n    }\n    return exports.Math2.factorial(t) * Math.exp(-x) * sum;\n  },\n  /*\n   * Heaviside step function - Moved from Special.js (originally contributed by Brosnan Yuen)\n   * Specification : http://mathworld.wolfram.com/HeavisideStepFunction.html\n   * if x > 0 then 1\n   * if x == 0 then 1/2\n   * if x < 0 then 0\n   */\n  step: function step(x) {\n    if (x > 0) return 1;\n    if (x < 0) return 0;\n    return 0.5;\n  },\n  /*\n   * Rectangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\n   * Specification : http://mathworld.wolfram.com/RectangleFunction.html\n   * if |x| > 1/2 then 0\n   * if |x| == 1/2 then 1/2\n   * if |x| < 1/2 then 1\n   */\n  rect: function rect(x) {\n    x = Math.abs(x);\n    if (x === 0.5) return x;\n    if (x > 0.5) return 0;\n    return 1;\n  },\n  /*\n   * Sinc function - Moved from Special.js (originally contributed by Brosnan Yuen)\n   * Specification : http://mathworld.wolfram.com/SincFunction.html\n   * if x == 0 then 1\n   * otherwise sin(x)/x\n   */\n  sinc: function sinc(x) {\n    if (x.equals(0)) return 1;\n    return Math.sin(x) / x;\n  },\n  /*\n   * Triangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\n   * Specification : http://mathworld.wolfram.com/TriangleFunction.html\n   * if |x| >= 1 then 0\n   * if |x| < then 1-|x|\n   */\n  tri: function tri(x) {\n    x = Math.abs(x);\n    if (x >= 1) return 0;\n    return 1 - x;\n  },\n  //https://en.wikipedia.org/wiki/Nth_root_algorithm\n  nthroot: function nthroot(A, n) {\n    /*make sure the input is of type Frac*/\n    if (!(A instanceof Frac_1.Frac)) A = new Frac_1.Frac(A.toString());\n    if (!(n instanceof Frac_1.Frac)) n = new Frac_1.Frac(n.toString());\n    if (n.equals(1)) return A;\n    /*begin algorithm*/\n    var xk = A.divide(new Frac_1.Frac(2)); /*x0*/\n    var e = new Frac_1.Frac(1e-15);\n    var dk, dk0, d0;\n    var a = n.clone().invert(),\n      b = n.subtract(new Frac_1.Frac(1));\n    do {\n      var powb = exports.Math2.bigpow(xk, b);\n      var dk_dec = a.multiply(A.divide(powb).subtract(xk)).toDecimal(25);\n      dk = Frac_1.Frac.create(dk_dec);\n      if (d0) break;\n      xk = xk.add(dk);\n      /*check to see if there's no change from the last xk*/\n      dk_dec = dk.toDecimal();\n      d0 = dk0 ? dk0 === dk_dec : false;\n      dk0 = dk_dec;\n    } while (dk.abs().gte(e));\n    return xk;\n  },\n  /*https://gist.github.com/jiggzson/0c5b33cbcd7b52b36132b1e96573285f*/\n  /*Just the square root function but big :)*/\n  sqrt: function sqrt(n) {\n    if (!(n instanceof Frac_1.Frac)) n = new Frac_1.Frac(n);\n    var xn, d, ld, same_delta;\n    var c = 0; /*counter*/\n    var done = false;\n    var delta = new Frac_1.Frac(1e-20);\n    xn = n.divide(new Frac_1.Frac(2));\n    var safety = 1000;\n    do {\n      /*break if we're not converging*/\n      if (c > safety) throw new Error('Unable to calculate square root for ' + n);\n      xn = xn.add(n.divide(xn)).divide(new Frac_1.Frac(2));\n      xn = new Frac_1.Frac(xn.decimal(30));\n      /*get the difference from the true square*/\n      d = n.subtract(xn.multiply(xn));\n      /*if the square of the calculated number is close enough to the number*/\n      /*we're getting the square root or the last delta was the same as the new delta*/\n      /*then we're done*/\n      same_delta = ld ? ld.equals(d) : false;\n      if (d.clone().abs().lessThan(delta) || same_delta) done = true;\n      /*store the calculated delta*/\n      ld = d;\n      c++; /*increase the counter*/\n    } while (!done);\n    return xn;\n  }\n};\n/**\n * Convert number from scientific format to decimal format\n * @param {Number} num\n */\nvar scientificToDecimal = function scientificToDecimal(value) {\n  var nsign = Math.sign(value);\n  //remove the sign\n  var num = Math.abs(value);\n  //if the number is in scientific notation remove it\n  if (/\\d+\\.?\\d*e[+\\-]*\\d+/i.test(num.toString())) {\n    var zero = '0',\n      parts = String(num).toLowerCase().split('e'),\n      //split into coeff and exponent\n      e = parts.pop(),\n      //store the exponential part\n      l = Math.abs(e),\n      //get the number of zeros\n      sign = e / l,\n      coeff_array = parts[0].split('.');\n    if (sign === -1) {\n      l = l - coeff_array[0].length;\n      if (l < 0) {\n        num = coeff_array[0].slice(0, l) + '.' + coeff_array[0].slice(l) + (coeff_array.length === 2 ? coeff_array[1] : '');\n      } else {\n        num = zero + '.' + new Array(l + 1).join(zero) + coeff_array.join('');\n      }\n    } else {\n      var dec = coeff_array[1];\n      if (dec) l = l - dec.length;\n      if (l < 0) {\n        num = coeff_array[0] + dec.slice(0, l) + '.' + dec.slice(l);\n      } else {\n        num = coeff_array.join('') + new Array(l + 1).join(zero);\n      }\n    }\n  }\n  return nsign < 0 ? '-' + num : num;\n};\nexports.Math2.scientificToDecimal = scientificToDecimal;\n//Polyfills ====================================================================\n//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/\nMath.sign = Math.sign || function (x) {\n  x = +x; // convert to a number\n  if (x === 0 || isNaN(x)) {\n    return x;\n  }\n  return x > 0 ? 1 : -1;\n};\nMath.cosh = Math.cosh || function (x) {\n  var y = Math.exp(x);\n  return (y + 1 / y) / 2;\n};\nMath.sech = Math.sech || function (x) {\n  return 1 / Math.cosh(x);\n};\nMath.csch = Math.csch || function (x) {\n  return 1 / Math.sinh(x);\n};\nMath.coth = Math.coth || function (x) {\n  return 1 / Math.tanh(x);\n};\nMath.sinh = Math.sinh || function (x) {\n  var y = Math.exp(x);\n  return (y - 1 / y) / 2;\n};\nMath.tanh = Math.tanh || function (x) {\n  if (x === Infinity) {\n    return 1;\n  } else if (x === -Infinity) {\n    return -1;\n  } else {\n    var y = Math.exp(2 * x);\n    return (y - 1) / (y + 1);\n  }\n};\nMath.asinh = Math.asinh || function (x) {\n  if (x === -Infinity) {\n    return x;\n  } else {\n    return Math.log(x + Math.sqrt(x * x + 1));\n  }\n};\nMath.acosh = Math.acosh || function (x) {\n  return Math.log(x + Math.sqrt(x * x - 1));\n};\nMath.atanh = Math.atanh || function (x) {\n  return Math.log((1 + x) / (1 - x)) / 2;\n};\nMath.log10 = Math.log10 || function (x) {\n  return Math.log(x) * Math.LOG10E;\n};\nMath.trunc = Math.trunc || function (x) {\n  if (isNaN(x)) {\n    return NaN;\n  }\n  if (x > 0) {\n    return Math.floor(x);\n  }\n  return Math.ceil(x);\n};","map":{"version":3,"mappings":"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","names":["exports","csc","x","Math","sin","sec","cos","cot","tan","acsc","asin","asec","acos","acot","PI","atan","erf","t","abs","result","exp","diff","f","h","median","values","sort","a","b","half","floor","length","fromContinued","contd","arr","fractions","slice","e","pop","i","l","sign","whole","continuedFraction","n","absn","ni","c","done","epsilon","max","w","retval","d","Number","EPSILON","push","idx","bigpow","p","Frac_1","create","isInteger","num","pow","toString","den","nthroot","gamma","z","g","C","sqrt","bigfactorial","bigInt_1","times","bigLog","Math_consts_1","quick","apply","split","subtract","add","k","divide","r","clone","invert","multiply","factorial","is_int","NaN","dfactorial","even","GCD","args","call","arguments","map","shift","QGCD","isNegative","gcd","negate","LCM","factor","ifactors","ifactor","factors","Symbol_1","symbols","group","Groups_1","CB","P","value","power","updateHash","sfactor","lcprime","prime","input","String","lt","isPrime","safety","equals","rho","xf","cz","Error","mod","minus","sm","Object","keys","boxfactor","fib","y","integer_part","simpson","step","get_value","side","v","isNaN","dx","xi","num_integrate","tol","maxdepth","adsimp","fa","fm","fb","V0","depth","state","nanEncountered","f1","f2","sl","sr","s2","m","V1","V2","err","maxDepthCount","integrate","undefined","Ci","sum","n2","log","Si","Ei","Infinity","Shi","Chi","cosh","Li","gamma_incomplete","rect","sinc","tri","A","xk","dk","dk0","d0","powb","dk_dec","toDecimal","gte","xn","ld","same_delta","delta","decimal","lessThan","scientificToDecimal","nsign","test","zero","parts","toLowerCase","coeff_array","Array","join","dec","sech","csch","sinh","coth","tanh","asinh","acosh","atanh","log10","LOG10E","trunc","ceil"],"sourceRoot":"","sources":["../../src/Functions/Math2.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}