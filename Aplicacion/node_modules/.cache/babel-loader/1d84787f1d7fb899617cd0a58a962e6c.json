{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sinc = void 0;\nvar Settings_1 = require(\"../../../Settings\");\nvar Symbol_1 = require(\"../../../Types/Symbol\");\nvar Math2_1 = require(\"../../Math2\");\nvar Utils_1 = require(\"../../../Core/Utils\");\nvar Parser_1 = require(\"../../../Parser/Parser\");\n/**\n * A symbolic extension for sinc\n * @param {Symbol} symbol\n * @returns {Symbol}\n */\nfunction sinc(symbol) {\n  if (Settings_1.Settings.PARSE2NUMBER) {\n    if (symbol.isConstant()) {\n      return new Symbol_1.Symbol(Math2_1.Math2.sinc(symbol));\n    }\n    return (0, Parser_1.parse)((0, Utils_1.format)('sin({0})/({0})', symbol));\n  }\n  return (0, Symbol_1.symfunction)('sinc', [symbol]);\n}\nexports.sinc = sinc;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;AAKA,SAAgBA,IAAI,CAACC,MAAM;EACvB,IAAIC,mBAAQ,CAACC,YAAY,EAAE;IACvB,IAAIF,MAAM,CAACG,UAAU,EAAE,EAAE;MACrB,OAAO,IAAIC,eAAM,CAACC,aAAK,CAACN,IAAI,CAACC,MAAM,CAAC,CAAC;;IAEzC,OAAO,kBAAK,EAAC,kBAAM,EAAC,gBAAgB,EAAEA,MAAM,CAAC,CAAC;;EAElD,OAAO,wBAAW,EAAC,MAAM,EAAE,CAACA,MAAM,CAAC,CAAC;AACxC;AARAM","names":["sinc","symbol","Settings_1","PARSE2NUMBER","isConstant","Symbol_1","Math2_1","exports"],"sourceRoot":"","sources":["../../../../src/Functions/Core/math/sinc.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}