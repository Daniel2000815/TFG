{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = replaceToken;\n\nvar _Token = require(\"../Token\");\n\nvar _Token2 = _interopRequireDefault(_Token);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // This table lists tokens that should be replaced by other tokens before parsing.\n// The key has format \"{token type}:{token value}\"\n\n/**\n * Replaces a token according to a set of replacement rules. This simplifies parsing and makes LaTeX work better.\n * @param token\n * @returns {*}\n */\n\n\nfunction replaceToken(token) {\n  // if (token.type === Token.TYPE_COMMAND && token.value === \"\\\\left(\") {\n  //     return new Token(Token.TYPE_LPAREN, \"(\");\n  // }\n  // else if (token.type === Token.TYPE_COMMAND && token.value === \"\\\\right(\") {\n  //     return new Token(Token.TYPE_RPAREN, \"(\");\n  // }\n  // else if (token.type === Token.TYPE_COMMAND && token.value === \"\\\\left[\") {\n  //     return new Token(Token.TYPE_LPAREN, \"[\");\n  // }\n  // else if (token.type === Token.TYPE_COMMAND && token.value === \"\\\\right]\") {\n  //     return new Token(Token.TYPE_RPAREN, \"]\");\n  // }\n  if (token.type === _Token2.default.TYPE_COMMAND && [\"\\\\cdot\", \"\\\\times\"].includes(token.value)) {\n    return new _Token2.default(_Token2.default.TYPE_TIMES, \"*\");\n  }\n\n  return token;\n}\n\n;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","replaceToken","_Token","require","_Token2","_interopRequireDefault","obj","__esModule","token","type","TYPE_COMMAND","includes","TYPE_TIMES"],"sources":["C:/Users/daniz/TFG/Aplicacion/node_modules/evaluatex/dist/util/replaceToken.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = replaceToken;\n\nvar _Token = require(\"../Token\");\n\nvar _Token2 = _interopRequireDefault(_Token);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// This table lists tokens that should be replaced by other tokens before parsing.\n// The key has format \"{token type}:{token value}\"\n\n/**\n * Replaces a token according to a set of replacement rules. This simplifies parsing and makes LaTeX work better.\n * @param token\n * @returns {*}\n */\nfunction replaceToken(token) {\n    // if (token.type === Token.TYPE_COMMAND && token.value === \"\\\\left(\") {\n    //     return new Token(Token.TYPE_LPAREN, \"(\");\n    // }\n    // else if (token.type === Token.TYPE_COMMAND && token.value === \"\\\\right(\") {\n    //     return new Token(Token.TYPE_RPAREN, \"(\");\n    // }\n    // else if (token.type === Token.TYPE_COMMAND && token.value === \"\\\\left[\") {\n    //     return new Token(Token.TYPE_LPAREN, \"[\");\n    // }\n    // else if (token.type === Token.TYPE_COMMAND && token.value === \"\\\\right]\") {\n    //     return new Token(Token.TYPE_RPAREN, \"]\");\n    // }\n    if (token.type === _Token2.default.TYPE_COMMAND && [\"\\\\cdot\", \"\\\\times\"].includes(token.value)) {\n        return new _Token2.default(_Token2.default.TYPE_TIMES, \"*\");\n    }\n    return token;\n};"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EACzCC,KAAK,EAAE;AADkC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,YAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACH,MAAD,CAApC;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAAEN,OAAO,EAAEM;EAAX,CAArC;AAAwD,C,CAE/F;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA,SAASL,YAAT,CAAsBO,KAAtB,EAA6B;EACzB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIA,KAAK,CAACC,IAAN,KAAeL,OAAO,CAACJ,OAAR,CAAgBU,YAA/B,IAA+C,CAAC,QAAD,EAAW,SAAX,EAAsBC,QAAtB,CAA+BH,KAAK,CAACT,KAArC,CAAnD,EAAgG;IAC5F,OAAO,IAAIK,OAAO,CAACJ,OAAZ,CAAoBI,OAAO,CAACJ,OAAR,CAAgBY,UAApC,EAAgD,GAAhD,CAAP;EACH;;EACD,OAAOJ,KAAP;AACH;;AAAA"},"metadata":{},"sourceType":"script"}