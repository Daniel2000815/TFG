{"ast":null,"code":"\"use strict\";\n\n/* BigInterger.js v1.6.40 https://github.com/peterolson/BigInteger.js/blob/master/LICENSE */\n//https://github.com/peterolson/BigInteger.js\nmodule.exports = function () {\n  var bigInt = function (undefined) {\n    \"use strict\";\n\n    var BASE = 1e7,\n      LOG_BASE = 7,\n      MAX_INT = 9007199254740992,\n      MAX_INT_ARR = smallToArray(MAX_INT),\n      LOG_MAX_INT = Math.log(MAX_INT);\n    function Integer(v, radix) {\n      if (typeof v === \"undefined\") return Integer[0];\n      if (typeof radix !== \"undefined\") return +radix === 10 ? parseValue(v) : parseBase(v, radix);\n      return parseValue(v);\n    }\n    function BigInteger(value, sign) {\n      this.value = value;\n      this.sign = sign;\n      this.isSmall = false;\n    }\n    BigInteger.prototype = Object.create(Integer.prototype);\n    function SmallInteger(value) {\n      this.value = value;\n      this.sign = value < 0;\n      this.isSmall = true;\n    }\n    SmallInteger.prototype = Object.create(Integer.prototype);\n    function isPrecise(n) {\n      return -MAX_INT < n && n < MAX_INT;\n    }\n    function smallToArray(n) {\n      if (n < 1e7) return [n];\n      if (n < 1e14) return [n % 1e7, Math.floor(n / 1e7)];\n      return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\n    }\n    function arrayToSmall(arr) {\n      trim(arr);\n      var length = arr.length;\n      if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\n        switch (length) {\n          case 0:\n            return 0;\n          case 1:\n            return arr[0];\n          case 2:\n            return arr[0] + arr[1] * BASE;\n          default:\n            return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\n        }\n      }\n      return arr;\n    }\n    function trim(v) {\n      var i = v.length;\n      while (v[--i] === 0) {\n        ;\n      }\n      v.length = i + 1;\n    }\n    function createArray(length) {\n      var x = new Array(length);\n      var i = -1;\n      while (++i < length) {\n        x[i] = 0;\n      }\n      return x;\n    }\n    function truncate(n) {\n      if (n > 0) return Math.floor(n);\n      return Math.ceil(n);\n    }\n    function add(a, b) {\n      var l_a = a.length,\n        l_b = b.length,\n        r = new Array(l_a),\n        carry = 0,\n        base = BASE,\n        sum,\n        i;\n      for (i = 0; i < l_b; i++) {\n        sum = a[i] + b[i] + carry;\n        carry = sum >= base ? 1 : 0;\n        r[i] = sum - carry * base;\n      }\n      while (i < l_a) {\n        sum = a[i] + carry;\n        carry = sum === base ? 1 : 0;\n        r[i++] = sum - carry * base;\n      }\n      if (carry > 0) r.push(carry);\n      return r;\n    }\n    function addAny(a, b) {\n      if (a.length >= b.length) return add(a, b);\n      return add(b, a);\n    }\n    function addSmall(a, carry) {\n      var l = a.length,\n        r = new Array(l),\n        base = BASE,\n        sum,\n        i;\n      for (i = 0; i < l; i++) {\n        sum = a[i] - base + carry;\n        carry = Math.floor(sum / base);\n        r[i] = sum - carry * base;\n        carry += 1;\n      }\n      while (carry > 0) {\n        r[i++] = carry % base;\n        carry = Math.floor(carry / base);\n      }\n      return r;\n    }\n    BigInteger.prototype.add = function (v) {\n      var n = parseValue(v);\n      if (this.sign !== n.sign) {\n        return this.subtract(n.negate());\n      }\n      var a = this.value,\n        b = n.value;\n      if (n.isSmall) {\n        return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\n      }\n      return new BigInteger(addAny(a, b), this.sign);\n    };\n    BigInteger.prototype.plus = BigInteger.prototype.add;\n    SmallInteger.prototype.add = function (v) {\n      var n = parseValue(v);\n      var a = this.value;\n      if (a < 0 !== n.sign) {\n        return this.subtract(n.negate());\n      }\n      var b = n.value;\n      if (n.isSmall) {\n        if (isPrecise(a + b)) return new SmallInteger(a + b);\n        b = smallToArray(Math.abs(b));\n      }\n      return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\n    };\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\n    function subtract(a, b) {\n      var a_l = a.length,\n        b_l = b.length,\n        r = new Array(a_l),\n        borrow = 0,\n        base = BASE,\n        i,\n        difference;\n      for (i = 0; i < b_l; i++) {\n        difference = a[i] - borrow - b[i];\n        if (difference < 0) {\n          difference += base;\n          borrow = 1;\n        } else borrow = 0;\n        r[i] = difference;\n      }\n      for (i = b_l; i < a_l; i++) {\n        difference = a[i] - borrow;\n        if (difference < 0) difference += base;else {\n          r[i++] = difference;\n          break;\n        }\n        r[i] = difference;\n      }\n      for (; i < a_l; i++) {\n        r[i] = a[i];\n      }\n      trim(r);\n      return r;\n    }\n    function subtractAny(a, b, sign) {\n      var value;\n      if (compareAbs(a, b) >= 0) {\n        value = subtract(a, b);\n      } else {\n        value = subtract(b, a);\n        sign = !sign;\n      }\n      value = arrayToSmall(value);\n      if (typeof value === \"number\") {\n        if (sign) value = -value;\n        return new SmallInteger(value);\n      }\n      return new BigInteger(value, sign);\n    }\n    function subtractSmall(a, b, sign) {\n      var l = a.length,\n        r = new Array(l),\n        carry = -b,\n        base = BASE,\n        i,\n        difference;\n      for (i = 0; i < l; i++) {\n        difference = a[i] + carry;\n        carry = Math.floor(difference / base);\n        difference %= base;\n        r[i] = difference < 0 ? difference + base : difference;\n      }\n      r = arrayToSmall(r);\n      if (typeof r === \"number\") {\n        if (sign) r = -r;\n        return new SmallInteger(r);\n      }\n      return new BigInteger(r, sign);\n    }\n    BigInteger.prototype.subtract = function (v) {\n      var n = parseValue(v);\n      if (this.sign !== n.sign) {\n        return this.add(n.negate());\n      }\n      var a = this.value,\n        b = n.value;\n      if (n.isSmall) return subtractSmall(a, Math.abs(b), this.sign);\n      return subtractAny(a, b, this.sign);\n    };\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\n    SmallInteger.prototype.subtract = function (v) {\n      var n = parseValue(v);\n      var a = this.value;\n      if (a < 0 !== n.sign) {\n        return this.add(n.negate());\n      }\n      var b = n.value;\n      if (n.isSmall) {\n        return new SmallInteger(a - b);\n      }\n      return subtractSmall(b, Math.abs(a), a >= 0);\n    };\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\n    BigInteger.prototype.negate = function () {\n      return new BigInteger(this.value, !this.sign);\n    };\n    SmallInteger.prototype.negate = function () {\n      var sign = this.sign;\n      var small = new SmallInteger(-this.value);\n      small.sign = !sign;\n      return small;\n    };\n    BigInteger.prototype.abs = function () {\n      return new BigInteger(this.value, false);\n    };\n    SmallInteger.prototype.abs = function () {\n      return new SmallInteger(Math.abs(this.value));\n    };\n    function multiplyLong(a, b) {\n      var a_l = a.length,\n        b_l = b.length,\n        l = a_l + b_l,\n        r = createArray(l),\n        base = BASE,\n        product,\n        carry,\n        i,\n        a_i,\n        b_j;\n      for (i = 0; i < a_l; ++i) {\n        a_i = a[i];\n        for (var j = 0; j < b_l; ++j) {\n          b_j = b[j];\n          product = a_i * b_j + r[i + j];\n          carry = Math.floor(product / base);\n          r[i + j] = product - carry * base;\n          r[i + j + 1] += carry;\n        }\n      }\n      trim(r);\n      return r;\n    }\n    function multiplySmall(a, b) {\n      var l = a.length,\n        r = new Array(l),\n        base = BASE,\n        carry = 0,\n        product,\n        i;\n      for (i = 0; i < l; i++) {\n        product = a[i] * b + carry;\n        carry = Math.floor(product / base);\n        r[i] = product - carry * base;\n      }\n      while (carry > 0) {\n        r[i++] = carry % base;\n        carry = Math.floor(carry / base);\n      }\n      return r;\n    }\n    function shiftLeft(x, n) {\n      var r = [];\n      while (n-- > 0) {\n        r.push(0);\n      }\n      return r.concat(x);\n    }\n    function multiplyKaratsuba(x, y) {\n      var n = Math.max(x.length, y.length);\n      if (n <= 30) return multiplyLong(x, y);\n      n = Math.ceil(n / 2);\n      var b = x.slice(n),\n        a = x.slice(0, n),\n        d = y.slice(n),\n        c = y.slice(0, n);\n      var ac = multiplyKaratsuba(a, c),\n        bd = multiplyKaratsuba(b, d),\n        abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\n      var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\n      trim(product);\n      return product;\n    }\n    function useKaratsuba(l1, l2) {\n      return -.012 * l1 - .012 * l2 + 15e-6 * l1 * l2 > 0;\n    }\n    BigInteger.prototype.multiply = function (v) {\n      var n = parseValue(v),\n        a = this.value,\n        b = n.value,\n        sign = this.sign !== n.sign,\n        abs;\n      if (n.isSmall) {\n        if (b === 0) return Integer[0];\n        if (b === 1) return this;\n        if (b === -1) return this.negate();\n        abs = Math.abs(b);\n        if (abs < BASE) {\n          return new BigInteger(multiplySmall(a, abs), sign);\n        }\n        b = smallToArray(abs);\n      }\n      if (useKaratsuba(a.length, b.length)) return new BigInteger(multiplyKaratsuba(a, b), sign);\n      return new BigInteger(multiplyLong(a, b), sign);\n    };\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\n    function multiplySmallAndArray(a, b, sign) {\n      if (a < BASE) {\n        return new BigInteger(multiplySmall(b, a), sign);\n      }\n      return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\n    }\n    SmallInteger.prototype._multiplyBySmall = function (a) {\n      if (isPrecise(a.value * this.value)) {\n        return new SmallInteger(a.value * this.value);\n      }\n      return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\n    };\n    BigInteger.prototype._multiplyBySmall = function (a) {\n      if (a.value === 0) return Integer[0];\n      if (a.value === 1) return this;\n      if (a.value === -1) return this.negate();\n      return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\n    };\n    SmallInteger.prototype.multiply = function (v) {\n      return parseValue(v)._multiplyBySmall(this);\n    };\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\n    function square(a) {\n      var l = a.length,\n        r = createArray(l + l),\n        base = BASE,\n        product,\n        carry,\n        i,\n        a_i,\n        a_j;\n      for (i = 0; i < l; i++) {\n        a_i = a[i];\n        carry = 0 - a_i * a_i;\n        for (var j = i; j < l; j++) {\n          a_j = a[j];\n          product = 2 * (a_i * a_j) + r[i + j] + carry;\n          carry = Math.floor(product / base);\n          r[i + j] = product - carry * base;\n        }\n        r[i + l] = carry;\n      }\n      trim(r);\n      return r;\n    }\n    BigInteger.prototype.square = function () {\n      return new BigInteger(square(this.value), false);\n    };\n    SmallInteger.prototype.square = function () {\n      var value = this.value * this.value;\n      if (isPrecise(value)) return new SmallInteger(value);\n      return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\n    };\n    function divMod1(a, b) {\n      var a_l = a.length,\n        b_l = b.length,\n        base = BASE,\n        result = createArray(b.length),\n        divisorMostSignificantDigit = b[b_l - 1],\n        lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\n        remainder = multiplySmall(a, lambda),\n        divisor = multiplySmall(b, lambda),\n        quotientDigit,\n        shift,\n        carry,\n        borrow,\n        i,\n        l,\n        q;\n      if (remainder.length <= a_l) remainder.push(0);\n      divisor.push(0);\n      divisorMostSignificantDigit = divisor[b_l - 1];\n      for (shift = a_l - b_l; shift >= 0; shift--) {\n        quotientDigit = base - 1;\n        if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\n          quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\n        }\n        carry = 0;\n        borrow = 0;\n        l = divisor.length;\n        for (i = 0; i < l; i++) {\n          carry += quotientDigit * divisor[i];\n          q = Math.floor(carry / base);\n          borrow += remainder[shift + i] - (carry - q * base);\n          carry = q;\n          if (borrow < 0) {\n            remainder[shift + i] = borrow + base;\n            borrow = -1;\n          } else {\n            remainder[shift + i] = borrow;\n            borrow = 0;\n          }\n        }\n        while (borrow !== 0) {\n          quotientDigit -= 1;\n          carry = 0;\n          for (i = 0; i < l; i++) {\n            carry += remainder[shift + i] - base + divisor[i];\n            if (carry < 0) {\n              remainder[shift + i] = carry + base;\n              carry = 0;\n            } else {\n              remainder[shift + i] = carry;\n              carry = 1;\n            }\n          }\n          borrow += carry;\n        }\n        result[shift] = quotientDigit;\n      }\n      remainder = divModSmall(remainder, lambda)[0];\n      return [arrayToSmall(result), arrayToSmall(remainder)];\n    }\n    function divMod2(a, b) {\n      var a_l = a.length,\n        b_l = b.length,\n        result = [],\n        part = [],\n        base = BASE,\n        guess,\n        xlen,\n        highx,\n        highy,\n        check;\n      while (a_l) {\n        part.unshift(a[--a_l]);\n        trim(part);\n        if (compareAbs(part, b) < 0) {\n          result.push(0);\n          continue;\n        }\n        xlen = part.length;\n        highx = part[xlen - 1] * base + part[xlen - 2];\n        highy = b[b_l - 1] * base + b[b_l - 2];\n        if (xlen > b_l) {\n          highx = (highx + 1) * base;\n        }\n        guess = Math.ceil(highx / highy);\n        do {\n          check = multiplySmall(b, guess);\n          if (compareAbs(check, part) <= 0) break;\n          guess--;\n        } while (guess);\n        result.push(guess);\n        part = subtract(part, check);\n      }\n      result.reverse();\n      return [arrayToSmall(result), arrayToSmall(part)];\n    }\n    function divModSmall(value, lambda) {\n      var length = value.length,\n        quotient = createArray(length),\n        base = BASE,\n        i,\n        q,\n        remainder,\n        divisor;\n      remainder = 0;\n      for (i = length - 1; i >= 0; --i) {\n        divisor = remainder * base + value[i];\n        q = truncate(divisor / lambda);\n        remainder = divisor - q * lambda;\n        quotient[i] = q | 0;\n      }\n      return [quotient, remainder | 0];\n    }\n    function divModAny(self, v) {\n      var value,\n        n = parseValue(v);\n      var a = self.value,\n        b = n.value;\n      var quotient;\n      if (b === 0) throw new Error(\"Cannot divide by zero\");\n      if (self.isSmall) {\n        if (n.isSmall) {\n          return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\n        }\n        return [Integer[0], self];\n      }\n      if (n.isSmall) {\n        if (b === 1) return [self, Integer[0]];\n        if (b == -1) return [self.negate(), Integer[0]];\n        var abs = Math.abs(b);\n        if (abs < BASE) {\n          value = divModSmall(a, abs);\n          quotient = arrayToSmall(value[0]);\n          var remainder = value[1];\n          if (self.sign) remainder = -remainder;\n          if (typeof quotient === \"number\") {\n            if (self.sign !== n.sign) quotient = -quotient;\n            return [new SmallInteger(quotient), new SmallInteger(remainder)];\n          }\n          return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\n        }\n        b = smallToArray(abs);\n      }\n      var comparison = compareAbs(a, b);\n      if (comparison === -1) return [Integer[0], self];\n      if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\n      if (a.length + b.length <= 200) value = divMod1(a, b);else value = divMod2(a, b);\n      quotient = value[0];\n      var qSign = self.sign !== n.sign,\n        mod = value[1],\n        mSign = self.sign;\n      if (typeof quotient === \"number\") {\n        if (qSign) quotient = -quotient;\n        quotient = new SmallInteger(quotient);\n      } else quotient = new BigInteger(quotient, qSign);\n      if (typeof mod === \"number\") {\n        if (mSign) mod = -mod;\n        mod = new SmallInteger(mod);\n      } else mod = new BigInteger(mod, mSign);\n      return [quotient, mod];\n    }\n    BigInteger.prototype.divmod = function (v) {\n      var result = divModAny(this, v);\n      return {\n        quotient: result[0],\n        remainder: result[1]\n      };\n    };\n    SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\n    BigInteger.prototype.divide = function (v) {\n      return divModAny(this, v)[0];\n    };\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\n    BigInteger.prototype.mod = function (v) {\n      return divModAny(this, v)[1];\n    };\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\n    BigInteger.prototype.pow = function (v) {\n      var n = parseValue(v),\n        a = this.value,\n        b = n.value,\n        value,\n        x,\n        y;\n      if (b === 0) return Integer[1];\n      if (a === 0) return Integer[0];\n      if (a === 1) return Integer[1];\n      if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\n      if (n.sign) {\n        return Integer[0];\n      }\n      if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\n      if (this.isSmall) {\n        if (isPrecise(value = Math.pow(a, b))) return new SmallInteger(truncate(value));\n      }\n      x = this;\n      y = Integer[1];\n      while (true) {\n        if (b & 1 === 1) {\n          y = y.times(x);\n          --b;\n        }\n        if (b === 0) break;\n        b /= 2;\n        x = x.square();\n      }\n      return y;\n    };\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\n    BigInteger.prototype.modPow = function (exp, mod) {\n      exp = parseValue(exp);\n      mod = parseValue(mod);\n      if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\n      var r = Integer[1],\n        base = this.mod(mod);\n      while (exp.isPositive()) {\n        if (base.isZero()) return Integer[0];\n        if (exp.isOdd()) r = r.multiply(base).mod(mod);\n        exp = exp.divide(2);\n        base = base.square().mod(mod);\n      }\n      return r;\n    };\n    SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\n    function compareAbs(a, b) {\n      if (a.length !== b.length) {\n        return a.length > b.length ? 1 : -1;\n      }\n      for (var i = a.length - 1; i >= 0; i--) {\n        if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\n      }\n      return 0;\n    }\n    BigInteger.prototype.compareAbs = function (v) {\n      var n = parseValue(v),\n        a = this.value,\n        b = n.value;\n      if (n.isSmall) return 1;\n      return compareAbs(a, b);\n    };\n    SmallInteger.prototype.compareAbs = function (v) {\n      var n = parseValue(v),\n        a = Math.abs(this.value),\n        b = n.value;\n      if (n.isSmall) {\n        b = Math.abs(b);\n        return a === b ? 0 : a > b ? 1 : -1;\n      }\n      return -1;\n    };\n    BigInteger.prototype.compare = function (v) {\n      if (v === Infinity) {\n        return -1;\n      }\n      if (v === -Infinity) {\n        return 1;\n      }\n      var n = parseValue(v),\n        a = this.value,\n        b = n.value;\n      if (this.sign !== n.sign) {\n        return n.sign ? 1 : -1;\n      }\n      if (n.isSmall) {\n        return this.sign ? -1 : 1;\n      }\n      return compareAbs(a, b) * (this.sign ? -1 : 1);\n    };\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\n    SmallInteger.prototype.compare = function (v) {\n      if (v === Infinity) {\n        return -1;\n      }\n      if (v === -Infinity) {\n        return 1;\n      }\n      var n = parseValue(v),\n        a = this.value,\n        b = n.value;\n      if (n.isSmall) {\n        return a == b ? 0 : a > b ? 1 : -1;\n      }\n      if (a < 0 !== n.sign) {\n        return a < 0 ? -1 : 1;\n      }\n      return a < 0 ? 1 : -1;\n    };\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\n    BigInteger.prototype.equals = function (v) {\n      return this.compare(v) === 0;\n    };\n    SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\n    BigInteger.prototype.notEquals = function (v) {\n      return this.compare(v) !== 0;\n    };\n    SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\n    BigInteger.prototype.greater = function (v) {\n      return this.compare(v) > 0;\n    };\n    SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\n    BigInteger.prototype.lesser = function (v) {\n      return this.compare(v) < 0;\n    };\n    SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\n    BigInteger.prototype.greaterOrEquals = function (v) {\n      return this.compare(v) >= 0;\n    };\n    SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\n    BigInteger.prototype.lesserOrEquals = function (v) {\n      return this.compare(v) <= 0;\n    };\n    SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\n    BigInteger.prototype.isEven = function () {\n      return (this.value[0] & 1) === 0;\n    };\n    SmallInteger.prototype.isEven = function () {\n      return (this.value & 1) === 0;\n    };\n    BigInteger.prototype.isOdd = function () {\n      return (this.value[0] & 1) === 1;\n    };\n    SmallInteger.prototype.isOdd = function () {\n      return (this.value & 1) === 1;\n    };\n    BigInteger.prototype.isPositive = function () {\n      return !this.sign;\n    };\n    SmallInteger.prototype.isPositive = function () {\n      return this.value > 0;\n    };\n    BigInteger.prototype.isNegative = function () {\n      return this.sign;\n    };\n    SmallInteger.prototype.isNegative = function () {\n      return this.value < 0;\n    };\n    BigInteger.prototype.isUnit = function () {\n      return false;\n    };\n    SmallInteger.prototype.isUnit = function () {\n      return Math.abs(this.value) === 1;\n    };\n    BigInteger.prototype.isZero = function () {\n      return false;\n    };\n    SmallInteger.prototype.isZero = function () {\n      return this.value === 0;\n    };\n    BigInteger.prototype.isDivisibleBy = function (v) {\n      var n = parseValue(v);\n      var value = n.value;\n      if (value === 0) return false;\n      if (value === 1) return true;\n      if (value === 2) return this.isEven();\n      return this.mod(n).equals(Integer[0]);\n    };\n    SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\n    function isBasicPrime(v) {\n      var n = v.abs();\n      if (n.isUnit()) return false;\n      if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\n      if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\n      if (n.lesser(49)) return true;\n    }\n    function millerRabinTest(n, a) {\n      var nPrev = n.prev(),\n        b = nPrev,\n        r = 0,\n        d,\n        t,\n        i,\n        x;\n      while (b.isEven()) {\n        b = b.divide(2), r++;\n      }\n      next: for (i = 0; i < a.length; i++) {\n        if (n.lesser(a[i])) continue;\n        x = bigInt(a[i]).modPow(b, n);\n        if (x.equals(Integer[1]) || x.equals(nPrev)) continue;\n        for (d = r - 1; d != 0; d--) {\n          x = x.square().mod(n);\n          if (x.isUnit()) return false;\n          if (x.equals(nPrev)) continue next;\n        }\n        return false;\n      }\n      return true;\n    }\n    BigInteger.prototype.isPrime = function (strict) {\n      var isPrime = isBasicPrime(this);\n      if (isPrime !== undefined) return isPrime;\n      var n = this.abs();\n      var bits = n.bitLength();\n      if (bits <= 64) return millerRabinTest(n, [2, 325, 9375, 28178, 450775, 9780504, 1795265022]);\n      var logN = Math.log(2) * bits;\n      var t = Math.ceil(strict === true ? 2 * Math.pow(logN, 2) : logN);\n      for (var a = [], i = 0; i < t; i++) {\n        a.push(bigInt(i + 2));\n      }\n      return millerRabinTest(n, a);\n    };\n    SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\n    BigInteger.prototype.isProbablePrime = function (iterations) {\n      var isPrime = isBasicPrime(this);\n      if (isPrime !== undefined) return isPrime;\n      var n = this.abs();\n      var t = iterations === undefined ? 5 : iterations;\n      for (var a = [], i = 0; i < t; i++) {\n        a.push(bigInt.randBetween(2, n.minus(2)));\n      }\n      return millerRabinTest(n, a);\n    };\n    SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\n    BigInteger.prototype.modInv = function (n) {\n      var t = bigInt.zero,\n        newT = bigInt.one,\n        r = parseValue(n),\n        newR = this.abs(),\n        q,\n        lastT,\n        lastR;\n      while (!newR.equals(bigInt.zero)) {\n        q = r.divide(newR);\n        lastT = t;\n        lastR = r;\n        t = newT;\n        r = newR;\n        newT = lastT.subtract(q.multiply(newT));\n        newR = lastR.subtract(q.multiply(newR));\n      }\n      if (!r.equals(1)) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\n      if (t.compare(0) === -1) {\n        t = t.add(n);\n      }\n      if (this.isNegative()) {\n        return t.negate();\n      }\n      return t;\n    };\n    SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\n    BigInteger.prototype.next = function () {\n      var value = this.value;\n      if (this.sign) {\n        return subtractSmall(value, 1, this.sign);\n      }\n      return new BigInteger(addSmall(value, 1), this.sign);\n    };\n    SmallInteger.prototype.next = function () {\n      var value = this.value;\n      if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\n      return new BigInteger(MAX_INT_ARR, false);\n    };\n    BigInteger.prototype.prev = function () {\n      var value = this.value;\n      if (this.sign) {\n        return new BigInteger(addSmall(value, 1), true);\n      }\n      return subtractSmall(value, 1, this.sign);\n    };\n    SmallInteger.prototype.prev = function () {\n      var value = this.value;\n      if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\n      return new BigInteger(MAX_INT_ARR, true);\n    };\n    var powersOfTwo = [1];\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) {\n      powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\n    }\n    var powers2Length = powersOfTwo.length,\n      highestPower2 = powersOfTwo[powers2Length - 1];\n    function shift_isSmall(n) {\n      return (typeof n === \"number\" || typeof n === \"string\") && +Math.abs(n) <= BASE || n instanceof BigInteger && n.value.length <= 1;\n    }\n    BigInteger.prototype.shiftLeft = function (n) {\n      if (!shift_isSmall(n)) {\n        throw new Error(String(n) + \" is too large for shifting.\");\n      }\n      n = +n;\n      if (n < 0) return this.shiftRight(-n);\n      var result = this;\n      if (result.isZero()) return result;\n      while (n >= powers2Length) {\n        result = result.multiply(highestPower2);\n        n -= powers2Length - 1;\n      }\n      return result.multiply(powersOfTwo[n]);\n    };\n    SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\n    BigInteger.prototype.shiftRight = function (n) {\n      var remQuo;\n      if (!shift_isSmall(n)) {\n        throw new Error(String(n) + \" is too large for shifting.\");\n      }\n      n = +n;\n      if (n < 0) return this.shiftLeft(-n);\n      var result = this;\n      while (n >= powers2Length) {\n        if (result.isZero() || result.isNegative() && result.isUnit()) return result;\n        remQuo = divModAny(result, highestPower2);\n        result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\n        n -= powers2Length - 1;\n      }\n      remQuo = divModAny(result, powersOfTwo[n]);\n      return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\n    };\n    SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\n    function bitwise(x, y, fn) {\n      y = parseValue(y);\n      var xSign = x.isNegative(),\n        ySign = y.isNegative();\n      var xRem = xSign ? x.not() : x,\n        yRem = ySign ? y.not() : y;\n      var xDigit = 0,\n        yDigit = 0;\n      var xDivMod = null,\n        yDivMod = null;\n      var result = [];\n      while (!xRem.isZero() || !yRem.isZero()) {\n        xDivMod = divModAny(xRem, highestPower2);\n        xDigit = xDivMod[1].toJSNumber();\n        if (xSign) {\n          xDigit = highestPower2 - 1 - xDigit;\n        }\n        yDivMod = divModAny(yRem, highestPower2);\n        yDigit = yDivMod[1].toJSNumber();\n        if (ySign) {\n          yDigit = highestPower2 - 1 - yDigit;\n        }\n        xRem = xDivMod[0];\n        yRem = yDivMod[0];\n        result.push(fn(xDigit, yDigit));\n      }\n      var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\n      for (var i = result.length - 1; i >= 0; i -= 1) {\n        sum = sum.multiply(highestPower2).add(bigInt(result[i]));\n      }\n      return sum;\n    }\n    BigInteger.prototype.not = function () {\n      return this.negate().prev();\n    };\n    SmallInteger.prototype.not = BigInteger.prototype.not;\n    BigInteger.prototype.and = function (n) {\n      return bitwise(this, n, function (a, b) {\n        return a & b;\n      });\n    };\n    SmallInteger.prototype.and = BigInteger.prototype.and;\n    BigInteger.prototype.or = function (n) {\n      return bitwise(this, n, function (a, b) {\n        return a | b;\n      });\n    };\n    SmallInteger.prototype.or = BigInteger.prototype.or;\n    BigInteger.prototype.xor = function (n) {\n      return bitwise(this, n, function (a, b) {\n        return a ^ b;\n      });\n    };\n    SmallInteger.prototype.xor = BigInteger.prototype.xor;\n    var LOBMASK_I = 1 << 30,\n      LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\n    function roughLOB(n) {\n      var v = n.value,\n        x = typeof v === \"number\" ? v | LOBMASK_I : v[0] + v[1] * BASE | LOBMASK_BI;\n      return x & -x;\n    }\n    function integerLogarithm(value, base) {\n      if (base.compareTo(value) <= 0) {\n        var tmp = integerLogarithm(value, base.square(base));\n        var p = tmp.p;\n        var e = tmp.e;\n        var t = p.multiply(base);\n        return t.compareTo(value) <= 0 ? {\n          p: t,\n          e: e * 2 + 1\n        } : {\n          p: p,\n          e: e * 2\n        };\n      }\n      return {\n        p: bigInt(1),\n        e: 0\n      };\n    }\n    BigInteger.prototype.bitLength = function () {\n      var n = this;\n      if (n.compareTo(bigInt(0)) < 0) {\n        n = n.negate().subtract(bigInt(1));\n      }\n      if (n.compareTo(bigInt(0)) === 0) {\n        return bigInt(0);\n      }\n      return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\n    };\n    SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\n    function max(a, b) {\n      a = parseValue(a);\n      b = parseValue(b);\n      return a.greater(b) ? a : b;\n    }\n    function min(a, b) {\n      a = parseValue(a);\n      b = parseValue(b);\n      return a.lesser(b) ? a : b;\n    }\n    function gcd(a, b) {\n      a = parseValue(a).abs();\n      b = parseValue(b).abs();\n      if (a.equals(b)) return a;\n      if (a.isZero()) return b;\n      if (b.isZero()) return a;\n      var c = Integer[1],\n        d,\n        t;\n      while (a.isEven() && b.isEven()) {\n        d = Math.min(roughLOB(a), roughLOB(b));\n        a = a.divide(d);\n        b = b.divide(d);\n        c = c.multiply(d);\n      }\n      while (a.isEven()) {\n        a = a.divide(roughLOB(a));\n      }\n      do {\n        while (b.isEven()) {\n          b = b.divide(roughLOB(b));\n        }\n        if (a.greater(b)) {\n          t = b;\n          b = a;\n          a = t;\n        }\n        b = b.subtract(a);\n      } while (!b.isZero());\n      return c.isUnit() ? a : a.multiply(c);\n    }\n    function lcm(a, b) {\n      a = parseValue(a).abs();\n      b = parseValue(b).abs();\n      return a.divide(gcd(a, b)).multiply(b);\n    }\n    function randBetween(a, b) {\n      a = parseValue(a);\n      b = parseValue(b);\n      var low = min(a, b),\n        high = max(a, b);\n      var range = high.subtract(low).add(1);\n      if (range.isSmall) return low.add(Math.floor(Math.random() * range));\n      var length = range.value.length - 1;\n      var result = [],\n        restricted = true;\n      for (var i = length; i >= 0; i--) {\n        var top = restricted ? range.value[i] : BASE;\n        var digit = truncate(Math.random() * top);\n        result.unshift(digit);\n        if (digit < top) restricted = false;\n      }\n      result = arrayToSmall(result);\n      return low.add(typeof result === \"number\" ? new SmallInteger(result) : new BigInteger(result, false));\n    }\n    var parseBase = function parseBase(text, base) {\n      var length = text.length;\n      var i;\n      var absBase = Math.abs(base);\n      for (var i = 0; i < length; i++) {\n        var c = text[i].toLowerCase();\n        if (c === \"-\") continue;\n        if (/[a-z0-9]/.test(c)) {\n          if (/[0-9]/.test(c) && +c >= absBase) {\n            if (c === \"1\" && absBase === 1) continue;\n            throw new Error(c + \" is not a valid digit in base \" + base + \".\");\n          } else if (c.charCodeAt(0) - 87 >= absBase) {\n            throw new Error(c + \" is not a valid digit in base \" + base + \".\");\n          }\n        }\n      }\n      if (2 <= base && base <= 36) {\n        if (length <= LOG_MAX_INT / Math.log(base)) {\n          var result = parseInt(text, base);\n          if (isNaN(result)) {\n            throw new Error(c + \" is not a valid digit in base \" + base + \".\");\n          }\n          return new SmallInteger(parseInt(text, base));\n        }\n      }\n      base = parseValue(base);\n      var digits = [];\n      var isNegative = text[0] === \"-\";\n      for (i = isNegative ? 1 : 0; i < text.length; i++) {\n        var c = text[i].toLowerCase(),\n          charCode = c.charCodeAt(0);\n        if (48 <= charCode && charCode <= 57) digits.push(parseValue(c));else if (97 <= charCode && charCode <= 122) digits.push(parseValue(c.charCodeAt(0) - 87));else if (c === \"<\") {\n          var start = i;\n          do {\n            i++;\n          } while (text[i] !== \">\");\n          digits.push(parseValue(text.slice(start + 1, i)));\n        } else throw new Error(c + \" is not a valid character\");\n      }\n      return parseBaseFromArray(digits, base, isNegative);\n    };\n    function parseBaseFromArray(digits, base, isNegative) {\n      var val = Integer[0],\n        pow = Integer[1],\n        i;\n      for (i = digits.length - 1; i >= 0; i--) {\n        val = val.add(digits[i].times(pow));\n        pow = pow.times(base);\n      }\n      return isNegative ? val.negate() : val;\n    }\n    function stringify(digit) {\n      if (digit <= 35) {\n        return \"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit);\n      }\n      return \"<\" + digit + \">\";\n    }\n    function toBase(n, base) {\n      base = bigInt(base);\n      if (base.isZero()) {\n        if (n.isZero()) return {\n          value: [0],\n          isNegative: false\n        };\n        throw new Error(\"Cannot convert nonzero numbers to base 0.\");\n      }\n      if (base.equals(-1)) {\n        if (n.isZero()) return {\n          value: [0],\n          isNegative: false\n        };\n        if (n.isNegative()) return {\n          value: [].concat.apply([], Array.apply(null, Array(-n)).map(Array.prototype.valueOf, [1, 0])),\n          isNegative: false\n        };\n        var arr = Array.apply(null, Array(+n - 1)).map(Array.prototype.valueOf, [0, 1]);\n        arr.unshift([1]);\n        return {\n          value: [].concat.apply([], arr),\n          isNegative: false\n        };\n      }\n      var neg = false;\n      if (n.isNegative() && base.isPositive()) {\n        neg = true;\n        n = n.abs();\n      }\n      if (base.equals(1)) {\n        if (n.isZero()) return {\n          value: [0],\n          isNegative: false\n        };\n        return {\n          value: Array.apply(null, Array(+n)).map(Number.prototype.valueOf, 1),\n          isNegative: neg\n        };\n      }\n      var out = [];\n      var left = n,\n        divmod;\n      while (left.isNegative() || left.compareAbs(base) >= 0) {\n        divmod = left.divmod(base);\n        left = divmod.quotient;\n        var digit = divmod.remainder;\n        if (digit.isNegative()) {\n          digit = base.minus(digit).abs();\n          left = left.next();\n        }\n        out.push(digit.toJSNumber());\n      }\n      out.push(left.toJSNumber());\n      return {\n        value: out.reverse(),\n        isNegative: neg\n      };\n    }\n    function toBaseString(n, base) {\n      var arr = toBase(n, base);\n      return (arr.isNegative ? \"-\" : \"\") + arr.value.map(stringify).join(\"\");\n    }\n    BigInteger.prototype.toArray = function (radix) {\n      return toBase(this, radix);\n    };\n    SmallInteger.prototype.toArray = function (radix) {\n      return toBase(this, radix);\n    };\n    BigInteger.prototype.toString = function (radix) {\n      if (radix === undefined) radix = 10;\n      if (radix !== 10) return toBaseString(this, radix);\n      var v = this.value,\n        l = v.length,\n        str = String(v[--l]),\n        zeros = \"0000000\",\n        digit;\n      while (--l >= 0) {\n        digit = String(v[l]);\n        str += zeros.slice(digit.length) + digit;\n      }\n      var sign = this.sign ? \"-\" : \"\";\n      return sign + str;\n    };\n    SmallInteger.prototype.toString = function (radix) {\n      if (radix === undefined) radix = 10;\n      if (radix != 10) return toBaseString(this, radix);\n      return String(this.value);\n    };\n    BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () {\n      return this.toString();\n    };\n    BigInteger.prototype.valueOf = function () {\n      return parseInt(this.toString(), 10);\n    };\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\n    SmallInteger.prototype.valueOf = function () {\n      return this.value;\n    };\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\n    function parseStringValue(v) {\n      if (isPrecise(+v)) {\n        var x = +v;\n        if (x === truncate(x)) return new SmallInteger(x);\n        throw new Error(\"Invalid integer: \" + v);\n      }\n      var sign = v[0] === \"-\";\n      if (sign) v = v.slice(1);\n      var split = v.split(/e/i);\n      if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\n      if (split.length === 2) {\n        var exp = split[1];\n        if (exp[0] === \"+\") exp = exp.slice(1);\n        exp = +exp;\n        if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\n        var text = split[0];\n        var decimalPlace = text.indexOf(\".\");\n        if (decimalPlace >= 0) {\n          exp -= text.length - decimalPlace - 1;\n          text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\n        }\n        if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\n        text += new Array(exp + 1).join(\"0\");\n        v = text;\n      }\n      var isValid = /^([0-9][0-9]*)$/.test(v);\n      if (!isValid) throw new Error(\"Invalid integer: \" + v);\n      var r = [],\n        max = v.length,\n        l = LOG_BASE,\n        min = max - l;\n      while (max > 0) {\n        r.push(+v.slice(min, max));\n        min -= l;\n        if (min < 0) min = 0;\n        max -= l;\n      }\n      trim(r);\n      return new BigInteger(r, sign);\n    }\n    function parseNumberValue(v) {\n      if (isPrecise(v)) {\n        if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\n        return new SmallInteger(v);\n      }\n      return parseStringValue(v.toString());\n    }\n    function parseValue(v) {\n      if (typeof v === \"number\") {\n        return parseNumberValue(v);\n      }\n      if (typeof v === \"string\") {\n        return parseStringValue(v);\n      }\n      return v;\n    }\n    for (var i = 0; i < 1e3; i++) {\n      Integer[i] = new SmallInteger(i);\n      if (i > 0) Integer[-i] = new SmallInteger(-i);\n    }\n    Integer.one = Integer[1];\n    Integer.zero = Integer[0];\n    Integer.minusOne = Integer[-1];\n    Integer.max = max;\n    Integer.min = min;\n    Integer.gcd = gcd;\n    Integer.lcm = lcm;\n    Integer.isInstance = function (x) {\n      return x instanceof BigInteger || x instanceof SmallInteger;\n    };\n    Integer.randBetween = randBetween;\n    Integer.fromArray = function (digits, base, isNegative) {\n      return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\n    };\n    return Integer;\n  }();\n  if (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\n    module.exports = bigInt;\n  }\n  if (typeof define === \"function\" && define.amd) {\n    define(\"big-integer\", [], function () {\n      return bigInt;\n    });\n  }\n  return bigInt;\n}();","map":{"version":3,"mappings":"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","names":["module","exports","bigInt","undefined","BASE","LOG_BASE","MAX_INT","MAX_INT_ARR","smallToArray","LOG_MAX_INT","Math","log","Integer","v","radix","parseValue","parseBase","BigInteger","value","sign","isSmall","prototype","Object","create","SmallInteger","isPrecise","n","floor","arrayToSmall","arr","trim","length","compareAbs","i","createArray","x","Array","truncate","ceil","add","a","b","l_a","l_b","r","carry","base","sum","push","addAny","addSmall","l","subtract","negate","abs","plus","a_l","b_l","borrow","difference","subtractAny","subtractSmall","minus","small","multiplyLong","product","a_i","b_j","j","multiplySmall","shiftLeft","concat","multiplyKaratsuba","y","max","slice","d","c","ac","bd","abcd","useKaratsuba","l1","l2","multiply","times","multiplySmallAndArray","_multiplyBySmall","square","a_j","divMod1","result","divisorMostSignificantDigit","lambda","remainder","divisor","quotientDigit","shift","q","divModSmall","divMod2","part","guess","xlen","highx","highy","check","unshift","reverse","quotient","divModAny","self","Error","comparison","qSign","mod","mSign","divmod","divide","over","pow","isEven","toString","modPow","exp","isZero","isPositive","isOdd","compare","Infinity","compareTo","equals","eq","notEquals","neq","greater","gt","lesser","lt","greaterOrEquals","geq","lesserOrEquals","leq","isNegative","isUnit","isDivisibleBy","isBasicPrime","millerRabinTest","nPrev","prev","t","next","isPrime","strict","bits","bitLength","logN","isProbablePrime","iterations","randBetween","modInv","zero","newT","one","newR","lastT","lastR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","String","shiftRight","remQuo","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","toJSNumber","and","or","xor","LOBMASK_I","LOBMASK_BI","roughLOB","integerLogarithm","tmp","p","e","min","gcd","lcm","low","high","range","random","restricted","top","digit","text","absBase","toLowerCase","test","charCodeAt","parseInt","isNaN","digits","charCode","start","parseBaseFromArray","val","stringify","charAt","toBase","apply","map","valueOf","neg","Number","out","left","toBaseString","join","toArray","str","zeros","toJSON","parseStringValue","split","decimalPlace","indexOf","isValid","parseNumberValue","minusOne","isInstance","fromArray","hasOwnProperty","define","amd"],"sourceRoot":"","sources":["../../src/3rdparty/bigInt.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}