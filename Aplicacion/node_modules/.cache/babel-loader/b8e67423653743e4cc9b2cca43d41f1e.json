{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport nerdamer from \"nerdamer\";\n\nvar Polynomial = /*#__PURE__*/function () {\n  function Polynomial(p) {\n    _classCallCheck(this, Polynomial);\n\n    this.pol = \"0\";\n    this.lc = \"0\";\n\n    try {\n      this.pol = nerdamer(p).simplify().toString();\n    } catch (e) {\n      console.log(\"ERROR PARSING POLYNOMIAL \".concat(p));\n    }\n\n    console.log(this.pol);\n    this.traverseTree(nerdamer.tree(this.pol));\n  }\n\n  _createClass(Polynomial, [{\n    key: \"traverseTree\",\n    value: function traverseTree(node) {\n      console.log(node);\n\n      if (node.toString()) {\n        if (node.type === 'VARIABLE_OR_LITERAL') {\n          var isVariable = ['x', 'y', 'z'].includes(node.value);\n          console.log(\"ES LITERAL\");\n          console.log(\"SYMBOLS\");\n          console.log(node.value);\n          return isVariable ? node.value : parseFloat(node.value).toFixed(4);\n        }\n\n        if (node.type === 'OPERATOR') {\n          console.log(\"left\");\n          var left = this.traverseTree(node.left);\n          var right = this.traverseTree(node.right);\n          console.log(\"RIGHT, LEFT\");\n          console.log(right);\n          console.log(left);\n          console.log(\"ES OPERATOR\");\n\n          if (node.value === '^') {\n            console.log(node);\n            return \"pow(\".concat(left, \", \").concat(right, \")\");\n          } else {\n            if (right && left) return \"(\".concat(left, \")\").concat(node.value, \"(\").concat(right, \")\");else if (left) return \"\".concat(node.value, \"(\").concat(left, \")\");else return '????';\n          } // return node.toString();\n\n        }\n\n        if (node.type === 'FUNCTION') {\n          var _left = this.traverseTree(node.left);\n\n          var _right = this.traverseTree(node.right);\n\n          console.log(\"ES F\");\n\n          if (node.value === '^') {\n            console.log(node);\n            return \"pow(\".concat(_left, \", \").concat(_right, \")\");\n          } else {\n            if (_right) return \"\".concat(node.value, \"(\").concat(_right, \")\");else return '????';\n          }\n        }\n      }\n    }\n  }]);\n\n  return Polynomial;\n}();\n\nexport { Polynomial as default };","map":{"version":3,"names":["nerdamer","Polynomial","p","pol","lc","simplify","toString","e","console","log","traverseTree","tree","node","type","isVariable","includes","value","parseFloat","toFixed","left","right"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/Polynomial.js"],"sourcesContent":["import nerdamer from \"nerdamer\";\r\n\r\nexport default class Polynomial {\r\n    pol = \"0\";\r\n    lc = \"0\";\r\n\r\n    constructor(p){\r\n        try{\r\n            this.pol = nerdamer(p).simplify().toString();\r\n        }catch(e){\r\n            console.log(`ERROR PARSING POLYNOMIAL ${p}`);\r\n        }\r\n\r\n        console.log(this.pol);\r\n        this.traverseTree(nerdamer.tree(this.pol));\r\n    }\r\n\r\n    traverseTree(node) {\r\n        console.log(node);\r\n        if (node.toString()) {\r\n          \r\n          if (node.type === 'VARIABLE_OR_LITERAL') {\r\n            const isVariable = ['x', 'y', 'z'].includes(node.value);\r\n            console.log(\"ES LITERAL\");\r\n            console.log(\"SYMBOLS\");\r\n            console.log(node.value);\r\n            return isVariable ? node.value : parseFloat(node.value).toFixed(4);\r\n          }\r\n          if (node.type === 'OPERATOR') {\r\n            console.log(\"left\");\r\n            let left = this.traverseTree(node.left);\r\n            let right = this.traverseTree(node.right);\r\n            console.log(\"RIGHT, LEFT\");\r\n            console.log(right);\r\n            console.log(left);\r\n            console.log(\"ES OPERATOR\");\r\n    \r\n            if (node.value === '^') {\r\n              \r\n              console.log(node);\r\n              return `pow(${left}, ${right})`;\r\n            } else {\r\n              if (right && left) return `(${left})${node.value}(${right})`;\r\n              else if (left) return `${node.value}(${left})`;\r\n              else return '????';\r\n            }\r\n    \r\n            // return node.toString();\r\n          }\r\n          if (node.type === 'FUNCTION') {\r\n            let left = this.traverseTree(node.left);\r\n            let right = this.traverseTree(node.right);\r\n            console.log(\"ES F\");\r\n            if (node.value === '^') {\r\n              \r\n              console.log(node);\r\n              return `pow(${left}, ${right})`;\r\n            } else {\r\n              if (right) return `${node.value}(${right})`;\r\n              else return '????';\r\n            }\r\n          }\r\n        }\r\n      };\r\n}"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,UAArB;;IAEqBC,U;EAIjB,oBAAYC,CAAZ,EAAc;IAAA;;IAAA,KAHdC,GAGc,GAHR,GAGQ;IAAA,KAFdC,EAEc,GAFT,GAES;;IACV,IAAG;MACC,KAAKD,GAAL,GAAWH,QAAQ,CAACE,CAAD,CAAR,CAAYG,QAAZ,GAAuBC,QAAvB,EAAX;IACH,CAFD,CAEC,OAAMC,CAAN,EAAQ;MACLC,OAAO,CAACC,GAAR,oCAAwCP,CAAxC;IACH;;IAEDM,OAAO,CAACC,GAAR,CAAY,KAAKN,GAAjB;IACA,KAAKO,YAAL,CAAkBV,QAAQ,CAACW,IAAT,CAAc,KAAKR,GAAnB,CAAlB;EACH;;;;WAED,sBAAaS,IAAb,EAAmB;MACfJ,OAAO,CAACC,GAAR,CAAYG,IAAZ;;MACA,IAAIA,IAAI,CAACN,QAAL,EAAJ,EAAqB;QAEnB,IAAIM,IAAI,CAACC,IAAL,KAAc,qBAAlB,EAAyC;UACvC,IAAMC,UAAU,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgBC,QAAhB,CAAyBH,IAAI,CAACI,KAA9B,CAAnB;UACAR,OAAO,CAACC,GAAR,CAAY,YAAZ;UACAD,OAAO,CAACC,GAAR,CAAY,SAAZ;UACAD,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACI,KAAjB;UACA,OAAOF,UAAU,GAAGF,IAAI,CAACI,KAAR,GAAgBC,UAAU,CAACL,IAAI,CAACI,KAAN,CAAV,CAAuBE,OAAvB,CAA+B,CAA/B,CAAjC;QACD;;QACD,IAAIN,IAAI,CAACC,IAAL,KAAc,UAAlB,EAA8B;UAC5BL,OAAO,CAACC,GAAR,CAAY,MAAZ;UACA,IAAIU,IAAI,GAAG,KAAKT,YAAL,CAAkBE,IAAI,CAACO,IAAvB,CAAX;UACA,IAAIC,KAAK,GAAG,KAAKV,YAAL,CAAkBE,IAAI,CAACQ,KAAvB,CAAZ;UACAZ,OAAO,CAACC,GAAR,CAAY,aAAZ;UACAD,OAAO,CAACC,GAAR,CAAYW,KAAZ;UACAZ,OAAO,CAACC,GAAR,CAAYU,IAAZ;UACAX,OAAO,CAACC,GAAR,CAAY,aAAZ;;UAEA,IAAIG,IAAI,CAACI,KAAL,KAAe,GAAnB,EAAwB;YAEtBR,OAAO,CAACC,GAAR,CAAYG,IAAZ;YACA,qBAAcO,IAAd,eAAuBC,KAAvB;UACD,CAJD,MAIO;YACL,IAAIA,KAAK,IAAID,IAAb,EAAmB,kBAAWA,IAAX,cAAmBP,IAAI,CAACI,KAAxB,cAAiCI,KAAjC,OAAnB,KACK,IAAID,IAAJ,EAAU,iBAAUP,IAAI,CAACI,KAAf,cAAwBG,IAAxB,OAAV,KACA,OAAO,MAAP;UACN,CAjB2B,CAmB5B;;QACD;;QACD,IAAIP,IAAI,CAACC,IAAL,KAAc,UAAlB,EAA8B;UAC5B,IAAIM,KAAI,GAAG,KAAKT,YAAL,CAAkBE,IAAI,CAACO,IAAvB,CAAX;;UACA,IAAIC,MAAK,GAAG,KAAKV,YAAL,CAAkBE,IAAI,CAACQ,KAAvB,CAAZ;;UACAZ,OAAO,CAACC,GAAR,CAAY,MAAZ;;UACA,IAAIG,IAAI,CAACI,KAAL,KAAe,GAAnB,EAAwB;YAEtBR,OAAO,CAACC,GAAR,CAAYG,IAAZ;YACA,qBAAcO,KAAd,eAAuBC,MAAvB;UACD,CAJD,MAIO;YACL,IAAIA,MAAJ,EAAW,iBAAUR,IAAI,CAACI,KAAf,cAAwBI,MAAxB,OAAX,KACK,OAAO,MAAP;UACN;QACF;MACF;IACF;;;;;;SA7DcnB,U"},"metadata":{},"sourceType":"module"}