{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\Graph.js\";\nimport React from \"react\";\nimport { useCallback, useEffect } from \"react\";\nimport ReactFlow, { addEdge, Background, useNodesState, useEdgesState, MarkerType } from \"react-flow-renderer\";\nimport PrimitiveNode from \"./PrimitiveNode.js\";\nimport BooleanNode from \"./BooleanNode.js\";\nimport ButtonEdge from \"./ButtonEdge\";\nimport ShaderNode from \"./ShaderNode.js\";\nimport TestNode from \"./TestNode.js\";\nimport \"./styles.css\";\nimport { GraphProvider } from \"./GraphContext.js\";\nvar nodeTypes = {\n  primitiveNode: PrimitiveNode,\n  booleanNode: BooleanNode\n};\nvar edgeTypes = {\n  buttonEdge: ButtonEdge\n};\nvar initialNodes = [{\n  id: \"node-0\",\n  type: \"primitiveNode\",\n  position: {\n    x: 0,\n    y: -150\n  },\n  data: {\n    inputs: {},\n    sdf: \"\",\n    children: []\n  }\n}, {\n  id: \"node-1\",\n  type: \"booleanNode\",\n  position: {\n    x: 0,\n    y: 350\n  },\n  data: {\n    inputs: {},\n    sdf: \"\",\n    children: []\n  }\n}, {\n  id: \"node-2\",\n  type: \"booleanNode\",\n  position: {\n    x: 0,\n    y: 700\n  },\n  data: {\n    inputs: {},\n    sdf: \"\",\n    children: []\n  }\n}];\nvar initialEdges = [];\n\nvar onInit = function onInit(reactFlowInstance) {\n  return console.log(\"flow loaded:\", reactFlowInstance);\n};\n\nexport default function Graph() {\n  var _useNodesState = useNodesState(initialNodes),\n      _useNodesState2 = _slicedToArray(_useNodesState, 3),\n      nodes = _useNodesState2[0],\n      setNodes = _useNodesState2[1],\n      onNodesChange = _useNodesState2[2];\n\n  var _useEdgesState = useEdgesState([]),\n      _useEdgesState2 = _slicedToArray(_useEdgesState, 3),\n      edges = _useEdgesState2[0],\n      setEdges = _useEdgesState2[1],\n      onEdgesChange = _useEdgesState2[2];\n\n  var _React$useState = React.useState(3),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      id = _React$useState2[0],\n      setId = _React$useState2[1];\n\n  var updateNodeSdf = function updateNodeSdf(id, newSdf, parent) {\n    console.log(\"ACTUALIZADONDO SDF DE \" + id);\n    var foundNode = null;\n\n    var nodesCopy = _toConsumableArray(nodes);\n\n    nodesCopy.forEach(function (node) {\n      if (node.id === id) {\n        node.data = _objectSpread(_objectSpread({}, node.data), {}, {\n          sdf: newSdf\n        });\n        nodesCopy.forEach(function (n) {\n          node.data.children.forEach(function (child) {\n            if (child === n.id) {\n              console.log(\"\\tACTUALIZANDO INPUTS DE HIJO \" + child);\n              var newInputs = n.data.inputs;\n              newInputs[\"\".concat(node.id)] = newSdf;\n              n.data = _objectSpread(_objectSpread({}, node.data), {}, {\n                inputs: newInputs\n              });\n            }\n          });\n        });\n      }\n\n      return node;\n    }); // setNodes((nds) =>\n    //   nds.map((node) => {\n    //     if (node.id === id) {\n    //       node.data = {\n    //         ...node.data,\n    //         sdf: newSdf,\n    //       };\n    //       console.log(\"HIJOS DE \" + id + \": \");\n    //       console.log(node.data.children);\n    //       node.data.children.forEach((child) => {\n    //         console.log(\"\\tACTUALIZANDO HIJO \" + child);\n    //         var newInputs = child.data.inputs;\n    //         newInputs[`${node.id}`] = newSdf;\n    //         child.data = {\n    //           ...node.data,\n    //           inputs: newInputs,\n    //         };\n    //       });\n    //     }\n    //     return node;\n    //   })\n    // );\n\n    console.log(\"enco\");\n    console.log(foundNode);\n  };\n\n  var removeChild = function removeChild(parent, child) {\n    setNodes(function (nds) {\n      return nds.map(function (node) {\n        if (node.id === parent) {\n          console.log(\"ELIMINANDO HIJO \".concat(child, \" DE \").concat(parent));\n          var newChildren = node.data.children;\n          newChildren = newChildren.filter(function (c) {\n            return c.id != child;\n          });\n          node.data = _objectSpread(_objectSpread({}, node.data), {}, {\n            children: newChildren\n          });\n        }\n\n        if (node.id === child) {\n          console.log(\"ACTUALIZANDO \".concat(child));\n          var newInputs = node.data.inputs;\n          newInputs[\"\".concat(parent)] = \"\";\n          node.data = _objectSpread(_objectSpread({}, node.data), {}, {\n            inputs: newInputs\n          });\n        }\n\n        onNodesChange([node]);\n        return node;\n      });\n    });\n  };\n\n  var removeEdge = function removeEdge(edgeId) {\n    console.log(\"WDGES: \");\n    console.log(edges);\n    var edge = edges.find(function (e) {\n      return e.id === edgeId;\n    });\n    var newEdges = edges.filter(function (edge) {\n      console.log(edge.source);\n      return edge.id != edgeId;\n    });\n    setEdges(newEdges);\n    removeChild(edge.source, edge.target);\n  };\n\n  var sharedFunctions = {\n    updateNodeSdf: updateNodeSdf,\n    removeEdge: removeEdge\n  };\n\n  var onConnect = function onConnect(params) {\n    var sourceNode = nodes.find(function (n) {\n      return n.id === params.source;\n    }); // CREAMOS EDGE\n\n    setEdges(function (eds) {\n      return addEdge(_objectSpread(_objectSpread({}, params), {}, {\n        type: \"buttonEdge\",\n        animated: true,\n        markerEnd: {\n          type: MarkerType.Arrow,\n          color: \"#000\"\n        }\n      }), eds);\n    }); // AÃ‘ADIMOS HIJO AL PADRE\n\n    var newChildren = sourceNode.data.children;\n    newChildren.push(params.target);\n    setNodes(function (nds) {\n      return nds.map(function (node) {\n        if (node.id === params.source) {\n          console.log(\"A\\xD1ADIENDO HIJO \".concat(params.target, \" A \").concat(params.source)); // var newChildren = node.data.children;\n          // console.log(typeof newChildren);\n          // console.log(newChildren);\n          // newChildren.push(params.target);\n\n          console.log(newChildren);\n          node.data = _objectSpread(_objectSpread({}, node.data), {}, {\n            children: newChildren\n          });\n        }\n\n        if (node.id === params.target) {\n          console.log(\"INICIALIZANDO \".concat(params.source));\n          var newInputs = node.data.inputs;\n          newInputs[\"\".concat(params.source)] = sourceNode.data.sdf;\n          node.data = _objectSpread(_objectSpread({}, node.data), {}, {\n            inputs: newInputs\n          });\n        }\n\n        onNodesChange([node]);\n        return node;\n      });\n    }); // INICIAMOS HIJO\n  };\n\n  useEffect(function () {\n    console.log(\"NODOS ACTUALIZADOS\");\n    console.log(nodes);\n  }, [nodes]);\n  useEffect(function () {\n    console.log(\"NUEVO EDGE:\");\n    console.log(edges);\n  }, [edges]);\n\n  var newPrimitiveNode = function newPrimitiveNode() {\n    var xPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var yPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    setId(id + 1);\n    var nodeId = \"node-\".concat(id);\n    return {\n      id: nodeId,\n      type: \"primitiveNode\",\n      position: {\n        x: xPos,\n        y: yPos\n      },\n      data: {\n        inputs: {},\n        sdf: \"\",\n        children: []\n      }\n    };\n  };\n\n  var newBooleanNode = function newBooleanNode() {\n    var xPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var yPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    setId(id + 1);\n    return {\n      id: \"node-\".concat(id),\n      type: \"booleanNode\",\n      position: {\n        x: xPos,\n        y: yPos\n      },\n      data: {\n        inputs: {},\n        sdf: \"\",\n        children: []\n      }\n    };\n  };\n\n  var handleKey = function handleKey(e) {\n    // SPACE BAR\n    if (e.key.toLowerCase() === \"p\") {\n      var node = newPrimitiveNode();\n      nodes.push(node);\n      onNodesChange([node]); // Para actualizar\n    } else if (e.key.toLowerCase() === \"b\") {\n      var _node = newBooleanNode();\n\n      nodes.push(_node);\n      onNodesChange([_node]); // Para actualizar\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100vh\"\n    },\n    tabIndex: \"0\",\n    onKeyDown: handleKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GraphProvider, {\n    value: sharedFunctions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    onConnect: onConnect // onDisconnect={onDisconnect}\n    ,\n    nodeTypes: nodeTypes,\n    edgeTypes: edgeTypes,\n    onInit: onInit // onEdgeClick={(ev, edge) =>\n    //   setEdges(edges.filter((e) => e.id != edge.id))\n    // }\n    ,\n    snapToGrid: true,\n    fitView: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Background, {\n    color: \"#aaa\",\n    gap: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"names":["React","useCallback","useEffect","ReactFlow","addEdge","Background","useNodesState","useEdgesState","MarkerType","PrimitiveNode","BooleanNode","ButtonEdge","ShaderNode","TestNode","GraphProvider","nodeTypes","primitiveNode","booleanNode","edgeTypes","buttonEdge","initialNodes","id","type","position","x","y","data","inputs","sdf","children","initialEdges","onInit","reactFlowInstance","console","log","Graph","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","useState","setId","updateNodeSdf","newSdf","parent","foundNode","nodesCopy","forEach","node","n","child","newInputs","removeChild","nds","map","newChildren","filter","c","removeEdge","edgeId","edge","find","e","newEdges","source","target","sharedFunctions","onConnect","params","sourceNode","eds","animated","markerEnd","Arrow","color","push","newPrimitiveNode","xPos","yPos","nodeId","newBooleanNode","handleKey","key","toLowerCase","height"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/Graph.js"],"sourcesContent":["import React from \"react\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  useNodesState,\r\n  useEdgesState,\r\n  MarkerType,\r\n} from \"react-flow-renderer\";\r\nimport PrimitiveNode from \"./PrimitiveNode.js\";\r\nimport BooleanNode from \"./BooleanNode.js\";\r\nimport ButtonEdge from \"./ButtonEdge\";\r\nimport ShaderNode from \"./ShaderNode.js\";\r\nimport TestNode from \"./TestNode.js\";\r\n\r\nimport \"./styles.css\";\r\nimport { GraphProvider } from \"./GraphContext.js\";\r\n\r\nconst nodeTypes = { primitiveNode: PrimitiveNode, booleanNode: BooleanNode };\r\nconst edgeTypes = { buttonEdge: ButtonEdge };\r\n\r\nconst initialNodes = [\r\n  {\r\n    id: `node-0`,\r\n    type: \"primitiveNode\",\r\n    position: { x: 0, y: -150 },\r\n    data: { inputs: {}, sdf: \"\", children: [] },\r\n  },\r\n  {\r\n    id: `node-1`,\r\n    type: \"booleanNode\",\r\n    position: { x: 0, y: 350 },\r\n    data: { inputs: {}, sdf: \"\", children: [] },\r\n  },\r\n  {\r\n    id: `node-2`,\r\n    type: \"booleanNode\",\r\n    position: { x: 0, y: 700 },\r\n    data: { inputs: {}, sdf: \"\", children: [] },\r\n  }\r\n];\r\n\r\nconst initialEdges = [];\r\n\r\nconst onInit = (reactFlowInstance) =>\r\n  console.log(\"flow loaded:\", reactFlowInstance);\r\n\r\nexport default function Graph() {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [id, setId] = React.useState(3);\r\n\r\n  const updateNodeSdf = (id, newSdf, parent) => {\r\n    console.log(\"ACTUALIZADONDO SDF DE \" + id);\r\n    var foundNode = null;\r\n\r\n    var nodesCopy = [...nodes];\r\n\r\n    nodesCopy.forEach(node => {\r\n      if(node.id === id){\r\n        node.data = {\r\n          ...node.data,\r\n          sdf: newSdf,\r\n        };\r\n\r\n        nodesCopy.forEach(n => {\r\n          node.data.children.forEach(child => {\r\n            if(child === n.id){\r\n              console.log(\"\\tACTUALIZANDO INPUTS DE HIJO \" + child);\r\n              var newInputs = n.data.inputs;\r\n              newInputs[`${node.id}`] = newSdf;\r\n\r\n              n.data = {\r\n                ...node.data,\r\n                inputs: newInputs,\r\n              };\r\n            }\r\n          });\r\n        })\r\n      }\r\n\r\n      return node;\r\n    });\r\n\r\n    // setNodes((nds) =>\r\n    //   nds.map((node) => {\r\n    //     if (node.id === id) {\r\n    //       node.data = {\r\n    //         ...node.data,\r\n    //         sdf: newSdf,\r\n    //       };\r\n\r\n    //       console.log(\"HIJOS DE \" + id + \": \");\r\n    //       console.log(node.data.children);\r\n\r\n    //       node.data.children.forEach((child) => {\r\n    //         console.log(\"\\tACTUALIZANDO HIJO \" + child);\r\n    //         var newInputs = child.data.inputs;\r\n    //         newInputs[`${node.id}`] = newSdf;\r\n\r\n    //         child.data = {\r\n    //           ...node.data,\r\n    //           inputs: newInputs,\r\n    //         };\r\n    //       });\r\n    //     }\r\n\r\n    //     return node;\r\n    //   })\r\n    // );\r\n\r\n    console.log(\"enco\");\r\n    console.log(foundNode);\r\n  };\r\n\r\n  const removeChild = (parent, child) => {\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === parent) {\r\n          console.log(`ELIMINANDO HIJO ${child} DE ${parent}`);\r\n\r\n          var newChildren = node.data.children;\r\n          newChildren = newChildren.filter(function (c) {\r\n            return c.id != child;\r\n          });\r\n\r\n          node.data = {\r\n            ...node.data,\r\n            children: newChildren,\r\n          };\r\n        }\r\n        if (node.id === child) {\r\n          console.log(`ACTUALIZANDO ${child}`);\r\n          var newInputs = node.data.inputs;\r\n          newInputs[`${parent}`] = \"\";\r\n          node.data = {\r\n            ...node.data,\r\n            inputs: newInputs,\r\n          };\r\n        }\r\n\r\n        onNodesChange([node]);\r\n        return node;\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeEdge = (edgeId) => {\r\n      console.log(\"WDGES: \");\r\n    console.log(edges);\r\n     const edge = edges.find(e => e.id === edgeId);\r\n\r\n     var newEdges = edges.filter((edge) => {\r\n       console.log(edge.source);\r\n       return edge.id != edgeId;\r\n     });\r\n\r\n    setEdges(newEdges);\r\n     removeChild(edge.source, edge.target);\r\n  };\r\n\r\n  const sharedFunctions = {\r\n    updateNodeSdf,\r\n    removeEdge\r\n  };\r\n\r\n  const onConnect = (params) => {\r\n    const sourceNode = nodes.find((n) => n.id === params.source);\r\n\r\n    // CREAMOS EDGE\r\n    setEdges((eds) =>\r\n      addEdge(\r\n        {\r\n          ...params,\r\n          type: \"buttonEdge\",\r\n          animated: true,\r\n          markerEnd: { type: MarkerType.Arrow, color: \"#000\" },\r\n        },\r\n        eds\r\n      )\r\n    );\r\n\r\n    // AÃ‘ADIMOS HIJO AL PADRE\r\n    var newChildren = sourceNode.data.children;\r\n    newChildren.push(params.target);\r\n\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === params.source) {\r\n          console.log(`AÃ‘ADIENDO HIJO ${params.target} A ${params.source}`);\r\n\r\n          // var newChildren = node.data.children;\r\n          // console.log(typeof newChildren);\r\n          // console.log(newChildren);\r\n          // newChildren.push(params.target);\r\n          console.log(newChildren);\r\n          node.data = {\r\n            ...node.data,\r\n            children: newChildren,\r\n          };\r\n        }\r\n        if (node.id === params.target) {\r\n          console.log(`INICIALIZANDO ${params.source}`);\r\n          var newInputs = node.data.inputs;\r\n          newInputs[`${params.source}`] = sourceNode.data.sdf;\r\n          node.data = {\r\n            ...node.data,\r\n            inputs: newInputs,\r\n          };\r\n        }\r\n\r\n        onNodesChange([node]);\r\n        return node;\r\n      })\r\n    );\r\n\r\n    // INICIAMOS HIJO\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"NODOS ACTUALIZADOS\");\r\n    console.log(nodes);\r\n  }, [nodes]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"NUEVO EDGE:\");\r\n    console.log(edges);\r\n  }, [edges]);\r\n\r\n  const newPrimitiveNode = (xPos = 0, yPos = 0) => {\r\n    setId(id + 1);\r\n    const nodeId = `node-${id}`;\r\n    return {\r\n      id: nodeId,\r\n      type: \"primitiveNode\",\r\n      position: { x: xPos, y: yPos },\r\n      data: {\r\n        inputs: {},\r\n        sdf: \"\",\r\n        children: [],\r\n      },\r\n    };\r\n  };\r\n\r\n  const newBooleanNode = (xPos = 0, yPos = 0) => {\r\n    setId(id + 1);\r\n    return {\r\n      id: `node-${id}`,\r\n      type: \"booleanNode\",\r\n      position: { x: xPos, y: yPos },\r\n      data: { inputs: {}, sdf: \"\", children: [] },\r\n    };\r\n  };\r\n\r\n  const handleKey = (e) => {\r\n    // SPACE BAR\r\n    if (e.key.toLowerCase() === \"p\") {\r\n      const node = newPrimitiveNode();\r\n      nodes.push(node);\r\n\r\n      onNodesChange([node]); // Para actualizar\r\n    } else if (e.key.toLowerCase() === \"b\") {\r\n      const node = newBooleanNode();\r\n      nodes.push(node);\r\n\r\n      onNodesChange([node]); // Para actualizar\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }} tabIndex=\"0\" onKeyDown={handleKey}>\r\n      <GraphProvider value={sharedFunctions}>\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          // onDisconnect={onDisconnect}\r\n\r\n          nodeTypes={nodeTypes}\r\n          edgeTypes={edgeTypes}\r\n          onInit={onInit}\r\n          // onEdgeClick={(ev, edge) =>\r\n          //   setEdges(edges.filter((e) => e.id != edge.id))\r\n          // }\r\n          snapToGrid={true}\r\n          fitView\r\n        >\r\n          <Background color=\"#aaa\" gap={10} />\r\n        </ReactFlow>\r\n      </GraphProvider>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}