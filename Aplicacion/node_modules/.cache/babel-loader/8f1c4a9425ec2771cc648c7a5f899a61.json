{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\Graph.js\";\nimport React from \"react\";\nimport { useCallback, useState } from \"react\";\nimport ReactFlow, { addEdge, applyEdgeChanges, applyNodeChanges, Handle, Position } from \"react-flow-renderer\";\nimport { Button } from \"rsuite\";\nimport Shader from \"./Shader.js\";\nimport { fs } from \"./fragmentShader.js\";\nimport \"./styles.css\";\nvar handleStyle = {\n  left: 10\n};\n\nfunction TextUpdaterNode(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState([1.0, 0.0, 0.0]),\n      _useState2 = _slicedToArray(_useState, 2),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  var onChange = useCallback(function (evt) {\n    console.log(evt.target.value);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-node\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-node-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Ejemplo\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Handle, {\n    type: \"target\",\n    position: \"left\",\n    id: \"a\",\n    className: \"custom-handle\",\n    isConnectable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Handle, {\n    type: \"source\",\n    position: \"right\",\n    id: \"a\",\n    className: \"custom-handle\",\n    isConnectable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Handle, {\n    type: \"source\",\n    position: \"right\",\n    id: \"a\",\n    className: \"custom-handle\",\n    isConnectable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return setColor([Math.random(), Math.random(), Math.random()]);\n    },\n    appearance: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Change Color\"), /*#__PURE__*/React.createElement(Shader, {\n    shader: fs(),\n    uniforms: {\n      color: {\n        type: \"3fv\",\n        value: color\n      }\n    },\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar initialNodes = [{\n  id: \"node-1\",\n  type: \"textUpdater\",\n  position: {\n    x: 0,\n    y: 0\n  },\n  data: {\n    value: 123\n  }\n}, {\n  id: \"node-2\",\n  type: \"textUpdater\",\n  position: {\n    x: 250,\n    y: 0\n  },\n  data: {\n    value: 1\n  }\n}];\nvar initialEdges = [{\n  id: \"e1-2\",\n  source: \"node-1\",\n  target: \"node-2\",\n  label: \"label\",\n  animated: true\n}]; // we define the nodeTypes outside of the component to prevent re-renderings\n// you could also use useMemo inside the component\n\nvar nodeTypes = {\n  textUpdater: TextUpdaterNode\n};\nexport default function Graph() {\n  var _useState3 = useState(initialNodes),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nodes = _useState4[0],\n      setNodes = _useState4[1];\n\n  var _useState5 = useState(initialEdges),\n      _useState6 = _slicedToArray(_useState5, 2),\n      edges = _useState6[0],\n      setEdges = _useState6[1];\n\n  var onNodesChange = useCallback(function (changes) {\n    return setNodes(function (nds) {\n      return applyNodeChanges(changes, nds);\n    });\n  }, [setNodes]);\n  var onEdgesChange = useCallback(function (changes) {\n    return setEdges(function (eds) {\n      return applyEdgeChanges(changes, eds);\n    });\n  }, [setEdges]);\n  var onConnect = useCallback(function (connection) {\n    return setEdges(function (eds) {\n      return addEdge(connection, eds);\n    });\n  }, [setEdges]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    onConnect: onConnect,\n    nodeTypes: nodeTypes,\n    fitView: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useCallback","useState","ReactFlow","addEdge","applyEdgeChanges","applyNodeChanges","Handle","Position","Button","Shader","fs","handleStyle","left","TextUpdaterNode","data","color","setColor","onChange","evt","console","log","target","value","Math","random","type","margin","initialNodes","id","position","x","y","initialEdges","source","label","animated","nodeTypes","textUpdater","Graph","nodes","setNodes","edges","setEdges","onNodesChange","changes","nds","onEdgesChange","eds","onConnect","connection"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/Graph.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { useCallback, useState } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  applyEdgeChanges,\r\n  applyNodeChanges,\r\n  Handle,\r\n  Position\r\n} from \"react-flow-renderer\";\r\nimport { Button } from \"rsuite\";\r\nimport Shader from \"./Shader.js\";\r\nimport { fs } from \"./fragmentShader.js\";\r\nimport \"./styles.css\";\r\n\r\nconst handleStyle = { left: 10 };\r\n\r\nfunction TextUpdaterNode({ data }) {\r\n  const [color, setColor] = useState([1.0, 0.0, 0.0]);\r\n\r\n  const onChange = useCallback((evt) => {\r\n    console.log(evt.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"custom-node\">\r\n      <div className=\"custom-node-header\">Ejemplo</div>\r\n      <div>\r\n        <Handle\r\n          type=\"target\"\r\n          position=\"left\"\r\n          id=\"a\"\r\n          className=\"custom-handle\"\r\n          isConnectable={true}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Handle\r\n          type=\"source\"\r\n          position=\"right\"\r\n          id=\"a\"\r\n          className=\"custom-handle\"\r\n          isConnectable={true}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Handle\r\n          type=\"source\"\r\n          position=\"right\"\r\n          id=\"a\"\r\n          className=\"custom-handle\"\r\n          isConnectable={true}\r\n        />\r\n      </div>\r\n      <Button\r\n        onClick={() => setColor([Math.random(), Math.random(), Math.random()])}\r\n        appearance=\"primary\"\r\n      >\r\n        Change Color\r\n      </Button>\r\n      <Shader\r\n        shader={fs()}\r\n        uniforms={{ color: { type: \"3fv\", value: color } }}\r\n        style={{ margin: \"10px\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst initialNodes = [\r\n  {\r\n    id: \"node-1\",\r\n    type: \"textUpdater\",\r\n    position: { x: 0, y: 0 },\r\n    data: { value: 123 }\r\n  },\r\n  {\r\n    id: \"node-2\",\r\n    type: \"textUpdater\",\r\n    position: { x: 250, y: 0 },\r\n    data: { value: 1 }\r\n  }\r\n];\r\n\r\nconst initialEdges = [\r\n  {\r\n    id: \"e1-2\",\r\n    source: \"node-1\",\r\n    target: \"node-2\",\r\n    label: \"label\",\r\n    animated: true\r\n  }\r\n];\r\n// we define the nodeTypes outside of the component to prevent re-renderings\r\n// you could also use useMemo inside the component\r\nconst nodeTypes = { textUpdater: TextUpdaterNode };\r\n\r\nexport default function Graph() {\r\n  const [nodes, setNodes] = useState(initialNodes);\r\n  const [edges, setEdges] = useState(initialEdges);\r\n\r\n  const onNodesChange = useCallback(\r\n    (changes) => setNodes((nds) => applyNodeChanges(changes, nds)),\r\n    [setNodes]\r\n  );\r\n  const onEdgesChange = useCallback(\r\n    (changes) => setEdges((eds) => applyEdgeChanges(changes, eds)),\r\n    [setEdges]\r\n  );\r\n  const onConnect = useCallback(\r\n    (connection) => setEdges((eds) => addEdge(connection, eds)),\r\n    [setEdges]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n        onNodesChange={onNodesChange}\r\n        onEdgesChange={onEdgesChange}\r\n        onConnect={onConnect}\r\n        nodeTypes={nodeTypes}\r\n        fitView\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}