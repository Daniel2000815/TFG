{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pfactor = void 0;\n\nvar Symbol_1 = require(\"../../../Types/Symbol\");\n\nvar Utils_1 = require(\"../../../Core/Utils\");\n\nvar Math2_1 = require(\"../../Math2\");\n\nvar Frac_1 = require(\"../../../Types/Frac\");\n\nvar index_1 = require(\"../index\");\n\nvar Parser_1 = require(\"../../../Parser/Parser\");\n\nfunction pfactor(symbol) {\n  //Fix issue #458 | nerdamer(\"sqrt(1-(3.3333333550520926e-7)^2)\").evaluate().text()\n  //More Big Number issues >:(\n  if (symbol.greaterThan(9.999999999998891e+41) || symbol.equals(-1)) return symbol; //Fix issue #298\n\n  if (symbol.equals(Math.PI)) return new Symbol_1.Symbol(Math.PI); //evaluate the symbol to merge constants\n\n  symbol = (0, Parser_1.evaluate)(symbol.clone());\n\n  if (symbol.isConstant()) {\n    var retval = new Symbol_1.Symbol(1);\n    var m = symbol.toString();\n\n    if ((0, Utils_1.isInt)(m)) {\n      var factors = Math2_1.Math2.ifactor(m);\n\n      for (var factor in factors) {\n        var p = factors[factor];\n        retval = (0, index_1.multiply)(retval, (0, Symbol_1.symfunction)('parens', [new Symbol_1.Symbol(factor).setPower(new Frac_1.Frac(p))]));\n      }\n    } else {\n      var n = pfactor(new Symbol_1.Symbol(symbol.multiplier.num));\n      var d = pfactor(new Symbol_1.Symbol(symbol.multiplier.den));\n      retval = (0, index_1.multiply)((0, Symbol_1.symfunction)('parens', [n]), (0, Symbol_1.symfunction)('parens', [d]).invert());\n    }\n  } else retval = (0, Symbol_1.symfunction)('pfactor', arguments);\n\n  return retval;\n}\n\nexports.pfactor = pfactor;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,SAAgBA,OAAhB,CAAwBC,MAAxB,EAA8B;EAC1B;EACA;EACA,IAAIA,MAAM,CAACC,WAAP,CAAmB,qBAAnB,KAA6CD,MAAM,CAACE,MAAP,CAAc,CAAC,CAAf,CAAjD,EACI,OAAOF,MAAP,CAJsB,CAK1B;;EACA,IAAIA,MAAM,CAACE,MAAP,CAAcC,IAAI,CAACC,EAAnB,CAAJ,EACI,OAAO,IAAIC,eAAJ,CAAWF,IAAI,CAACC,EAAhB,CAAP,CAPsB,CAQ1B;;EACAJ,MAAM,GAAG,uBAASA,MAAM,CAACM,KAAP,EAAT,CAAT;;EAEA,IAAIN,MAAM,CAACO,UAAP,EAAJ,EAAyB;IACrB,IAAIC,MAAM,GAAG,IAAIH,eAAJ,CAAW,CAAX,CAAb;IACA,IAAII,CAAC,GAAGT,MAAM,CAACU,QAAP,EAAR;;IACA,IAAI,mBAAMD,CAAN,CAAJ,EAAc;MACV,IAAIE,OAAO,GAAGC,cAAMC,OAAN,CAAcJ,CAAd,CAAd;;MACA,KAAK,IAAIK,MAAT,IAAmBH,OAAnB,EAA4B;QACxB,IAAII,CAAC,GAAGJ,OAAO,CAACG,MAAD,CAAf;QACAN,MAAM,GAAG,sBAASA,MAAT,EAAiB,0BAAY,QAAZ,EAAsB,CAAC,IAAIH,eAAJ,CAAWS,MAAX,EAAmBE,QAAnB,CAA4B,IAAIC,WAAJ,CAASF,CAAT,CAA5B,CAAD,CAAtB,CAAjB,CAAT;MACH;IACJ,CAND,MAOK;MACD,IAAIG,CAAC,GAAGnB,OAAO,CAAC,IAAIM,eAAJ,CAAWL,MAAM,CAACmB,UAAP,CAAkBC,GAA7B,CAAD,CAAf;MACA,IAAIC,CAAC,GAAGtB,OAAO,CAAC,IAAIM,eAAJ,CAAWL,MAAM,CAACmB,UAAP,CAAkBG,GAA7B,CAAD,CAAf;MACAd,MAAM,GAAG,sBAAS,0BAAY,QAAZ,EAAsB,CAACU,CAAD,CAAtB,CAAT,EAAqC,0BAAY,QAAZ,EAAsB,CAACG,CAAD,CAAtB,EAA2BE,MAA3B,EAArC,CAAT;IACH;EACJ,CAfD,MAiBIf,MAAM,GAAG,0BAAY,SAAZ,EAAuBgB,SAAvB,CAAT;;EACJ,OAAOhB,MAAP;AACH;;AA9BDiB","names":["pfactor","symbol","greaterThan","equals","Math","PI","Symbol_1","clone","isConstant","retval","m","toString","factors","Math2_1","ifactor","factor","p","setPower","Frac_1","n","multiplier","num","d","den","invert","arguments","exports"],"sourceRoot":"","sources":["../../../../src/Functions/Core/math/pfactor.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}