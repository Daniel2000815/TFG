{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar animateStyle = require('./animate-style.cjs.js');\n\nvar options = require('./utils/options.cjs.js');\n\nvar resolveElements = require('../utils/resolve-elements.cjs.js');\n\nvar controls = require('./utils/controls.cjs.js');\n\nvar stagger = require('../utils/stagger.cjs.js');\n\nfunction animate(elements, keyframes) {\n  var options$1 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  elements = resolveElements.resolveElements(elements);\n  var numElements = elements.length;\n  /**\r\n   * Create and start new animations\r\n   */\n\n  var animationFactories = [];\n\n  for (var i = 0; i < numElements; i++) {\n    var element = elements[i];\n\n    for (var key in keyframes) {\n      var valueOptions = options.getOptions(options$1, key);\n      valueOptions.delay = stagger.resolveOption(valueOptions.delay, i, numElements);\n      var animation = animateStyle.animateStyle(element, key, keyframes[key], valueOptions);\n      animationFactories.push(animation);\n    }\n  }\n\n  return controls.withControls(animationFactories, options$1,\n  /**\r\n   * TODO:\r\n   * If easing is set to spring or glide, duration will be dynamically\r\n   * generated. Ideally we would dynamically generate this from\r\n   * animation.effect.getComputedTiming().duration but this isn't\r\n   * supported in iOS13 or our number polyfill. Perhaps it's possible\r\n   * to Proxy animations returned from animateStyle that has duration\r\n   * as a getter.\r\n   */\n  options$1.duration);\n}\n\nexports.animate = animate;","map":{"version":3,"names":["Object","defineProperty","exports","value","animateStyle","require","options","resolveElements","controls","stagger","animate","elements","keyframes","options$1","numElements","length","animationFactories","i","element","key","valueOptions","getOptions","delay","resolveOption","animation","push","withControls","duration"],"sources":["G:/gitlab/TFG/Aplicacion/node_modules/@motionone/dom/dist/animate/index.cjs.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\nvar animateStyle = require('./animate-style.cjs.js');\r\nvar options = require('./utils/options.cjs.js');\r\nvar resolveElements = require('../utils/resolve-elements.cjs.js');\r\nvar controls = require('./utils/controls.cjs.js');\r\nvar stagger = require('../utils/stagger.cjs.js');\r\n\r\nfunction animate(elements, keyframes, options$1 = {}) {\r\n    elements = resolveElements.resolveElements(elements);\r\n    const numElements = elements.length;\r\n    /**\r\n     * Create and start new animations\r\n     */\r\n    const animationFactories = [];\r\n    for (let i = 0; i < numElements; i++) {\r\n        const element = elements[i];\r\n        for (const key in keyframes) {\r\n            const valueOptions = options.getOptions(options$1, key);\r\n            valueOptions.delay = stagger.resolveOption(valueOptions.delay, i, numElements);\r\n            const animation = animateStyle.animateStyle(element, key, keyframes[key], valueOptions);\r\n            animationFactories.push(animation);\r\n        }\r\n    }\r\n    return controls.withControls(animationFactories, options$1, \r\n    /**\r\n     * TODO:\r\n     * If easing is set to spring or glide, duration will be dynamically\r\n     * generated. Ideally we would dynamically generate this from\r\n     * animation.effect.getComputedTiming().duration but this isn't\r\n     * supported in iOS13 or our number polyfill. Perhaps it's possible\r\n     * to Proxy animations returned from animateStyle that has duration\r\n     * as a getter.\r\n     */\r\n    options$1.duration);\r\n}\r\n\r\nexports.animate = animate;\r\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,wBAAD,CAA1B;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,wBAAD,CAArB;;AACA,IAAIE,eAAe,GAAGF,OAAO,CAAC,kCAAD,CAA7B;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,yBAAD,CAAtB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,yBAAD,CAArB;;AAEA,SAASK,OAAT,CAAiBC,QAAjB,EAA2BC,SAA3B,EAAsD;EAAA,IAAhBC,SAAgB,uEAAJ,EAAI;EAClDF,QAAQ,GAAGJ,eAAe,CAACA,eAAhB,CAAgCI,QAAhC,CAAX;EACA,IAAMG,WAAW,GAAGH,QAAQ,CAACI,MAA7B;EACA;AACJ;AACA;;EACI,IAAMC,kBAAkB,GAAG,EAA3B;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,WAApB,EAAiCG,CAAC,EAAlC,EAAsC;IAClC,IAAMC,OAAO,GAAGP,QAAQ,CAACM,CAAD,CAAxB;;IACA,KAAK,IAAME,GAAX,IAAkBP,SAAlB,EAA6B;MACzB,IAAMQ,YAAY,GAAGd,OAAO,CAACe,UAAR,CAAmBR,SAAnB,EAA8BM,GAA9B,CAArB;MACAC,YAAY,CAACE,KAAb,GAAqBb,OAAO,CAACc,aAAR,CAAsBH,YAAY,CAACE,KAAnC,EAA0CL,CAA1C,EAA6CH,WAA7C,CAArB;MACA,IAAMU,SAAS,GAAGpB,YAAY,CAACA,YAAb,CAA0Bc,OAA1B,EAAmCC,GAAnC,EAAwCP,SAAS,CAACO,GAAD,CAAjD,EAAwDC,YAAxD,CAAlB;MACAJ,kBAAkB,CAACS,IAAnB,CAAwBD,SAAxB;IACH;EACJ;;EACD,OAAOhB,QAAQ,CAACkB,YAAT,CAAsBV,kBAAtB,EAA0CH,SAA1C;EACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIA,SAAS,CAACc,QAVH,CAAP;AAWH;;AAEDzB,OAAO,CAACQ,OAAR,GAAkBA,OAAlB"},"metadata":{},"sourceType":"script"}