{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TrigHyperbolic = void 0;\n//object for functions which handle hyperbolic trig\nvar Settings_1 = require(\"../Settings\");\nvar Symbol_1 = require(\"../Types/Symbol\");\nvar Utils_1 = require(\"../Core/Utils\");\nvar Complex_1 = require(\"./Complex\");\nvar Core_1 = require(\"./Core\");\nvar Parser_1 = require(\"../Parser/Parser\");\nexports.TrigHyperbolic = {\n  //container for hyperbolic trig function\n  cosh: function cosh(symbol) {\n    var retval;\n    if (Settings_1.Settings.PARSE2NUMBER) {\n      if (symbol.isConstant()) return new Symbol_1.Symbol(Math.cosh(symbol.valueOf()));\n      if (symbol.isImaginary()) {\n        return Complex_1.Complex.evaluate(symbol, 'cosh');\n      }\n    }\n    return (0, Symbol_1.symfunction)('cosh', arguments);\n  },\n  sinh: function sinh(symbol) {\n    var retval;\n    if (Settings_1.Settings.PARSE2NUMBER) {\n      if (symbol.isConstant()) return new Symbol_1.Symbol(Math.sinh(symbol.valueOf()));\n      if (symbol.isImaginary()) {\n        return Complex_1.Complex.evaluate(symbol, 'sinh');\n      }\n    }\n    return retval = (0, Symbol_1.symfunction)('sinh', arguments);\n  },\n  tanh: function tanh(symbol) {\n    var retval;\n    if (Settings_1.Settings.PARSE2NUMBER) {\n      if (symbol.isConstant()) return new Symbol_1.Symbol(Math.tanh(symbol.valueOf()));\n      if (symbol.isImaginary()) {\n        return Complex_1.Complex.evaluate(symbol, 'tanh');\n      }\n    }\n    return retval = (0, Symbol_1.symfunction)('tanh', arguments);\n  },\n  sech: function sech(symbol) {\n    var retval;\n    if (Settings_1.Settings.PARSE2NUMBER) {\n      if (symbol.isConstant()) {\n        return new Symbol_1.Symbol(Math.sech(symbol.valueOf()));\n      }\n      if (symbol.isImaginary()) {\n        return Complex_1.Complex.evaluate(symbol, 'sech');\n      }\n      return (0, Parser_1.parse)((0, Utils_1.format)('1/cosh({0})', symbol));\n    }\n    return retval = (0, Symbol_1.symfunction)('sech', arguments);\n  },\n  csch: function csch(symbol) {\n    var retval;\n    if (Settings_1.Settings.PARSE2NUMBER) {\n      if (symbol.isConstant()) return new Symbol_1.Symbol(Math.csch(symbol.valueOf()));\n      if (symbol.isImaginary()) {\n        return Complex_1.Complex.evaluate(symbol, 'csch');\n      }\n      return (0, Parser_1.parse)((0, Utils_1.format)('1/sinh({0})', symbol));\n    }\n    return retval = (0, Symbol_1.symfunction)('csch', arguments);\n  },\n  coth: function coth(symbol) {\n    var retval;\n    if (Settings_1.Settings.PARSE2NUMBER) {\n      if (symbol.isConstant()) return new Symbol_1.Symbol(Math.coth(symbol.valueOf()));\n      if (symbol.isImaginary()) {\n        return Complex_1.Complex.evaluate(symbol, 'coth');\n      }\n      return (0, Parser_1.parse)((0, Utils_1.format)('1/tanh({0})', symbol));\n    }\n    return retval = (0, Symbol_1.symfunction)('coth', arguments);\n  },\n  acosh: function acosh(symbol) {\n    var retval;\n    if (Settings_1.Settings.PARSE2NUMBER && symbol.isImaginary()) retval = Complex_1.Complex.evaluate(symbol, 'acosh');else if (Settings_1.Settings.PARSE2NUMBER) retval = (0, Parser_1.evaluate)((0, Parser_1.parse)((0, Utils_1.format)(Settings_1.Settings.LOG + '(({0})+sqrt(({0})^2-1))', symbol.toString())));else retval = (0, Symbol_1.symfunction)('acosh', arguments);\n    return retval;\n  },\n  asinh: function asinh(symbol) {\n    var retval;\n    if (Settings_1.Settings.PARSE2NUMBER && symbol.isImaginary()) retval = Complex_1.Complex.evaluate(symbol, 'asinh');else if (Settings_1.Settings.PARSE2NUMBER) retval = (0, Parser_1.evaluate)((0, Parser_1.parse)((0, Utils_1.format)(Settings_1.Settings.LOG + '(({0})+sqrt(({0})^2+1))', symbol.toString())));else retval = (0, Symbol_1.symfunction)('asinh', arguments);\n    return retval;\n  },\n  atanh: function atanh(symbol) {\n    var retval;\n    if (Settings_1.Settings.PARSE2NUMBER && symbol.isImaginary()) retval = Complex_1.Complex.evaluate(symbol, 'atanh');else if (Settings_1.Settings.PARSE2NUMBER) {\n      retval = (0, Parser_1.evaluate)((0, Parser_1.parse)((0, Utils_1.format)('(1/2)*' + Settings_1.Settings.LOG + '((1+({0}))/(1-({0})))', symbol.toString())));\n    } else retval = (0, Symbol_1.symfunction)('atanh', arguments);\n    return retval;\n  },\n  asech: function asech(symbol) {\n    var retval;\n    if (Settings_1.Settings.PARSE2NUMBER && symbol.isImaginary()) retval = Complex_1.Complex.evaluate(symbol, 'asech');else if (Settings_1.Settings.PARSE2NUMBER) retval = (0, Parser_1.evaluate)((0, Core_1.log)((0, Core_1.add)(symbol.clone().invert(), (0, Core_1.sqrt)((0, Core_1.subtract)((0, Core_1.pow)(symbol, new Symbol_1.Symbol(-2)), new Symbol_1.Symbol(1))))));else retval = (0, Symbol_1.symfunction)('asech', arguments);\n    return retval;\n  },\n  acsch: function acsch(symbol) {\n    var retval;\n    if (Settings_1.Settings.PARSE2NUMBER && symbol.isImaginary()) retval = Complex_1.Complex.evaluate(symbol, 'acsch');else if (Settings_1.Settings.PARSE2NUMBER) retval = (0, Parser_1.evaluate)((0, Parser_1.parse)((0, Utils_1.format)(Settings_1.Settings.LOG + '((1+sqrt(1+({0})^2))/({0}))', symbol.toString())));else retval = (0, Symbol_1.symfunction)('acsch', arguments);\n    return retval;\n  },\n  acoth: function acoth(symbol) {\n    var retval;\n    if (Settings_1.Settings.PARSE2NUMBER && symbol.isImaginary()) retval = Complex_1.Complex.evaluate(symbol, 'acoth');else if (Settings_1.Settings.PARSE2NUMBER) {\n      if (symbol.equals(1)) retval = Symbol_1.Symbol.infinity();else retval = (0, Parser_1.evaluate)((0, Core_1.divide)((0, Core_1.log)((0, Core_1.divide)((0, Core_1.add)(symbol.clone(), new Symbol_1.Symbol(1)), (0, Core_1.subtract)(symbol.clone(), new Symbol_1.Symbol(1)))), new Symbol_1.Symbol(2)));\n    } else retval = (0, Symbol_1.symfunction)('acoth', arguments);\n    return retval;\n  }\n};","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEaA,sBAAc,GAAG;EAC1B;EACAC,IAAI,EAAE,cAAUC,MAAM;IAClB,IAAIC,MAAM;IACV,IAAIC,mBAAQ,CAACC,YAAY,EAAE;MACvB,IAAIH,MAAM,CAACI,UAAU,EAAE,EACnB,OAAO,IAAIC,eAAM,CAACC,IAAI,CAACP,IAAI,CAACC,MAAM,CAACO,OAAO,EAAE,CAAC,CAAC;MAClD,IAAIP,MAAM,CAACQ,WAAW,EAAE,EAAE;QACtB,OAAOC,iBAAO,CAACC,QAAQ,CAACV,MAAM,EAAE,MAAM,CAAC;;;IAI/C,OAAO,wBAAW,EAAC,MAAM,EAAEW,SAAS,CAAC;EACzC,CAAC;EACDC,IAAI,EAAE,cAAUZ,MAAM;IAClB,IAAIC,MAAM;IACV,IAAIC,mBAAQ,CAACC,YAAY,EAAE;MACvB,IAAIH,MAAM,CAACI,UAAU,EAAE,EACnB,OAAO,IAAIC,eAAM,CAACC,IAAI,CAACM,IAAI,CAACZ,MAAM,CAACO,OAAO,EAAE,CAAC,CAAC;MAClD,IAAIP,MAAM,CAACQ,WAAW,EAAE,EAAE;QACtB,OAAOC,iBAAO,CAACC,QAAQ,CAACV,MAAM,EAAE,MAAM,CAAC;;;IAI/C,OAAOC,MAAM,GAAG,wBAAW,EAAC,MAAM,EAAEU,SAAS,CAAC;EAClD,CAAC;EACDE,IAAI,EAAE,cAAUb,MAAM;IAClB,IAAIC,MAAM;IACV,IAAIC,mBAAQ,CAACC,YAAY,EAAE;MACvB,IAAIH,MAAM,CAACI,UAAU,EAAE,EACnB,OAAO,IAAIC,eAAM,CAACC,IAAI,CAACO,IAAI,CAACb,MAAM,CAACO,OAAO,EAAE,CAAC,CAAC;MAClD,IAAIP,MAAM,CAACQ,WAAW,EAAE,EAAE;QACtB,OAAOC,iBAAO,CAACC,QAAQ,CAACV,MAAM,EAAE,MAAM,CAAC;;;IAI/C,OAAOC,MAAM,GAAG,wBAAW,EAAC,MAAM,EAAEU,SAAS,CAAC;EAClD,CAAC;EACDG,IAAI,EAAE,cAAUd,MAAM;IAClB,IAAIC,MAAM;IACV,IAAIC,mBAAQ,CAACC,YAAY,EAAE;MACvB,IAAIH,MAAM,CAACI,UAAU,EAAE,EAAE;QACrB,OAAO,IAAIC,eAAM,CAACC,IAAI,CAACQ,IAAI,CAACd,MAAM,CAACO,OAAO,EAAE,CAAC,CAAC;;MAElD,IAAIP,MAAM,CAACQ,WAAW,EAAE,EAAE;QACtB,OAAOC,iBAAO,CAACC,QAAQ,CAACV,MAAM,EAAE,MAAM,CAAC;;MAE3C,OAAO,kBAAK,EAAC,kBAAM,EAAC,aAAa,EAAEA,MAAM,CAAC,CAAC;;IAG/C,OAAOC,MAAM,GAAG,wBAAW,EAAC,MAAM,EAAEU,SAAS,CAAC;EAClD,CAAC;EACDI,IAAI,EAAE,cAAUf,MAAM;IAClB,IAAIC,MAAM;IACV,IAAIC,mBAAQ,CAACC,YAAY,EAAE;MACvB,IAAIH,MAAM,CAACI,UAAU,EAAE,EACnB,OAAO,IAAIC,eAAM,CAACC,IAAI,CAACS,IAAI,CAACf,MAAM,CAACO,OAAO,EAAE,CAAC,CAAC;MAClD,IAAIP,MAAM,CAACQ,WAAW,EAAE,EAAE;QACtB,OAAOC,iBAAO,CAACC,QAAQ,CAACV,MAAM,EAAE,MAAM,CAAC;;MAE3C,OAAO,kBAAK,EAAC,kBAAM,EAAC,aAAa,EAAEA,MAAM,CAAC,CAAC;;IAG/C,OAAOC,MAAM,GAAG,wBAAW,EAAC,MAAM,EAAEU,SAAS,CAAC;EAClD,CAAC;EACDK,IAAI,EAAE,cAAUhB,MAAM;IAClB,IAAIC,MAAM;IACV,IAAIC,mBAAQ,CAACC,YAAY,EAAE;MACvB,IAAIH,MAAM,CAACI,UAAU,EAAE,EACnB,OAAO,IAAIC,eAAM,CAACC,IAAI,CAACU,IAAI,CAAChB,MAAM,CAACO,OAAO,EAAE,CAAC,CAAC;MAClD,IAAIP,MAAM,CAACQ,WAAW,EAAE,EAAE;QACtB,OAAOC,iBAAO,CAACC,QAAQ,CAACV,MAAM,EAAE,MAAM,CAAC;;MAE3C,OAAO,kBAAK,EAAC,kBAAM,EAAC,aAAa,EAAEA,MAAM,CAAC,CAAC;;IAG/C,OAAOC,MAAM,GAAG,wBAAW,EAAC,MAAM,EAAEU,SAAS,CAAC;EAClD,CAAC;EACDM,KAAK,EAAE,eAAUjB,MAAM;IACnB,IAAIC,MAAM;IACV,IAAIC,mBAAQ,CAACC,YAAY,IAAIH,MAAM,CAACQ,WAAW,EAAE,EAC7CP,MAAM,GAAGQ,iBAAO,CAACC,QAAQ,CAACV,MAAM,EAAE,OAAO,CAAC,CAAC,KAC1C,IAAIE,mBAAQ,CAACC,YAAY,EAC1BF,MAAM,GAAG,qBAAQ,EAAC,kBAAK,EAAC,kBAAM,EAACC,mBAAQ,CAACgB,GAAG,GAAG,yBAAyB,EAAElB,MAAM,CAACmB,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,KAE9FlB,MAAM,GAAG,wBAAW,EAAC,OAAO,EAAEU,SAAS,CAAC;IAC5C,OAAOV,MAAM;EACjB,CAAC;EACDmB,KAAK,EAAE,eAAUpB,MAAM;IACnB,IAAIC,MAAM;IACV,IAAIC,mBAAQ,CAACC,YAAY,IAAIH,MAAM,CAACQ,WAAW,EAAE,EAC7CP,MAAM,GAAGQ,iBAAO,CAACC,QAAQ,CAACV,MAAM,EAAE,OAAO,CAAC,CAAC,KAC1C,IAAIE,mBAAQ,CAACC,YAAY,EAC1BF,MAAM,GAAG,qBAAQ,EAAC,kBAAK,EAAC,kBAAM,EAACC,mBAAQ,CAACgB,GAAG,GAAG,yBAAyB,EAAElB,MAAM,CAACmB,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,KAE9FlB,MAAM,GAAG,wBAAW,EAAC,OAAO,EAAEU,SAAS,CAAC;IAC5C,OAAOV,MAAM;EACjB,CAAC;EACDoB,KAAK,EAAE,eAAUrB,MAAM;IACnB,IAAIC,MAAM;IACV,IAAIC,mBAAQ,CAACC,YAAY,IAAIH,MAAM,CAACQ,WAAW,EAAE,EAC7CP,MAAM,GAAGQ,iBAAO,CAACC,QAAQ,CAACV,MAAM,EAAE,OAAO,CAAC,CAAC,KAC1C,IAAIE,mBAAQ,CAACC,YAAY,EAAE;MAC5BF,MAAM,GAAG,qBAAQ,EAAC,kBAAK,EAAC,kBAAM,EAAC,QAAQ,GAAGC,mBAAQ,CAACgB,GAAG,GAAG,uBAAuB,EAAElB,MAAM,CAACmB,QAAQ,EAAE,CAAC,CAAC,CAAC;KACzG,MAEGlB,MAAM,GAAG,wBAAW,EAAC,OAAO,EAAEU,SAAS,CAAC;IAC5C,OAAOV,MAAM;EACjB,CAAC;EACDqB,KAAK,EAAE,eAAUtB,MAAM;IACnB,IAAIC,MAAM;IACV,IAAIC,mBAAQ,CAACC,YAAY,IAAIH,MAAM,CAACQ,WAAW,EAAE,EAC7CP,MAAM,GAAGQ,iBAAO,CAACC,QAAQ,CAACV,MAAM,EAAE,OAAO,CAAC,CAAC,KAC1C,IAAIE,mBAAQ,CAACC,YAAY,EAC1BF,MAAM,GAAG,qBAAQ,EAAC,cAAG,EAAC,cAAG,EAACD,MAAM,CAACuB,KAAK,EAAE,CAACC,MAAM,EAAE,EAAE,eAAI,EAAC,mBAAQ,EAAC,cAAG,EAACxB,MAAM,EAAE,IAAIK,eAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAIA,eAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAEjHJ,MAAM,GAAG,wBAAW,EAAC,OAAO,EAAEU,SAAS,CAAC;IAC5C,OAAOV,MAAM;EACjB,CAAC;EACDwB,KAAK,EAAE,eAAUzB,MAAM;IACnB,IAAIC,MAAM;IACV,IAAIC,mBAAQ,CAACC,YAAY,IAAIH,MAAM,CAACQ,WAAW,EAAE,EAC7CP,MAAM,GAAGQ,iBAAO,CAACC,QAAQ,CAACV,MAAM,EAAE,OAAO,CAAC,CAAC,KAC1C,IAAIE,mBAAQ,CAACC,YAAY,EAC1BF,MAAM,GAAG,qBAAQ,EAAC,kBAAK,EAAC,kBAAM,EAACC,mBAAQ,CAACgB,GAAG,GAAG,6BAA6B,EAAElB,MAAM,CAACmB,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,KAElGlB,MAAM,GAAG,wBAAW,EAAC,OAAO,EAAEU,SAAS,CAAC;IAC5C,OAAOV,MAAM;EACjB,CAAC;EACDyB,KAAK,EAAE,eAAU1B,MAAM;IACnB,IAAIC,MAAM;IACV,IAAIC,mBAAQ,CAACC,YAAY,IAAIH,MAAM,CAACQ,WAAW,EAAE,EAC7CP,MAAM,GAAGQ,iBAAO,CAACC,QAAQ,CAACV,MAAM,EAAE,OAAO,CAAC,CAAC,KAC1C,IAAIE,mBAAQ,CAACC,YAAY,EAAE;MAC5B,IAAIH,MAAM,CAAC2B,MAAM,CAAC,CAAC,CAAC,EAChB1B,MAAM,GAAGI,eAAM,CAACuB,QAAQ,EAAE,CAAC,KAE3B3B,MAAM,GAAG,qBAAQ,EACb,iBAAM,EACF,cAAG,EAAC,iBAAM,EAAC,cAAG,EAACD,MAAM,CAACuB,KAAK,EAAE,EAAE,IAAIlB,eAAM,CAAC,CAAC,CAAC,CAAC,EAAE,mBAAQ,EAACL,MAAM,CAACuB,KAAK,EAAE,EAAE,IAAIlB,eAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACxF,IAAIA,eAAM,CAAC,CAAC,CAAC,CAAC,CAAC;KAC9B,MAEGJ,MAAM,GAAG,wBAAW,EAAC,OAAO,EAAEU,SAAS,CAAC;IAC5C,OAAOV,MAAM;EACjB;CACH","names":["exports","cosh","symbol","retval","Settings_1","PARSE2NUMBER","isConstant","Symbol_1","Math","valueOf","isImaginary","Complex_1","evaluate","arguments","sinh","tanh","sech","csch","coth","acosh","LOG","toString","asinh","atanh","asech","clone","invert","acsch","acoth","equals","infinity"],"sourceRoot":"","sources":["../../src/Functions/Trig.hyperbolic.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}