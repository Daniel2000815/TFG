{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.round = void 0;\n\nvar abs_1 = require(\"./abs\");\n\nvar Symbol_1 = require(\"../../../Types/Symbol\");\n\nvar Utils_1 = require(\"../../../Core/Utils\");\n\nvar index_1 = require(\"../index\");\n/**\n * Round a number up to s decimal places\n * @param {Symbol} x\n * @param {int} s - the number of decimal places\n * @returns {undefined}\n */\n\n\nfunction round(x, s) {\n  var sIsConstant = s && s.isConstant() || typeof s === 'undefined';\n\n  if (x.isConstant() && sIsConstant) {\n    var v, e, exp, retval;\n    v = x; //round the coefficient of then number but not the actual decimal value\n    //we know this because a negative number was passed\n\n    if (s && s.lessThan(0)) {\n      s = (0, abs_1.abs)(s); //convert the number to exponential form\n\n      e = Number(x).toExponential().toString().split('e'); //point v to the coefficient of then number\n\n      v = e[0]; //set the expontent\n\n      exp = e[1];\n    } //round the number to the requested precision\n\n\n    retval = new Symbol_1.Symbol((0, Utils_1.nround)(v, Number(s || 0))); //if there's a exponent then put it back\n\n    return (0, index_1.multiply)(retval, (0, index_1.pow)(new Symbol_1.Symbol(10), new Symbol_1.Symbol(exp || 0)));\n  }\n\n  return (0, Symbol_1.symfunction)('round', arguments);\n}\n\nexports.round = round;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;AAEA;;;;;;;;AAMA,SAAgBA,KAAhB,CAAsBC,CAAtB,EAAyBC,CAAzB,EAA0B;EACtB,IAAIC,WAAW,GAAGD,CAAC,IAAIA,CAAC,CAACE,UAAF,EAAL,IAAuB,OAAOF,CAAP,KAAa,WAAtD;;EACA,IAAID,CAAC,CAACG,UAAF,MAAkBD,WAAtB,EAAmC;IAC/B,IAAIE,CAAJ,EAAOC,CAAP,EAAUC,GAAV,EAAeC,MAAf;IACAH,CAAC,GAAGJ,CAAJ,CAF+B,CAG/B;IACA;;IACA,IAAIC,CAAC,IAAIA,CAAC,CAACO,QAAF,CAAW,CAAX,CAAT,EAAwB;MACpBP,CAAC,GAAG,eAAIA,CAAJ,CAAJ,CADoB,CAEpB;;MACAI,CAAC,GAAGI,MAAM,CAACT,CAAD,CAAN,CAAUU,aAAV,GAA0BC,QAA1B,GAAqCC,KAArC,CAA2C,GAA3C,CAAJ,CAHoB,CAIpB;;MACAR,CAAC,GAAGC,CAAC,CAAC,CAAD,CAAL,CALoB,CAMpB;;MACAC,GAAG,GAAGD,CAAC,CAAC,CAAD,CAAP;IACH,CAb8B,CAc/B;;;IACAE,MAAM,GAAG,IAAIM,eAAJ,CAAW,oBAAOT,CAAP,EAAUK,MAAM,CAACR,CAAC,IAAI,CAAN,CAAhB,CAAX,CAAT,CAf+B,CAgB/B;;IACA,OAAO,sBAASM,MAAT,EAAiB,iBAAI,IAAIM,eAAJ,CAAW,EAAX,CAAJ,EAAoB,IAAIA,eAAJ,CAAWP,GAAG,IAAI,CAAlB,CAApB,CAAjB,CAAP;EACH;;EAGD,OAAO,0BAAY,OAAZ,EAAqBQ,SAArB,CAAP;AACH;;AAxBDC","names":["round","x","s","sIsConstant","isConstant","v","e","exp","retval","lessThan","Number","toExponential","toString","split","Symbol_1","arguments","exports"],"sourceRoot":"","sources":["../../../../src/Functions/Core/math/round.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}