{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\Graph.js\";\nimport React from \"react\";\nimport { useCallback, useState } from \"react\";\nimport ReactFlow, { addEdge, applyEdgeChanges, applyNodeChanges, MarkerType } from \"react-flow-renderer\";\nimport ArrowEdge from \"./ArrowEdge.js\";\nimport ShaderNode from \"./ShaderNode.js\";\nimport \"./styles.css\";\nvar initialNodes = [{\n  id: \"node-1\",\n  type: \"shaderNode\",\n  position: {\n    x: 0,\n    y: 0\n  },\n  data: {\n    value: 123\n  }\n}, {\n  id: \"node-2\",\n  type: \"shaderNode\",\n  position: {\n    x: 250,\n    y: 0\n  },\n  data: {\n    value: 1\n  }\n}, {\n  id: \"node-3\",\n  type: \"shaderNode\",\n  position: {\n    x: 250,\n    y: -300\n  },\n  data: {\n    value: 1\n  }\n}];\nvar initialEdges = [{\n  id: \"e1-2\",\n  type: \"arrowEdge\",\n  source: \"node-1\",\n  target: \"node-2\",\n  markerEnd: {\n    type: MarkerType.ArrowClosed\n  },\n  animated: true\n}];\nvar nodeTypes = {\n  shaderNode: ShaderNode\n}; // const edgeTypes = { arrowEdge: ArrowEdge };\n\nexport default function Graph() {\n  var _useState = useState(initialNodes),\n      _useState2 = _slicedToArray(_useState, 2),\n      nodes = _useState2[0],\n      setNodes = _useState2[1];\n\n  var _useState3 = useState(initialEdges),\n      _useState4 = _slicedToArray(_useState3, 2),\n      edges = _useState4[0],\n      setEdges = _useState4[1];\n\n  var onNodesChange = useCallback(function (changes) {\n    return setNodes(function (nds) {\n      return applyNodeChanges(changes, nds);\n    });\n  }, [setNodes]);\n  var onEdgesChange = useCallback(function (changes) {\n    return setEdges(function (eds) {\n      return applyEdgeChanges(changes, eds);\n    });\n  }, [setEdges]);\n  var onConnect = useCallback(function (connection) {\n    console.log(connection);\n    setEdges(function (eds) {\n      return addEdge(_objectSpread(_objectSpread({}, connection), {}, {\n        animated: true,\n        markerEnd: {\n          type: MarkerType.ArrowClosed\n        }\n      }), eds);\n    });\n  }, [setEdges]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    onConnect: onConnect,\n    nodeTypes: nodeTypes,\n    fitView: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useCallback","useState","ReactFlow","addEdge","applyEdgeChanges","applyNodeChanges","MarkerType","ArrowEdge","ShaderNode","initialNodes","id","type","position","x","y","data","value","initialEdges","source","target","markerEnd","ArrowClosed","animated","nodeTypes","shaderNode","Graph","nodes","setNodes","edges","setEdges","onNodesChange","changes","nds","onEdgesChange","eds","onConnect","connection","console","log","height"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/Graph.js"],"sourcesContent":["import React from \"react\";\r\nimport { useCallback, useState } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  applyEdgeChanges,\r\n  applyNodeChanges,\r\n  MarkerType\r\n} from \"react-flow-renderer\";\r\nimport ArrowEdge from \"./ArrowEdge.js\";\r\nimport ShaderNode from \"./ShaderNode.js\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst initialNodes = [\r\n  {\r\n    id: \"node-1\",\r\n    type: \"shaderNode\",\r\n    position: { x: 0, y: 0 },\r\n    data: { value: 123 }\r\n  },\r\n  {\r\n    id: \"node-2\",\r\n    type: \"shaderNode\",\r\n    position: { x: 250, y: 0 },\r\n    data: { value: 1 }\r\n  },\r\n  {\r\n    id: \"node-3\",\r\n    type: \"shaderNode\",\r\n    position: { x: 250, y: -300},\r\n    data: { value: 1 }\r\n  }\r\n];\r\n\r\nconst initialEdges = [\r\n  {\r\n    id: \"e1-2\",\r\n    type: \"arrowEdge\",\r\n    source: \"node-1\",\r\n    target: \"node-2\",\r\n    markerEnd:{\r\n      type: MarkerType.ArrowClosed,\r\n    },\r\n    animated: true\r\n\r\n  }\r\n];\r\n\r\nconst nodeTypes = { shaderNode: ShaderNode };\r\n// const edgeTypes = { arrowEdge: ArrowEdge };\r\n\r\nexport default function Graph() {\r\n  const [nodes, setNodes] = useState(initialNodes);\r\n  const [edges, setEdges] = useState(initialEdges);\r\n\r\n  const onNodesChange = useCallback(\r\n    (changes) => setNodes((nds) => applyNodeChanges(changes, nds)),\r\n    [setNodes]\r\n  );\r\n  const onEdgesChange = useCallback(\r\n    (changes) => setEdges((eds) => applyEdgeChanges(changes, eds)),\r\n    [setEdges]\r\n  );\r\n  const onConnect = useCallback(\r\n    (connection) => {\r\n      console.log(connection);\r\n      setEdges((eds) => addEdge({...connection, animated: true, markerEnd:{\r\n        type: MarkerType.ArrowClosed,\r\n      }}, eds))\r\n    },\r\n    [setEdges]\r\n  );\r\n\r\n  return (\r\n    <div style={{height: \"100vh\"}}>\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n        onNodesChange={onNodesChange}\r\n        onEdgesChange={onEdgesChange}\r\n        onConnect={onConnect}\r\n        nodeTypes={nodeTypes}\r\n        fitView\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}