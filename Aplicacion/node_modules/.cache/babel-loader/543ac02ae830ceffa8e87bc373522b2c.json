{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\Graph.js\";\nimport React from \"react\";\nimport { useCallback, useState } from \"react\";\nimport ReactFlow, { addEdge, applyEdgeChanges, applyNodeChanges, MarkerType, useNodesState, useEdgesState } from \"react-flow-renderer\";\nimport ButtonEdge from './ButtonEdge.js';\nimport ShaderNode from \"./ShaderNode.js\";\nimport \"./styles.css\";\nvar initialNodes = [{\n  id: \"node-1\",\n  type: \"shaderNode\",\n  position: {\n    x: 0,\n    y: 0\n  },\n  data: {\n    value: 123\n  }\n}, {\n  id: \"node-2\",\n  type: \"shaderNode\",\n  position: {\n    x: 250,\n    y: 0\n  },\n  data: {\n    value: 1\n  }\n}, {\n  id: \"node-3\",\n  type: \"shaderNode\",\n  position: {\n    x: 250,\n    y: -300\n  },\n  data: {\n    value: 1\n  }\n}];\nvar initialEdges = [{\n  id: \"e1-2\",\n  type: \"buttonEdge\",\n  source: \"node-1\",\n  target: \"node-2\"\n}];\nvar nodeTypes = {\n  shaderNode: ShaderNode\n};\nvar edgeTypes = {\n  buttonEdge: ButtonEdge(markerEnd = \"arrow\")\n};\nexport default function Graph() {\n  var _useNodesState = useNodesState(initialNodes),\n      _useNodesState2 = _slicedToArray(_useNodesState, 3),\n      nodes = _useNodesState2[0],\n      setNodes = _useNodesState2[1],\n      onNodesChange = _useNodesState2[2];\n\n  var _useEdgesState = useEdgesState(initialEdges),\n      _useEdgesState2 = _slicedToArray(_useEdgesState, 3),\n      edges = _useEdgesState2[0],\n      setEdges = _useEdgesState2[1],\n      onEdgesChange = _useEdgesState2[2];\n\n  var onConnect = useCallback(function (params) {\n    return setEdges(function (eds) {\n      return addEdge(_objectSpread(_objectSpread({}, params), {}, {\n        type: 'buttonEdge'\n      }), eds);\n    });\n  }, []);\n  var onDisconnect = useCallback(function (connection) {\n    console.log(connection);\n    setEdges(function (eds) {\n      return addEdge(_objectSpread(_objectSpread({}, connection), {}, {\n        animated: true,\n        markerEnd: {\n          type: MarkerType.ArrowClosed\n        }\n      }), eds);\n    });\n  }, [setEdges]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactFlow, {\n    nodes: nodes,\n    edges: edges,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    onConnect: onConnect,\n    onDisconnect: onDisconnect,\n    nodeTypes: nodeTypes,\n    edgeTypes: edgeTypes,\n    snapToGrid: true,\n    fitView: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useCallback","useState","ReactFlow","addEdge","applyEdgeChanges","applyNodeChanges","MarkerType","useNodesState","useEdgesState","ButtonEdge","ShaderNode","initialNodes","id","type","position","x","y","data","value","initialEdges","source","target","nodeTypes","shaderNode","edgeTypes","buttonEdge","markerEnd","Graph","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","onConnect","params","eds","onDisconnect","connection","console","log","animated","ArrowClosed","height"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/Graph.js"],"sourcesContent":["import React from \"react\";\r\nimport { useCallback, useState } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  applyEdgeChanges,\r\n  applyNodeChanges,\r\n  MarkerType,\r\n  useNodesState,\r\n  useEdgesState,\r\n} from \"react-flow-renderer\";\r\nimport ButtonEdge from './ButtonEdge.js';\r\nimport ShaderNode from \"./ShaderNode.js\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst initialNodes = [\r\n  {\r\n    id: \"node-1\",\r\n    type: \"shaderNode\",\r\n    position: { x: 0, y: 0 },\r\n    data: { value: 123 }\r\n  },\r\n  {\r\n    id: \"node-2\",\r\n    type: \"shaderNode\",\r\n    position: { x: 250, y: 0 },\r\n    data: { value: 1 }\r\n  },\r\n  {\r\n    id: \"node-3\",\r\n    type: \"shaderNode\",\r\n    position: { x: 250, y: -300},\r\n    data: { value: 1 }\r\n  }\r\n];\r\n\r\nconst initialEdges = [\r\n  {\r\n    id: \"e1-2\",\r\n    type: \"buttonEdge\",\r\n    source: \"node-1\",\r\n    target: \"node-2\"\r\n  }\r\n];\r\n\r\nconst nodeTypes = { shaderNode: ShaderNode };\r\nconst edgeTypes = { buttonEdge: ButtonEdge(markerEnd=\"arrow\") };\r\n\r\nexport default function Graph() {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n\r\n  const onConnect = useCallback(\r\n    (params) => setEdges((eds) => addEdge({ ...params, type: 'buttonEdge' }, eds)),\r\n    []\r\n  );\r\n\r\n  const onDisconnect = useCallback(\r\n    (connection) => {\r\n      console.log(connection);\r\n      setEdges((eds) => addEdge({...connection, animated: true, markerEnd:{\r\n        type: MarkerType.ArrowClosed,\r\n      }}, eds))\r\n    },\r\n    [setEdges]\r\n  );\r\n\r\n  return (\r\n    <div style={{height: \"100vh\"}}>\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n\r\n        onNodesChange={onNodesChange}\r\n        onEdgesChange={onEdgesChange}\r\n\r\n        onConnect={onConnect}\r\n        onDisconnect={onDisconnect}\r\n\r\n        nodeTypes={nodeTypes}\r\n        edgeTypes={edgeTypes}\r\n\r\n        snapToGrid={true}\r\n        fitView\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,SAAP,IACEC,OADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,aANF,QAOO,qBAPP;AAQA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AAEA,OAAO,cAAP;AAEA,IAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,QADN;EAEEC,IAAI,EAAE,YAFR;EAGEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,CAAL;IAAQC,CAAC,EAAE;EAAX,CAHZ;EAIEC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAT;AAJR,CADmB,EAOnB;EACEN,EAAE,EAAE,QADN;EAEEC,IAAI,EAAE,YAFR;EAGEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAL;IAAUC,CAAC,EAAE;EAAb,CAHZ;EAIEC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAT;AAJR,CAPmB,EAanB;EACEN,EAAE,EAAE,QADN;EAEEC,IAAI,EAAE,YAFR;EAGEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAL;IAAUC,CAAC,EAAE,CAAC;EAAd,CAHZ;EAIEC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAT;AAJR,CAbmB,CAArB;AAqBA,IAAMC,YAAY,GAAG,CACnB;EACEP,EAAE,EAAE,MADN;EAEEC,IAAI,EAAE,YAFR;EAGEO,MAAM,EAAE,QAHV;EAIEC,MAAM,EAAE;AAJV,CADmB,CAArB;AASA,IAAMC,SAAS,GAAG;EAAEC,UAAU,EAAEb;AAAd,CAAlB;AACA,IAAMc,SAAS,GAAG;EAAEC,UAAU,EAAEhB,UAAU,CAACiB,SAAS,GAAC,OAAX;AAAxB,CAAlB;AAEA,eAAe,SAASC,KAAT,GAAiB;EAC9B,qBAAyCpB,aAAa,CAACI,YAAD,CAAtD;EAAA;EAAA,IAAOiB,KAAP;EAAA,IAAcC,QAAd;EAAA,IAAwBC,aAAxB;;EACA,qBAAyCtB,aAAa,CAACW,YAAD,CAAtD;EAAA;EAAA,IAAOY,KAAP;EAAA,IAAcC,QAAd;EAAA,IAAwBC,aAAxB;;EAEA,IAAMC,SAAS,GAAGlC,WAAW,CAC3B,UAACmC,MAAD;IAAA,OAAYH,QAAQ,CAAC,UAACI,GAAD;MAAA,OAASjC,OAAO,iCAAMgC,MAAN;QAActB,IAAI,EAAE;MAApB,IAAoCuB,GAApC,CAAhB;IAAA,CAAD,CAApB;EAAA,CAD2B,EAE3B,EAF2B,CAA7B;EAKA,IAAMC,YAAY,GAAGrC,WAAW,CAC9B,UAACsC,UAAD,EAAgB;IACdC,OAAO,CAACC,GAAR,CAAYF,UAAZ;IACAN,QAAQ,CAAC,UAACI,GAAD;MAAA,OAASjC,OAAO,iCAAKmC,UAAL;QAAiBG,QAAQ,EAAE,IAA3B;QAAiCf,SAAS,EAAC;UAClEb,IAAI,EAAEP,UAAU,CAACoC;QADiD;MAA3C,IAErBN,GAFqB,CAAhB;IAAA,CAAD,CAAR;EAGD,CAN6B,EAO9B,CAACJ,QAAD,CAP8B,CAAhC;EAUA,oBACE;IAAK,KAAK,EAAE;MAACW,MAAM,EAAE;IAAT,CAAZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,SAAD;IACE,KAAK,EAAEf,KADT;IAEE,KAAK,EAAEG,KAFT;IAIE,aAAa,EAAED,aAJjB;IAKE,aAAa,EAAEG,aALjB;IAOE,SAAS,EAAEC,SAPb;IAQE,YAAY,EAAEG,YARhB;IAUE,SAAS,EAAEf,SAVb;IAWE,SAAS,EAAEE,SAXb;IAaE,UAAU,EAAE,IAbd;IAcE,OAAO,MAdT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF;AAoBD"},"metadata":{},"sourceType":"module"}