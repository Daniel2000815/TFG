{"ast":null,"code":"import _slicedToArray from \"G:\\\\gitlab\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"G:\\\\gitlab\\\\TFG\\\\Aplicacion\\\\src\\\\SurfacePage\\\\SurfacePage.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport CustomTable from '../CustomComponents/CustomTable';\nimport nerdamer from 'nerdamer';\nimport 'katex/dist/katex.min.css';\nimport Latex from 'react-latex-next';\nimport useLocalStorage from '../storageHook.js';\nimport SurfaceDialog from './SurfaceDialog';\n\nvar latexEq = function latexEq(eq) {\n  return /*#__PURE__*/React.createElement(Latex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  }, \"$ \".concat(eq, \" $\"));\n};\n\nvar tableCols = [{\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'implicit',\n  label: 'Implicit',\n  minWidth: 350\n}, {\n  id: 'sdf',\n  label: 'SDF',\n  minWidth: 10\n}];\nexport default function SurfacePage() {\n  var _useLocalStorage = useLocalStorage('user_implicits', {}),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      storage = _useLocalStorage2[0],\n      setStorage = _useLocalStorage2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dialogOpen = _useState2[0],\n      setDialogOpen = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tableRows = _useState4[0],\n      setTableRows = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      editedRow = _useState6[0],\n      setEditedRow = _useState6[1];\n\n  useEffect(function () {\n    var newRows = [];\n    Object.keys(storage).forEach(function (key, index) {\n      var item = storage[key];\n      newRows.push({\n        id: item.id,\n        name: item.name,\n        implicit: latexEq(nerdamer.convertToLaTeX(item.implicit)),\n        sdf: item.sdf\n      });\n    });\n    setTableRows(newRows);\n  }, [storage]);\n\n  var handleDelete = function handleDelete(selectedList) {\n    // Convert `obj` to a key/value array\n    // `[['name', 'Luke Skywalker'], ['title', 'Jedi Knight'], ...]`\n    var asArray = Object.entries(storage);\n    var filtered = asArray.filter(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      return !selectedList.includes(key);\n    }); // Convert the key/value array back to an object:\n    // `{ name: 'Luke Skywalker', title: 'Jedi Knight' }`\n\n    var newStorage = Object.fromEntries(filtered);\n    setStorage(newStorage);\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CustomTable, {\n    rows: tableRows,\n    columns: tableCols,\n    handleDelete: handleDelete,\n    handleCreateRow: function handleCreateRow() {\n      setEditedRow(\"\");\n      setDialogOpen(true);\n    },\n    handleRowClick: function handleRowClick(name) {\n      setEditedRow(name);\n      setDialogOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SurfaceDialog, {\n    savedData: editedRow ? storage[editedRow] : null,\n    open: dialogOpen,\n    handleClose: function handleClose() {\n      return setDialogOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useState","useEffect","Box","CustomTable","nerdamer","Latex","useLocalStorage","SurfaceDialog","latexEq","eq","tableCols","id","label","minWidth","SurfacePage","storage","setStorage","dialogOpen","setDialogOpen","tableRows","setTableRows","editedRow","setEditedRow","newRows","Object","keys","forEach","key","index","item","push","name","implicit","convertToLaTeX","sdf","handleDelete","selectedList","asArray","entries","filtered","filter","value","includes","newStorage","fromEntries"],"sources":["G:/gitlab/TFG/Aplicacion/src/SurfacePage/SurfacePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport CustomTable from '../CustomComponents/CustomTable';\r\nimport nerdamer from 'nerdamer';\r\nimport 'katex/dist/katex.min.css';\r\nimport Latex from 'react-latex-next';\r\nimport useLocalStorage from '../storageHook.js';\r\nimport SurfaceDialog from './SurfaceDialog';\r\n\r\nconst latexEq = (eq) => {\r\n  return <Latex>{`$ ${eq} $`}</Latex>;\r\n};\r\nconst tableCols = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'implicit', label: 'Implicit', minWidth: 350 },\r\n  { id: 'sdf', label: 'SDF', minWidth: 10 },\r\n];\r\n\r\nexport default function SurfacePage() {\r\n  const [storage, setStorage] = useLocalStorage('user_implicits', {});\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [tableRows, setTableRows] = useState([]);\r\n  const [editedRow, setEditedRow] = useState('');\r\n\r\n  useEffect(() => {\r\n    let newRows = [];\r\n\r\n    Object.keys(storage).forEach(function (key, index) {\r\n      const item = storage[key];\r\n\r\n      newRows.push({\r\n        id: item.id,\r\n        name: item.name,\r\n        implicit: latexEq(nerdamer.convertToLaTeX(item.implicit)),\r\n        sdf: item.sdf,\r\n      });\r\n    });\r\n\r\n    setTableRows(newRows);\r\n  }, [storage]);\r\n\r\n  const handleDelete = (selectedList) => {\r\n    // Convert `obj` to a key/value array\r\n    // `[['name', 'Luke Skywalker'], ['title', 'Jedi Knight'], ...]`\r\n    const asArray = Object.entries(storage);\r\n    const filtered = asArray.filter(\r\n      ([key, value]) => !selectedList.includes(key)\r\n    );\r\n\r\n    // Convert the key/value array back to an object:\r\n    // `{ name: 'Luke Skywalker', title: 'Jedi Knight' }`\r\n    const newStorage = Object.fromEntries(filtered);\r\n    setStorage(newStorage);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      \r\n      <CustomTable\r\n        rows={tableRows}\r\n        columns={tableCols}\r\n        handleDelete={handleDelete}\r\n        handleCreateRow={() => {setEditedRow(\"\"); setDialogOpen(true)}}\r\n        handleRowClick={(name)=>{setEditedRow(name); setDialogOpen(true)}}\r\n      />\r\n\r\n      <SurfaceDialog\r\n        savedData={editedRow ? storage[editedRow] : null}\r\n        open={dialogOpen}\r\n        handleClose={() => setDialogOpen(false)}\r\n      />\r\n      \r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}