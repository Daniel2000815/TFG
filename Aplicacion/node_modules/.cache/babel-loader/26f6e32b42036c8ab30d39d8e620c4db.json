{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.log = void 0;\n\nvar Symbol_1 = require(\"../../../Types/Symbol\");\n\nvar Settings_1 = require(\"../../../Settings\");\n\nvar Errors_1 = require(\"../../../Core/Errors\");\n\nvar Complex_1 = require(\"../../Complex\");\n\nvar Groups_1 = require(\"../../../Types/Groups\");\n\nvar add_1 = require(\"../operations/add\");\n\nvar index_1 = require(\"../index\");\n\nvar Utils_1 = require(\"../../../Core/Utils\");\n\nvar Parser_1 = require(\"../../../Parser/Parser\");\n/**\n * The log function\n * @param {Symbol} symbol\n * @param {Symbol} base\n * @returns {Symbol}\n */\n\n\nfunction log(symbol, base) {\n  if (symbol.equals(1)) {\n    return new Symbol_1.Symbol(0);\n  }\n\n  var retval;\n\n  if (symbol.fname === Settings_1.Settings.SQRT && symbol.multiplier.equals(1)) {\n    retval = (0, index_1.divide)(log(symbol.args[0]), new Symbol_1.Symbol(2));\n\n    if (symbol.power.sign() < 0) {\n      retval.negate();\n    } // Exit early\n\n\n    return retval;\n  } //log(0) is undefined so complain\n\n\n  if (symbol.equals(0)) {\n    throw new Errors_1.UndefinedError(Settings_1.Settings.LOG + '(0) is undefined!');\n  } //deal with imaginary values\n\n\n  if (symbol.isImaginary()) {\n    return Complex_1.Complex.evaluate(symbol, Settings_1.Settings.LOG);\n  }\n\n  if (symbol.isConstant() && typeof base !== 'undefined' && base.isConstant()) {\n    var log_sym = Math.log(symbol);\n    var log_base = Math.log(base);\n    retval = new Symbol_1.Symbol(log_sym / log_base);\n  } else if (symbol.group === Groups_1.Groups.EX && symbol.power.multiplier.lessThan(0) || symbol.power.toString() === '-1') {\n    symbol.power.negate(); //move the negative outside but keep the positive inside :)\n\n    retval = log(symbol).negate();\n  } else if (symbol.value === 'e' && symbol.multiplier.equals(1)) {\n    var p = symbol.power;\n    retval = (0, Utils_1.isSymbol)(p) ? p : new Symbol_1.Symbol(p);\n  } else if (symbol.group === Groups_1.Groups.FN && symbol.fname === 'exp') {\n    var s = symbol.args[0];\n    if (symbol.multiplier.equals(1)) retval = (0, index_1.multiply)(s, new Symbol_1.Symbol(symbol.power));else retval = (0, Symbol_1.symfunction)(Settings_1.Settings.LOG, [symbol]);\n  } else if (Settings_1.Settings.PARSE2NUMBER && (0, Utils_1.isNumericSymbol)(symbol)) {\n    // Parse for safety.\n    symbol = (0, Parser_1.parse)(symbol);\n    var img_part;\n\n    if (symbol.multiplier.lessThan(0)) {\n      symbol.negate();\n      img_part = (0, index_1.multiply)(new Symbol_1.Symbol(Math.PI), new Symbol_1.Symbol('i'));\n    }\n\n    retval = new Symbol_1.Symbol(Math.log(symbol.multiplier.toDecimal()));\n\n    if (img_part) {\n      retval = (0, add_1.add)(retval, img_part);\n    }\n  } else {\n    var s;\n\n    if (!symbol.power.equals(1) && !symbol.contains('e')) {\n      s = symbol.group === Groups_1.Groups.EX ? symbol.power : new Symbol_1.Symbol(symbol.power);\n      symbol.toLinear();\n    } //log(a,a) = 1 since the base is allowed to be changed.\n    //This was pointed out by Happypig375 in issue #280\n\n\n    if (arguments.length > 1 && allSame(arguments)) {\n      retval = new Symbol_1.Symbol(1);\n    } else {\n      retval = (0, Symbol_1.symfunction)(Settings_1.Settings.LOG, arguments);\n    }\n\n    if (s) retval = (0, index_1.multiply)(s, retval);\n  }\n\n  return retval;\n}\n\nexports.log = log;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;AAEA;;;;;;;;AAMA,SAAgBA,GAAhB,CAAoBC,MAApB,EAA4BC,IAA5B,EAAgC;EAE5B,IAAID,MAAM,CAACE,MAAP,CAAc,CAAd,CAAJ,EAAsB;IAClB,OAAO,IAAIC,eAAJ,CAAW,CAAX,CAAP;EACH;;EAED,IAAIC,MAAJ;;EAEA,IAAIJ,MAAM,CAACK,KAAP,KAAiBC,oBAASC,IAA1B,IAAkCP,MAAM,CAACQ,UAAP,CAAkBN,MAAlB,CAAyB,CAAzB,CAAtC,EAAmE;IAC/DE,MAAM,GAAG,oBAAOL,GAAG,CAACC,MAAM,CAACS,IAAP,CAAY,CAAZ,CAAD,CAAV,EAA4B,IAAIN,eAAJ,CAAW,CAAX,CAA5B,CAAT;;IAEA,IAAIH,MAAM,CAACU,KAAP,CAAaC,IAAb,KAAsB,CAA1B,EAA6B;MACzBP,MAAM,CAACQ,MAAP;IACH,CAL8D,CAO/D;;;IACA,OAAOR,MAAP;EACH,CAjB2B,CAmB5B;;;EACA,IAAIJ,MAAM,CAACE,MAAP,CAAc,CAAd,CAAJ,EAAsB;IAClB,MAAM,IAAIW,uBAAJ,CAAmBP,oBAASQ,GAAT,GAAe,mBAAlC,CAAN;EACH,CAtB2B,CAwB5B;;;EACA,IAAId,MAAM,CAACe,WAAP,EAAJ,EAA0B;IACtB,OAAOC,kBAAQC,QAAR,CAAiBjB,MAAjB,EAAyBM,oBAASQ,GAAlC,CAAP;EACH;;EAED,IAAId,MAAM,CAACkB,UAAP,MAAuB,OAAOjB,IAAP,KAAgB,WAAvC,IAAsDA,IAAI,CAACiB,UAAL,EAA1D,EAA6E;IACzE,IAAIC,OAAO,GAAGC,IAAI,CAACrB,GAAL,CAASC,MAAT,CAAd;IACA,IAAIqB,QAAQ,GAAGD,IAAI,CAACrB,GAAL,CAASE,IAAT,CAAf;IACAG,MAAM,GAAG,IAAID,eAAJ,CAAWgB,OAAO,GAAGE,QAArB,CAAT;EACH,CAJD,MAKK,IAAIrB,MAAM,CAACsB,KAAP,KAAiBC,gBAAOC,EAAxB,IAA8BxB,MAAM,CAACU,KAAP,CAAaF,UAAb,CAAwBiB,QAAxB,CAAiC,CAAjC,CAA9B,IAAqEzB,MAAM,CAACU,KAAP,CAAagB,QAAb,OAA4B,IAArG,EAA2G;IAC5G1B,MAAM,CAACU,KAAP,CAAaE,MAAb,GAD4G,CAE5G;;IACAR,MAAM,GAAGL,GAAG,CAACC,MAAD,CAAH,CAAYY,MAAZ,EAAT;EACH,CAJI,MAKA,IAAIZ,MAAM,CAAC2B,KAAP,KAAiB,GAAjB,IAAwB3B,MAAM,CAACQ,UAAP,CAAkBN,MAAlB,CAAyB,CAAzB,CAA5B,EAAyD;IAC1D,IAAI0B,CAAC,GAAG5B,MAAM,CAACU,KAAf;IACAN,MAAM,GAAG,sBAASwB,CAAT,IAAcA,CAAd,GAAkB,IAAIzB,eAAJ,CAAWyB,CAAX,CAA3B;EACH,CAHI,MAIA,IAAI5B,MAAM,CAACsB,KAAP,KAAiBC,gBAAOM,EAAxB,IAA8B7B,MAAM,CAACK,KAAP,KAAiB,KAAnD,EAA0D;IAC3D,IAAIyB,CAAC,GAAG9B,MAAM,CAACS,IAAP,CAAY,CAAZ,CAAR;IACA,IAAIT,MAAM,CAACQ,UAAP,CAAkBN,MAAlB,CAAyB,CAAzB,CAAJ,EACIE,MAAM,GAAG,sBAAS0B,CAAT,EAAY,IAAI3B,eAAJ,CAAWH,MAAM,CAACU,KAAlB,CAAZ,CAAT,CADJ,KAGIN,MAAM,GAAG,0BAAYE,oBAASQ,GAArB,EAA0B,CAACd,MAAD,CAA1B,CAAT;EACP,CANI,MAOA,IAAIM,oBAASyB,YAAT,IAAyB,6BAAgB/B,MAAhB,CAA7B,EAAsD;IACvD;IACAA,MAAM,GAAG,oBAAMA,MAAN,CAAT;IAEA,IAAIgC,QAAJ;;IACA,IAAIhC,MAAM,CAACQ,UAAP,CAAkBiB,QAAlB,CAA2B,CAA3B,CAAJ,EAAmC;MAC/BzB,MAAM,CAACY,MAAP;MACAoB,QAAQ,GAAG,sBAAS,IAAI7B,eAAJ,CAAWiB,IAAI,CAACa,EAAhB,CAAT,EAA8B,IAAI9B,eAAJ,CAAW,GAAX,CAA9B,CAAX;IACH;;IAEDC,MAAM,GAAG,IAAID,eAAJ,CAAWiB,IAAI,CAACrB,GAAL,CAASC,MAAM,CAACQ,UAAP,CAAkB0B,SAAlB,EAAT,CAAX,CAAT;;IAEA,IAAIF,QAAJ,EAAc;MACV5B,MAAM,GAAG,eAAIA,MAAJ,EAAY4B,QAAZ,CAAT;IACH;EAEJ,CAhBI,MAiBA;IACD,IAAIF,CAAJ;;IACA,IAAI,CAAC9B,MAAM,CAACU,KAAP,CAAaR,MAAb,CAAoB,CAApB,CAAD,IAA2B,CAACF,MAAM,CAACmC,QAAP,CAAgB,GAAhB,CAAhC,EAAsD;MAClDL,CAAC,GAAG9B,MAAM,CAACsB,KAAP,KAAiBC,gBAAOC,EAAxB,GAA6BxB,MAAM,CAACU,KAApC,GAA4C,IAAIP,eAAJ,CAAWH,MAAM,CAACU,KAAlB,CAAhD;MACAV,MAAM,CAACoC,QAAP;IACH,CALA,CAMD;IACA;;;IACA,IAAIC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBC,OAAO,CAACF,SAAD,CAAnC,EAAgD;MAC5CjC,MAAM,GAAG,IAAID,eAAJ,CAAW,CAAX,CAAT;IACH,CAFD,MAGK;MACDC,MAAM,GAAG,0BAAYE,oBAASQ,GAArB,EAA0BuB,SAA1B,CAAT;IACH;;IAED,IAAIP,CAAJ,EACI1B,MAAM,GAAG,sBAAS0B,CAAT,EAAY1B,MAAZ,CAAT;EACP;;EAED,OAAOA,MAAP;AACH;;AAvFDoC","names":["log","symbol","base","equals","Symbol_1","retval","fname","Settings_1","SQRT","multiplier","args","power","sign","negate","Errors_1","LOG","isImaginary","Complex_1","evaluate","isConstant","log_sym","Math","log_base","group","Groups_1","EX","lessThan","toString","value","p","FN","s","PARSE2NUMBER","img_part","PI","toDecimal","contains","toLinear","arguments","length","allSame","exports"],"sourceRoot":"","sources":["../../../../src/Functions/Core/math/log.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}