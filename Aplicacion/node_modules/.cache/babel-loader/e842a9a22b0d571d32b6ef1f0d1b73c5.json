{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CssStyles = void 0;\n\nvar CssStyles = function () {\n  function CssStyles(styles) {\n    if (styles === void 0) {\n      styles = null;\n    }\n\n    this.styles = {};\n    this.addStyles(styles);\n  }\n\n  Object.defineProperty(CssStyles.prototype, \"cssText\", {\n    get: function get() {\n      return this.getStyleString();\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  CssStyles.prototype.addStyles = function (styles) {\n    var e_1, _a;\n\n    if (!styles) return;\n\n    try {\n      for (var _b = __values(Object.keys(styles)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var style = _c.value;\n\n        if (!this.styles[style]) {\n          this.styles[style] = {};\n        }\n\n        Object.assign(this.styles[style], styles[style]);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  CssStyles.prototype.removeStyles = function () {\n    var e_2, _a;\n\n    var selectors = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      selectors[_i] = arguments[_i];\n    }\n\n    try {\n      for (var selectors_1 = __values(selectors), selectors_1_1 = selectors_1.next(); !selectors_1_1.done; selectors_1_1 = selectors_1.next()) {\n        var selector = selectors_1_1.value;\n        delete this.styles[selector];\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (selectors_1_1 && !selectors_1_1.done && (_a = selectors_1.return)) _a.call(selectors_1);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  };\n\n  CssStyles.prototype.clear = function () {\n    this.styles = {};\n  };\n\n  CssStyles.prototype.getStyleString = function () {\n    return this.getStyleRules().join('\\n\\n');\n  };\n\n  CssStyles.prototype.getStyleRules = function () {\n    var e_3, _a;\n\n    var selectors = Object.keys(this.styles);\n    var defs = new Array(selectors.length);\n    var i = 0;\n\n    try {\n      for (var selectors_2 = __values(selectors), selectors_2_1 = selectors_2.next(); !selectors_2_1.done; selectors_2_1 = selectors_2.next()) {\n        var selector = selectors_2_1.value;\n        defs[i++] = selector + ' {\\n' + this.getStyleDefString(this.styles[selector]) + '\\n}';\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (selectors_2_1 && !selectors_2_1.done && (_a = selectors_2.return)) _a.call(selectors_2);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    return defs;\n  };\n\n  CssStyles.prototype.getStyleDefString = function (styles) {\n    var e_4, _a;\n\n    var properties = Object.keys(styles);\n    var values = new Array(properties.length);\n    var i = 0;\n\n    try {\n      for (var properties_1 = __values(properties), properties_1_1 = properties_1.next(); !properties_1_1.done; properties_1_1 = properties_1.next()) {\n        var property = properties_1_1.value;\n        values[i++] = '  ' + property + ': ' + styles[property] + ';';\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (properties_1_1 && !properties_1_1.done && (_a = properties_1.return)) _a.call(properties_1);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    return values.join('\\n');\n  };\n\n  return CssStyles;\n}();\n\nexports.CssStyles = CssStyles;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AA0CA;EAiBE,mBAAYA,MAAZ,EAAoC;IAAxB;MAAAA;IAAwB;;IAb1B,cAAoB,EAApB;IAcR,KAAKC,SAAL,CAAeD,MAAf;EACD;;EAVDE,sBAAIC,mBAAJ,EAAI,SAAJ,EAAW;SAAX;MACE,OAAO,KAAKC,cAAL,EAAP;IACD,CAFU;qBAAA;;EAAA,CAAX;;EAeOD,gCAAP,UAAiBH,MAAjB,EAAkC;;;IAChC,IAAI,CAACA,MAAL,EAAa;;;MACb,KAAoB,wBAAM,CAACK,IAAP,CAAYL,MAAZ,IAAmBM,cAAvC,EAAuC,QAAvC,EAAuCA,cAAvC,EAAyC;QAApC,IAAMC,KAAK,WAAX;;QACH,IAAI,CAAC,KAAKP,MAAL,CAAYO,KAAZ,CAAL,EAAyB;UACvB,KAAKP,MAAL,CAAYO,KAAZ,IAAqB,EAArB;QACD;;QACDL,MAAM,CAACM,MAAP,CAAc,KAAKR,MAAL,CAAYO,KAAZ,CAAd,EAAkCP,MAAM,CAACO,KAAD,CAAxC;MACD;;;;;;;;;;;;EACF,CARM;;EAaAJ,mCAAP;;;IAAoB;;SAAA,yCAAsB;MAAtBM;;;;MAClB,KAAuB,uCAASC,kCAAhC,EAAgC,mBAAhC,EAAgCA,kCAAhC,EAAkC;QAA7B,IAAMC,QAAQ,sBAAd;QACH,OAAO,KAAKX,MAAL,CAAYW,QAAZ,CAAP;MACD;;;;;;;;;;;;EACF,CAJM;;EASAR,4BAAP;IACE,KAAKH,MAAL,GAAc,EAAd;EACD,CAFM;;EAOAG,qCAAP;IACE,OAAO,KAAKS,aAAL,GAAqBC,IAArB,CAA0B,MAA1B,CAAP;EACD,CAFM;;EAOAV,oCAAP;;;IACE,IAAMM,SAAS,GAAGP,MAAM,CAACG,IAAP,CAAY,KAAKL,MAAjB,CAAlB;IACA,IAAMc,IAAI,GAAa,IAAIC,KAAJ,CAAUN,SAAS,CAACO,MAApB,CAAvB;IACA,IAAIC,CAAC,GAAG,CAAR;;;MACA,KAAuB,uCAASC,kCAAhC,EAAgC,mBAAhC,EAAgCA,kCAAhC,EAAkC;QAA7B,IAAMP,QAAQ,sBAAd;QACHG,IAAI,CAACG,CAAC,EAAF,CAAJ,GAAYN,QAAQ,GAAG,MAAX,GAAoB,KAAKQ,iBAAL,CAAuB,KAAKnB,MAAL,CAAYW,QAAZ,CAAvB,CAApB,GAAoE,KAAhF;MACD;;;;;;;;;;;;;IACD,OAAOG,IAAP;EACD,CARM;;EAcAX,wCAAP,UAAyBH,MAAzB,EAA0C;;;IACxC,IAAMoB,UAAU,GAAGlB,MAAM,CAACG,IAAP,CAAYL,MAAZ,CAAnB;IACA,IAAMqB,MAAM,GAAa,IAAIN,KAAJ,CAAUK,UAAU,CAACJ,MAArB,CAAzB;IACA,IAAIC,CAAC,GAAG,CAAR;;;MACA,KAAuB,yCAAUK,oCAAjC,EAAiC,oBAAjC,EAAiCA,oCAAjC,EAAmC;QAA9B,IAAMC,QAAQ,uBAAd;QACHF,MAAM,CAACJ,CAAC,EAAF,CAAN,GAAc,OAAOM,QAAP,GAAkB,IAAlB,GAAyBvB,MAAM,CAACuB,QAAD,CAA/B,GAA4C,GAA1D;MACD;;;;;;;;;;;;;IACD,OAAOF,MAAM,CAACR,IAAP,CAAY,IAAZ,CAAP;EACD,CARM;;EAUT;AAAC,CApFD;;AAAaW","names":["styles","addStyles","Object","CssStyles","getStyleString","keys","_c","style","assign","selectors","selectors_1_1","selector","getStyleRules","join","defs","Array","length","i","selectors_2_1","getStyleDefString","properties","values","properties_1_1","property","exports"],"sourceRoot":"","sources":["../../ts/util/StyleList.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}