{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.add = void 0;\nvar Symbol_1 = require(\"../../../Types/Symbol\");\nvar Errors_1 = require(\"../../../Core/Errors\");\nvar Settings_1 = require(\"../../../Settings\");\nvar Groups_1 = require(\"../../../Types/Groups\");\nvar Text_1 = require(\"../../../Core/Text\");\nvar Utils_1 = require(\"../../../Core/Utils\");\nvar Matrix_1 = require(\"../../../Types/Matrix\");\nvar index_1 = require(\"../index\");\n/**\n * Adds two symbols\n * @param {Symbol} a\n * @param {Symbol} b\n * @returns {Symbol}\n */\nfunction add(a, b) {\n  var aIsSymbol = (0, Utils_1.isSymbol)(a),\n    bIsSymbol = (0, Utils_1.isSymbol)(b);\n  //we're dealing with two symbols\n  if (aIsSymbol && bIsSymbol) {\n    //forward the adding of symbols with units to the Unit module\n    if (a.unit || b.unit) {\n      return deps.Unit.add(a, b);\n    }\n    //handle Infinity\n    //https://www.encyclopediaofmath.org/index.php/Infinity\n    if (a.isInfinity || b.isInfinity) {\n      var aneg = a.multiplier.lessThan(0),\n        bneg = b.multiplier.lessThan(0);\n      if (a.isInfinity && b.isInfinity && aneg !== bneg) {\n        throw new Errors_1.UndefinedError('(' + a + ')+(' + b + ') is not defined!');\n      }\n      var inf = Symbol_1.Symbol.infinity();\n      if (bneg) inf.negate();\n      return inf;\n    }\n    if (a.isComposite() && a.isLinear() && b.isComposite() && b.isLinear()) {\n      a.distributeMultiplier();\n      b.distributeMultiplier();\n      // Fix for issue #606\n      if (b.length > a.length && a.group === b.group) {\n        var _ref = [b, a];\n        a = _ref[0];\n        b = _ref[1];\n      }\n    }\n    //no need to waste time on zeroes\n    if (a.multiplier.equals(0)) return b;\n    if (b.multiplier.equals(0)) return a;\n    if (a.isConstant() && b.isConstant() && Settings_1.Settings.PARSE2NUMBER) {\n      var result = new Symbol_1.Symbol(a.multiplier.add(b.multiplier).toDecimal(Settings_1.Settings.PRECISION));\n      return result;\n    }\n    var g1 = a.group,\n      g2 = b.group,\n      ap = a.power.toString(),\n      bp = b.power.toString();\n    //always keep the greater group on the left.\n    if (g1 < g2 || g1 === g2 && ap > bp && bp > 0) {\n      return add(b, a);\n    }\n    /*note to self: Please don't forget about this dilemma ever again. In this model Groups.PL and Groups.CB goes crazy\n     * because it doesn't know which one to prioritize. */\n    //correction to Groups.PL dilemma\n    if (g1 === Groups_1.Groups.CB && g2 === Groups_1.Groups.PL && a.value === b.value) {\n      //swap\n      var t = a;\n      a = b;\n      b = t;\n      g1 = a.group;\n      g2 = b.group;\n      ap = a.power.toString();\n      bp = b.power.toString();\n    }\n    var powEQ = ap === bp,\n      v1 = a.value,\n      v2 = b.value,\n      aIsComposite = a.isComposite(),\n      bIsComposite = b.isComposite(),\n      h1,\n      h2,\n      result;\n    if (aIsComposite) h1 = (0, Text_1.text)(a, 'hash');\n    if (bIsComposite) h2 = (0, Text_1.text)(b, 'hash');\n    if (g1 === Groups_1.Groups.CP && g2 === Groups_1.Groups.CP && b.isLinear() && !a.isLinear() && h1 !== h2) {\n      return add(b, a);\n    }\n    //Groups.PL & Groups.PL should compare hashes and not values e.g. compare x+x^2 with x+x^3 and not x with x\n    if (g1 === Groups_1.Groups.PL && g2 === Groups_1.Groups.PL) {\n      v1 = h1;\n      v2 = h2;\n    }\n    var PN = g1 === Groups_1.Groups.P && g2 === Groups_1.Groups.N,\n      PNEQ = a.value === b.multiplier.toString(),\n      valEQ = v1 === v2 || h1 === h2 && h1 !== undefined || PN && PNEQ;\n    //equal values, equal powers\n    if (valEQ && powEQ && g1 === g2) {\n      //make sure to convert Groups.N to something Groups.P can work with\n      if (PN) b = b.convert(Groups_1.Groups.P); //CL\n      //handle Groups.PL\n      if (g1 === Groups_1.Groups.PL && (g2 === Groups_1.Groups.S || g2 === Groups_1.Groups.P)) {\n        a.distributeMultiplier();\n        result = a.attach(b);\n      } else {\n        result = a; //CL\n        if (a.multiplier.isOne() && b.multiplier.isOne() && g1 === Groups_1.Groups.CP && a.isLinear() && b.isLinear()) {\n          for (var s in b.symbols) {\n            var x = b.symbols[s];\n            result.attach(x);\n          }\n        } else result.multiplier = result.multiplier.add(b.multiplier);\n      }\n    }\n    //equal values uneven powers\n    else if (valEQ && g1 !== Groups_1.Groups.PL) {\n      //break the tie for e.g. (x+1)+((x+1)^2+(x+1)^3)\n      if (g1 === Groups_1.Groups.CP && g2 === Groups_1.Groups.PL) {\n        b.insert(a, 'add');\n        result = b;\n      } else {\n        result = Symbol_1.Symbol.shell(Groups_1.Groups.PL).attach([a, b]);\n        //update the hash\n        result.value = g1 === Groups_1.Groups.PL ? h1 : v1;\n      }\n    } else if (aIsComposite && a.isLinear()) {\n      var canIterate = g1 === g2,\n        bothPL = g1 === Groups_1.Groups.PL && g2 === Groups_1.Groups.PL;\n      //we can only iterate group Groups.PL if they values match\n      if (bothPL) canIterate = a.value === b.value;\n      //distribute the multiplier over the entire symbol\n      a.distributeMultiplier();\n      if (b.isComposite() && b.isLinear() && canIterate) {\n        b.distributeMultiplier();\n        //CL\n        for (var s in b.symbols) {\n          var x = b.symbols[s];\n          a.attach(x);\n        }\n        result = a;\n      }\n      //handle cases like 2*(x+x^2)^2+2*(x+x^2)^3+4*(x+x^2)^2\n      else if (bothPL && a.value !== h2 || g1 === Groups_1.Groups.PL && !valEQ) {\n        result = Symbol_1.Symbol.shell(Groups_1.Groups.CP).attach([a, b]);\n        result.updateHash();\n      } else {\n        result = a.attach(b);\n      }\n    } else {\n      if (g1 === Groups_1.Groups.FN && a.fname === Settings_1.Settings.SQRT && g2 !== Groups_1.Groups.EX && b.power.equals(0.5)) {\n        var m = b.multiplier.clone();\n        b = (0, index_1.sqrt)(b.toUnitMultiplier().toLinear());\n        b.multiplier = m;\n      }\n      //fix for issue #3 and #159\n      if (a.length === 2 && b.length === 2 && (0, Utils_1.even)(a.power) && (0, Utils_1.even)(b.power)) {\n        result = add((0, index_1.expand)(a), (0, index_1.expand)(b));\n      } else {\n        result = Symbol_1.Symbol.shell(Groups_1.Groups.CP).attach([a, b]);\n        result.updateHash();\n      }\n    }\n    if (result.multiplier.equals(0)) result = new Symbol_1.Symbol(0);\n    //make sure to remove unnecessary wraps\n    if (result.length === 1) {\n      var m = result.multiplier;\n      result = (0, Utils_1.firstObject)(result.symbols);\n      result.multiplier = result.multiplier.multiply(m);\n    }\n    return result;\n  } else {\n    //keep symbols to the right\n    if (bIsSymbol && !aIsSymbol) {\n      var t = a;\n      a = b;\n      b = t; //swap\n      t = bIsSymbol;\n      bIsSymbol = aIsSymbol;\n      aIsSymbol = t;\n    }\n    var bIsMatrix = (0, Utils_1.isMatrix)(b);\n    if (aIsSymbol && bIsMatrix) {\n      var M = new Matrix_1.Matrix();\n      b.eachElement(function (e, i, j) {\n        M.set(i, j, add(a.clone(), e));\n      });\n      b = M;\n    } else {\n      if ((0, Utils_1.isMatrix)(a) && bIsMatrix) {\n        b = a.add(b);\n      } else if (aIsSymbol && (0, Utils_1.isVector)(b)) {\n        b.each(function (x, i) {\n          i--;\n          b.elements[i] = add(a.clone(), b.elements[i]);\n        });\n      } else {\n        if ((0, Utils_1.isVector)(a) && (0, Utils_1.isVector)(b)) {\n          b.each(function (x, i) {\n            i--;\n            b.elements[i] = add(a.elements[i], b.elements[i]);\n          });\n        } else if ((0, Utils_1.isVector)(a) && (0, Utils_1.isMatrix)(b)) {\n          //try to convert a to a matrix\n          return add(b, a);\n        } else if ((0, Utils_1.isMatrix)(a) && (0, Utils_1.isVector)(b)) {\n          if (b.elements.length === a.rows()) {\n            var M = new Matrix_1.Matrix(),\n              l = a.cols();\n            b.each(function (e, i) {\n              var row = [];\n              for (var j = 0; j < l; j++) {\n                row.push(add(a.elements[i - 1][j].clone(), e.clone()));\n              }\n              M.elements.push(row);\n            });\n            return M;\n          } else (0, Errors_1.err)('Dimensions must match!');\n        }\n      }\n    }\n    return b;\n  }\n}\nexports.add = add;","map":{"version":3,"mappings":"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","names":["add","a","b","aIsSymbol","bIsSymbol","unit","deps","Unit","isInfinity","aneg","multiplier","lessThan","bneg","Errors_1","inf","Symbol_1","infinity","negate","isComposite","isLinear","distributeMultiplier","length","group","equals","isConstant","Settings_1","PARSE2NUMBER","result","toDecimal","PRECISION","g1","g2","ap","power","toString","bp","Groups_1","CB","PL","value","t","powEQ","v1","v2","aIsComposite","bIsComposite","h1","h2","CP","PN","P","N","PNEQ","valEQ","undefined","convert","S","attach","isOne","s","symbols","x","insert","shell","canIterate","bothPL","updateHash","FN","fname","SQRT","EX","m","clone","toUnitMultiplier","toLinear","multiply","bIsMatrix","M","Matrix_1","eachElement","e","i","j","set","each","elements","rows","l","cols","row","push","exports"],"sourceRoot":"","sources":["../../../../src/Functions/Core/operations/add.js"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}