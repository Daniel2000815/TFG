{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\GrobnerPage\\\\GrobnerPage.js\";\nimport React, { useState, useEfect } from 'react';\nimport Grid from '@mui/material/Grid';\nimport Divider from '@mui/material/Divider';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport newId from '../uniqueIdHook';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport { Maximize, SignalCellularNoSimOutlined } from '@mui/icons-material';\nimport Polynomial from '../Polynomial';\nvar nerdamer = require('nerdamer');\nrequire('nerdamer/Algebra');\n\n// [variable, exponent] both strings\n// function exp (p) {\n//     const v = ['x', 'y', 'z'];\n//     const degs = [nerdamer(`deg(${p}, x)`).toString(), nerdamer(`deg(${p}, y)`).toString(), nerdamer(`deg(${p}, z)`).toString()];\n//     const max = Math.max(...degs).toString();\n\n//     return [ v[degs.indexOf(max)] , max];\n// }\n\nfunction lexify(p) {\n  var simplified = '';\n  try {\n    simplified = nerdamer(\"expand(\".concat(p, \")\")).toString();\n  } catch (error) {\n    console.log(error);\n    return;\n  }\n  console.log(simplified);\n  return simplified;\n}\nfunction expGrater(a, b) {\n  return a[0] > b[0] || a[0] == b[0] && a[1] > b[1] || a[0] == b[0] && a[1] == b[1] && a[2] > a[2];\n}\nfunction exp(p) {\n  var split = p.split(/[-+]+/); // separa por + o -\n  var res = ['0', '0', '0'];\n  split.forEach(function (element) {\n    if (element === '') return;\n    var degs = [Number(nerdamer(\"deg(\".concat(element, \", x)\")).toString()), Number(nerdamer(\"deg(\".concat(element, \", y)\")).toString()), Number(nerdamer(\"deg(\".concat(element, \", z)\")).toString())];\n    if (expGrater(degs, res)) res = degs;\n  });\n  return res;\n}\nfunction expEq(e1, e2) {\n  return e1[0] == e2[0] && e1[1] == e2[1] && e1[2] == e2[2];\n}\nfunction lc(f, variable) {\n  console.log(Polynomial(\"(4+a)*x+3xy\"));\n}\n// function lc(f, variable) {\n//   let res = '0';\n\n//   // const split = f.split(/[-+]+/);\n//   // console.log(split);\n\n//   let split = '';\n\n//   for(let i=0; i<f.length; i++){\n//     let c = f[i];\n\n//     if(c==='-' || c==='+'){\n//       res.push(split);\n//       split = c;\n\n//     }\n\n//     split += c;\n\n//   }\n\n//   split.forEach((element) => {\n//     if (element.includes(variable)) {\n//       if (isNaN(element[0])) res = '1';\n//       else res = element.match(/\\d+/);\n//       return;\n//     }\n//   });\n//   console.log(\"lc:\" + res);\n//   return res;\n\n//   console.log(`CALCULANDO LC DE ${f} CON VARIABLE ${variable}`);\n//   // const coeffs = nerdamer.coeffs(`${f}`, `${variable}`);\n//   // let lc = '';\n//   // coeffs.each(function(e, i) {\n//   //     console.log(`(${variable})^${i}: ${e.toString()}`);\n//   //     lc = e.toString();\n//   //  });\n\n//   //  return lc;\n// }\n\n// function lc(p){\n//     const split = p.split(/[-+]+/); // separa por + o -\n//     const expP = exp(p);\n\n//     split.forEach(element => {\n//         let expI = exp(nerdamer(`${element}`).toString());\n//         if(expEq(expP, expI))\n//             return\n//     });\n// }\n\nfunction expMinus(a, b) {\n  return [a[0] - b[0], a[1] - b[1], a[2] - b[2]];\n}\n\n// monomio lider\nfunction lm(f) {\n  return '';\n}\nfunction monomial(exp) {\n  return nerdamer(\"x^(\".concat(exp[0], \")y^(\").concat(exp[1], \")z^(\").concat(exp[2], \")\")).toString();\n}\nfunction division(f, dividers) {\n  console.log(\"INIT DIVISION \".concat(f, \" / (\").concat(dividers, \")\"));\n  var nSteps = 0;\n  var steps = {};\n  var step = [];\n  var s = dividers.length;\n  var p = f;\n  var r = 0;\n  var q = new Array(s).fill('0');\n  while (p !== '0') {\n    nSteps++;\n    var i = 0;\n    var divFound = 0;\n    console.log(\"========= p = \".concat(p, \" ==============\"));\n    var exp_p = exp(p);\n    while (i < s && divFound === 0) {\n      var exp_fi = exp(dividers[i]);\n      var gamma = expMinus(exp_p, exp_fi);\n      step = [];\n      console.log(\"PROBANDO DIVISION POR \".concat(dividers[i]));\n      console.log(\"\\texp(p)-exp(fi) = (\".concat(exp_p, \") - (\").concat(exp_fi, \") = (\").concat(gamma, \")\"));\n      if (gamma.every(function (item) {\n        return item >= 0;\n      })) {\n        console.log(\"\\tPODEMOS\");\n        var xGamma = monomial(gamma);\n        var lcp = lc(p, monomial(exp_p));\n        var lcfi = lc(dividers[i], monomial(exp_fi));\n        var coef = nerdamer(\"(\".concat(lcp, \")/(\").concat(lcfi, \") * \").concat(xGamma)).toString();\n        console.log(\"\\t\\tRESTAMOS (\".concat(coef, \") * (\").concat(dividers[i], \")\"));\n        var newQi = nerdamer(\"\".concat(q[i], \" + \").concat(coef)).expand().toString();\n        var newP = nerdamer(\"\".concat(p, \" - (\").concat(coef, \") * (\").concat(dividers[i], \")\")).expand().toString();\n        step.push(\"f = \".concat(p));\n        step.push(\"exp(f) - exp(f_i)= (\".concat(exp_p[0], \", \").concat(exp_p[1], \", \").concat(exp_p[2], \") - (\").concat(exp_fi[0], \", \").concat(exp_fi[1], \", \").concat(exp_fi[2], \") => We can divide\"));\n        step.push(\"q_i = (\".concat(q[i], \") + (\").concat(coef, \") = \").concat(newQi));\n        step.push(\"p = (\".concat(p, \") - (\").concat(coef, \" * (\").concat(dividers[i], \") ) = \").concat(newP));\n        q[i] = newQi;\n        p = newP;\n        divFound = 1;\n      } else {\n        console.log(\"\\tNO PODEMOS\");\n        i++;\n      }\n    }\n    if (divFound === 0) {\n      var LC = nerdamer(\"\".concat(lc(p, monomial(exp_p)))).toString();\n      var MON = nerdamer(\"\".concat(monomial(exp_p))).toString();\n      var lt = nerdamer(\"(\".concat(LC, \")*(\").concat(MON, \")\")).toString();\n      console.log(\"NO HEMOS PODIDO DIVIDIR POR NADA, QUITAMOS lt(p)= (\".concat(LC, \") * (\").concat(MON, \") = \").concat(lt));\n      var newR = nerdamer(\"\".concat(r, \" + \").concat(lt)).toString();\n      var _newP = nerdamer(\"\".concat(p, \" - \").concat(lt)).toString();\n      step.push('No division posible:');\n      step.push(\"lt(p) = (\".concat(LC, \")*(\").concat(MON, \") = \").concat(lt));\n      step.push(\"r = (\".concat(r, \") + lt(p) = \").concat(newR));\n      step.push(\"p = (\".concat(p, \") - lt(p) = \").concat(_newP));\n      r = newR;\n      p = _newP;\n    }\n    steps[\"step\".concat(nSteps)] = step;\n  }\n  console.log(\"Qs: \".concat(q));\n  console.log(\"R: \".concat(r));\n  console.log('COMPROBANDO...');\n  step = [];\n  var mult = '';\n  step.push(\"r = \".concat(r));\n  q.forEach(function (qi, i) {\n    step.push(\"q_i = \".concat(qi));\n    mult += nerdamer(\"(\".concat(qi, \")*(\").concat(dividers[i], \")\")).toString();\n    if (i < q.length - 1) mult += '+';\n  });\n  steps['result'] = step;\n  console.log(\"q1f1 + \\xB7\\xB7\\xB7 + qsfs = \".concat(mult));\n  var check = nerdamer(\"(\".concat(mult, \")-(\").concat(f, \") + \").concat(r)).expand().toString();\n  console.log(\"(\".concat(mult, \")-(\").concat(f, \") + \").concat(r, \" = \").concat(check));\n  console.log([].concat(_toConsumableArray(q), [r]));\n  console.log(steps);\n  return {\n    quotients: _toConsumableArray(q),\n    remainder: r,\n    steps: steps\n  };\n}\nfunction PolynomialInput(props) {\n  return /*#__PURE__*/React.createElement(TextField, {\n    sx: {\n      width: '100%'\n    },\n    value: props.val,\n    onChange: function onChange(e) {\n      return props.handleChange(e.target.value);\n    },\n    id: props.label,\n    error: props.val === '',\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }\n      }, props.label, \" = \")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 5\n    }\n  });\n}\nfunction arrayCombinations(array) {\n  var result = array.flatMap(function (v, i) {\n    return array.slice(i + 1).map(function (w) {\n      return [v, w];\n    });\n  });\n  return result;\n}\nfunction lcm(alfa, beta) {\n  console.log(\"lcm(\".concat(alfa, \", \").concat(beta, \")\"));\n  console.log(typeof alfa);\n  console.log(alfa.length);\n  console.log(alfa[1]);\n  if (alfa.length !== beta.length) {\n    console.log(\"ERROR\");\n    return -1;\n  }\n  var res = [];\n  for (var i = 0; i < alfa.length; i++) {\n    console.log(Math.max(alfa[i], beta[i]));\n    res.push(Math.max(alfa[i], beta[i]));\n  }\n  console.log(res);\n  return res;\n}\nfunction sPol(f, g) {\n  var alpha = exp(f);\n  var beta = exp(g);\n  var gamma = lcm(alpha, beta);\n  console.log(\"lcm(f,g) = \".concat(gamma));\n  console.log(\"lc(g) = \".concat(lc(g, beta)));\n  var res = nerdamer(\"\\n  (\".concat(lc(g, monomial(beta)), \")*(\").concat(monomial(expMinus(gamma, alpha)), \")*(\").concat(f, \") \\n  - \\n  (\").concat(lc(f, monomial(alpha)), \")*(\").concat(monomial(expMinus(gamma, beta)), \")*(\").concat(g, \")\")).expand().toString();\n  console.log(\"S(\".concat(f, \", \").concat(g, \") = \").concat(res));\n  return res;\n}\nfunction Bucherberg(F) {\n  var maxIt = 10;\n  var currIt = 0;\n  var G = F;\n  var added;\n  do {\n    currIt++;\n    var newG = G;\n    var fgPairs = arrayCombinations(newG);\n    for (var i = 0; i < fgPairs.length; i++) {\n      var r = division(sPol(fgPairs[i][0], fgPairs[i][1]), newG).remainder;\n      if (r !== '0') {\n        G.concat(r);\n        added = true;\n      }\n    }\n  } while (added && currIt < maxIt);\n  console.log(G);\n  return G;\n}\nexport default function GrobnerPage() {\n  var _useState = useState('x^2*y + x*y^2 + y^2'),\n    _useState2 = _slicedToArray(_useState, 2),\n    dividendo = _useState2[0],\n    setDividendo = _useState2[1];\n  var _useState3 = useState(['x*y-1', 'y^2-1']),\n    _useState4 = _slicedToArray(_useState3, 2),\n    divisores = _useState4[0],\n    setDivisores = _useState4[1];\n  var handleDivisoresChange = function handleDivisoresChange(idx, val) {\n    var newDivisores = _toConsumableArray(divisores);\n    newDivisores[idx] = val;\n    setDivisores(newDivisores);\n  };\n  var handleDividendoChange = function handleDividendoChange(val) {\n    setDividendo(val);\n    lexify(val);\n  };\n  var handleDivision = function handleDivision() {\n    // const res = division(dividendo, divisores);\n\n    // console.log(res.quotients);\n\n    lc(2, 2);\n  };\n  var handleBase = function handleBase() {\n    Bucherberg(divisores);\n  };\n  var p = new Polynomial('x^2 - x*y');\n  var q = new Polynomial('(x*y^2)');\n  p.plus(q);\n  console.log(\"POL P+Q = \".concat(p));\n  p.multiply(q);\n  console.log(\"POL P*Q = \".concat(p));\n  console.log(\"LC: \".concat(p.lc()));\n  console.log(\"LM: \".concat(p.lm()));\n  console.log(\"LT: \".concat(p.lt()));\n  console.log(\"EXP: \".concat(p.exp()));\n  console.log(\"OTRO EXP: \".concat(Polynomial.exp('2x^2*z')));\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    spacing: 10,\n    padding: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }\n  }, \"AL ESCRIBIR POLINOMIOS INDICAR TODAS LAS MULTIPLICACIONES: NO xy, SINO x*y\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PolynomialInput, {\n    label: \"f\",\n    val: dividendo,\n    handleChange: function handleChange(v) {\n      return handleDividendoChange(v);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 9\n    }\n  }, \"DIVIDERS\"), divisores.map(function (divisor, idx) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: \"dividerInput_\".concat(idx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PolynomialInput, {\n      label: \"f\".concat(idx + 1),\n      val: divisor,\n      handleChange: function handleChange(v) {\n        return handleDivisoresChange(idx, v);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: function onClick() {\n        setDivisores(divisores.splice(idx, 1));\n        console.log(divisores);\n      },\n      \"aria-label\": \"delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 19\n      }\n    }))));\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: function onClick() {\n      return setDivisores(divisores.concat(''));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 11\n    }\n  }, \"Add divider\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: function onClick() {\n      return handleDivision();\n    },\n    disabled: !divisores.every(function (item) {\n      return item !== '' && item !== '0';\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 11\n    }\n  }, \"Divide\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: function onClick() {\n      return handleBase();\n    },\n    disabled: !divisores.every(function (item) {\n      return item !== '' && item !== '0';\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 11\n    }\n  }, \"Groebner Base\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }\n  }, \"TODO\"));\n}","map":{"version":3,"names":["React","useState","useEfect","Grid","Divider","TextField","InputAdornment","newId","Button","DeleteIcon","IconButton","Maximize","SignalCellularNoSimOutlined","Polynomial","nerdamer","require","lexify","p","simplified","toString","error","console","log","expGrater","a","b","exp","split","res","forEach","element","degs","Number","expEq","e1","e2","lc","f","variable","expMinus","lm","monomial","division","dividers","nSteps","steps","step","s","length","r","q","Array","fill","i","divFound","exp_p","exp_fi","gamma","every","item","xGamma","lcp","lcfi","coef","newQi","expand","newP","push","LC","MON","lt","newR","mult","qi","check","quotients","remainder","PolynomialInput","props","width","val","e","handleChange","target","value","label","startAdornment","arrayCombinations","array","result","flatMap","v","slice","map","w","lcm","alfa","beta","Math","max","sPol","g","alpha","Bucherberg","F","maxIt","currIt","G","added","newG","fgPairs","concat","GrobnerPage","dividendo","setDividendo","divisores","setDivisores","handleDivisoresChange","idx","newDivisores","handleDividendoChange","handleDivision","handleBase","plus","multiply","divisor","splice"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/GrobnerPage/GrobnerPage.js"],"sourcesContent":["import React, { useState, useEfect } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Divider from '@mui/material/Divider';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport newId from '../uniqueIdHook';\r\nimport Button from '@mui/material/Button';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { Maximize, SignalCellularNoSimOutlined } from '@mui/icons-material';\r\nimport Polynomial from '../Polynomial';\r\n\r\nconst nerdamer = require('nerdamer');\r\nrequire('nerdamer/Algebra');\r\n\r\n\r\n// [variable, exponent] both strings\r\n// function exp (p) {\r\n//     const v = ['x', 'y', 'z'];\r\n//     const degs = [nerdamer(`deg(${p}, x)`).toString(), nerdamer(`deg(${p}, y)`).toString(), nerdamer(`deg(${p}, z)`).toString()];\r\n//     const max = Math.max(...degs).toString();\r\n\r\n//     return [ v[degs.indexOf(max)] , max];\r\n// }\r\n\r\nfunction lexify(p) {\r\n  let simplified = '';\r\n\r\n  try {\r\n    simplified = nerdamer(`expand(${p})`).toString();\r\n  } catch (error) {\r\n    console.log(error);\r\n    return;\r\n  }\r\n  console.log(simplified);\r\n  return simplified;\r\n}\r\n\r\nfunction expGrater(a, b) {\r\n  return (\r\n    a[0] > b[0] ||\r\n    (a[0] == b[0] && a[1] > b[1]) ||\r\n    (a[0] == b[0] && a[1] == b[1] && a[2] > a[2])\r\n  );\r\n}\r\n\r\nfunction exp(p) {\r\n  const split = p.split(/[-+]+/); // separa por + o -\r\n  let res = ['0', '0', '0'];\r\n\r\n  split.forEach((element) => {\r\n    if (element === '') return;\r\n\r\n    let degs = [\r\n      Number(nerdamer(`deg(${element}, x)`).toString()),\r\n      Number(nerdamer(`deg(${element}, y)`).toString()),\r\n      Number(nerdamer(`deg(${element}, z)`).toString()),\r\n    ];\r\n\r\n    if (expGrater(degs, res)) res = degs;\r\n  });\r\n\r\n  return res;\r\n}\r\n\r\nfunction expEq(e1, e2) {\r\n  return e1[0] == e2[0] && e1[1] == e2[1] && e1[2] == e2[2];\r\n}\r\n\r\nfunction lc(f, variable){\r\n  console.log(Polynomial(\"(4+a)*x+3xy\"));\r\n}\r\n// function lc(f, variable) {\r\n//   let res = '0';\r\n\r\n//   // const split = f.split(/[-+]+/);\r\n//   // console.log(split);\r\n\r\n//   let split = '';\r\n\r\n//   for(let i=0; i<f.length; i++){\r\n//     let c = f[i];\r\n\r\n//     if(c==='-' || c==='+'){\r\n//       res.push(split);\r\n//       split = c;\r\n\r\n//     }\r\n\r\n//     split += c;\r\n    \r\n//   }\r\n\r\n//   split.forEach((element) => {\r\n//     if (element.includes(variable)) {\r\n//       if (isNaN(element[0])) res = '1';\r\n//       else res = element.match(/\\d+/);\r\n//       return;\r\n//     }\r\n//   });\r\n//   console.log(\"lc:\" + res);\r\n//   return res;\r\n\r\n//   console.log(`CALCULANDO LC DE ${f} CON VARIABLE ${variable}`);\r\n//   // const coeffs = nerdamer.coeffs(`${f}`, `${variable}`);\r\n//   // let lc = '';\r\n//   // coeffs.each(function(e, i) {\r\n//   //     console.log(`(${variable})^${i}: ${e.toString()}`);\r\n//   //     lc = e.toString();\r\n//   //  });\r\n\r\n//   //  return lc;\r\n// }\r\n\r\n// function lc(p){\r\n//     const split = p.split(/[-+]+/); // separa por + o -\r\n//     const expP = exp(p);\r\n\r\n//     split.forEach(element => {\r\n//         let expI = exp(nerdamer(`${element}`).toString());\r\n//         if(expEq(expP, expI))\r\n//             return\r\n//     });\r\n// }\r\n\r\nfunction expMinus(a, b) {\r\n  return [a[0] - b[0], a[1] - b[1], a[2] - b[2]];\r\n}\r\n\r\n// monomio lider\r\nfunction lm(f) {\r\n  return '';\r\n}\r\n\r\nfunction monomial(exp) {\r\n  return nerdamer(`x^(${exp[0]})y^(${exp[1]})z^(${exp[2]})`).toString();\r\n}\r\n\r\nfunction division(f, dividers) {\r\n  console.log(`INIT DIVISION ${f} / (${dividers})`);\r\n  let nSteps = 0;\r\n  let steps = {};\r\n  let step = [];\r\n\r\n  const s = dividers.length;\r\n  let p = f;\r\n  let r = 0;\r\n  let q = new Array(s).fill('0');\r\n\r\n  while (p !== '0') {\r\n    nSteps++;\r\n    let i = 0;\r\n    let divFound = 0;\r\n    console.log(`========= p = ${p} ==============`);\r\n    const exp_p = exp(p);\r\n\r\n    while (i < s && divFound === 0) {\r\n      const exp_fi = exp(dividers[i]);\r\n      const gamma = expMinus(exp_p, exp_fi);\r\n\r\n      step = [];\r\n      console.log(`PROBANDO DIVISION POR ${dividers[i]}`);\r\n      console.log(`\\texp(p)-exp(fi) = (${exp_p}) - (${exp_fi}) = (${gamma})`);\r\n      if (gamma.every((item) => item >= 0)) {\r\n        console.log(`\\tPODEMOS`);\r\n        const xGamma = monomial(gamma);\r\n        const lcp = lc(p, monomial(exp_p));\r\n        const lcfi = lc(dividers[i], monomial(exp_fi));\r\n\r\n        const coef = nerdamer(`(${lcp})/(${lcfi}) * ${xGamma}`).toString();\r\n\r\n        console.log(`\\t\\tRESTAMOS (${coef}) * (${dividers[i]})`);\r\n\r\n        let newQi = nerdamer(`${q[i]} + ${coef}`).expand().toString();\r\n        let newP = nerdamer(`${p} - (${coef}) * (${dividers[i]})`)\r\n          .expand()\r\n          .toString();\r\n\r\n        step.push(`f = ${p}`);\r\n        step.push(\r\n          `exp(f) - exp(f_i)= (${exp_p[0]}, ${exp_p[1]}, ${exp_p[2]}) - (${exp_fi[0]}, ${exp_fi[1]}, ${exp_fi[2]}) => We can divide`\r\n        );\r\n        step.push(`q_i = (${q[i]}) + (${coef}) = ${newQi}`);\r\n        step.push(`p = (${p}) - (${coef} * (${dividers[i]}) ) = ${newP}`);\r\n\r\n        q[i] = newQi;\r\n        p = newP;\r\n        divFound = 1;\r\n      } else {\r\n        console.log(`\\tNO PODEMOS`);\r\n        i++;\r\n      }\r\n    }\r\n    if (divFound === 0) {\r\n      const LC = nerdamer(`${lc(p, monomial(exp_p))}`).toString();\r\n      const MON = nerdamer(`${monomial(exp_p)}`).toString();\r\n\r\n      const lt = nerdamer(`(${LC})*(${MON})`).toString();\r\n\r\n      console.log(\r\n        `NO HEMOS PODIDO DIVIDIR POR NADA, QUITAMOS lt(p)= (${LC}) * (${MON}) = ${lt}`\r\n      );\r\n      const newR = nerdamer(`${r} + ${lt}`).toString();\r\n      const newP = nerdamer(`${p} - ${lt}`).toString();\r\n\r\n      step.push('No division posible:');\r\n      step.push(`lt(p) = (${LC})*(${MON}) = ${lt}`);\r\n      step.push(`r = (${r}) + lt(p) = ${newR}`);\r\n      step.push(`p = (${p}) - lt(p) = ${newP}`);\r\n\r\n      r = newR;\r\n      p = newP;\r\n    }\r\n\r\n    steps[`step${nSteps}`] = step;\r\n  }\r\n\r\n  console.log(`Qs: ${q}`);\r\n  console.log(`R: ${r}`);\r\n\r\n  console.log('COMPROBANDO...');\r\n\r\n  step = [];\r\n\r\n  let mult = '';\r\n  step.push(`r = ${r}`);\r\n  q.forEach((qi, i) => {\r\n    step.push(`q_i = ${qi}`);\r\n    mult += nerdamer(`(${qi})*(${dividers[i]})`).toString();\r\n    if (i < q.length - 1) mult += '+';\r\n  });\r\n\r\n  steps['result'] = step;\r\n\r\n  console.log(`q1f1 + ··· + qsfs = ${mult}`);\r\n  const check = nerdamer(`(${mult})-(${f}) + ${r}`).expand().toString();\r\n  console.log(`(${mult})-(${f}) + ${r} = ${check}`);\r\n\r\n  console.log([...q, r]);\r\n  console.log(steps);\r\n\r\n  return {\r\n    quotients: [...q],\r\n    remainder: r,\r\n    steps: steps,\r\n  };\r\n}\r\n\r\nfunction PolynomialInput(props) {\r\n  return (\r\n    <TextField\r\n      sx={{ width: '100%' }}\r\n      value={props.val}\r\n      onChange={(e) => props.handleChange(e.target.value)}\r\n      id={props.label}\r\n      error={props.val === ''}\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">{props.label} = </InputAdornment>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction arrayCombinations(array) {\r\n  var result = array.flatMap((v, i) => array.slice(i + 1).map((w) => [v, w]));\r\n  return result;\r\n}\r\n\r\nfunction lcm(alfa, beta) {\r\n  console.log(`lcm(${alfa}, ${beta})`);\r\n  console.log(typeof(alfa));\r\n  console.log(alfa.length);\r\n  console.log(alfa[1]);\r\n  if(alfa.length !== beta.length){\r\n    console.log(\"ERROR\");\r\n    return -1;\r\n  }\r\n\r\n  let res = [];\r\n\r\n  for(let i=0; i<alfa.length; i++){\r\n    console.log(Math.max(alfa[i], beta[i]));\r\n    res.push(Math.max(alfa[i], beta[i]));\r\n  }\r\n\r\n  console.log(res);\r\n  return res;\r\n}\r\n\r\nfunction sPol(f, g) {\r\n  const alpha = exp(f);\r\n  const beta = exp(g);\r\n  const gamma = lcm(alpha, beta);\r\n  console.log(`lcm(f,g) = ${gamma}`);\r\n  console.log(`lc(g) = ${lc(g, beta)}`);\r\n  const res = nerdamer(`\r\n  (${lc(g, monomial(beta))})*(${monomial(expMinus(gamma, alpha))})*(${f}) \r\n  - \r\n  (${lc(f, monomial(alpha))})*(${monomial(expMinus(gamma, beta))})*(${g})`)\r\n    .expand()\r\n    .toString();\r\n\r\n  console.log(`S(${f}, ${g}) = ${res}`);\r\n  return res;\r\n}\r\n\r\nfunction Bucherberg(F) {\r\n  const maxIt = 10;\r\n  let currIt = 0;\r\n  let G = F;\r\n  let added;\r\n\r\n  do {\r\n    currIt++;\r\n    let newG = G;\r\n    const fgPairs = arrayCombinations(newG);\r\n\r\n    for (let i = 0; i < fgPairs.length; i++) {\r\n      const r = division(sPol(fgPairs[i][0], fgPairs[i][1]), newG).remainder;\r\n      if (r !== '0') {\r\n        G.concat(r);\r\n        added = true;\r\n      }\r\n    }\r\n  } while (added && currIt<maxIt);\r\n\r\n  console.log(G);\r\n  return G;\r\n}\r\n\r\nexport default function GrobnerPage() {\r\n  const [dividendo, setDividendo] = useState('x^2*y + x*y^2 + y^2');\r\n  const [divisores, setDivisores] = useState(['x*y-1', 'y^2-1']);\r\n\r\n  const handleDivisoresChange = (idx, val) => {\r\n    let newDivisores = [...divisores];\r\n    newDivisores[idx] = val;\r\n    setDivisores(newDivisores);\r\n  };\r\n\r\n  const handleDividendoChange = (val) => {\r\n    setDividendo(val);\r\n    lexify(val);\r\n  };\r\n\r\n  const handleDivision = () => {\r\n    // const res = division(dividendo, divisores);\r\n\r\n    // console.log(res.quotients);\r\n\r\n    lc(2,2);\r\n  };\r\n\r\n  const handleBase = () => {\r\n    Bucherberg(divisores);\r\n  };\r\n\r\n  const p = new Polynomial('x^2 - x*y');\r\n  const q = new Polynomial('(x*y^2)');\r\n  p.plus(q);\r\n  console.log(`POL P+Q = ${p}`);\r\n  p.multiply(q);\r\n  console.log(`POL P*Q = ${p}`);\r\n  console.log(`LC: ${p.lc()}`);\r\n  console.log(`LM: ${p.lm()}`);\r\n  console.log(`LT: ${p.lt()}`);\r\n  console.log(`EXP: ${p.exp()}`);\r\n  console.log(`OTRO EXP: ${Polynomial.exp('2x^2*z')}`);\r\n \r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"flex-start\"\r\n      alignItems=\"flex-start\"\r\n      spacing={10}\r\n      padding={2}\r\n    >\r\n      \r\n      <Grid item xs={12}>\r\n        {/* Hola:{exp('2x^2 + y^3').toString()}\r\n        coefs: {nerdamer.coeffs('x^2 -99x^2+6x-9x^6+y^3+ xy', 'x').toString()   }\r\n        lc: {lc('9x^9+6y^8', 'y')} */}\r\n        AL ESCRIBIR POLINOMIOS INDICAR TODAS LAS MULTIPLICACIONES: NO xy, SINO\r\n        x*y\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <PolynomialInput\r\n          label={`f`}\r\n          val={dividendo}\r\n          handleChange={(v) => handleDividendoChange(v)}\r\n        />\r\n        <Divider>DIVIDERS</Divider>\r\n        {divisores.map(function (divisor, idx) {\r\n          return (\r\n            <div key={`dividerInput_${idx}`}>\r\n              <Grid item xs={10}>\r\n                <PolynomialInput\r\n                  label={`f${idx + 1}`}\r\n                  val={divisor}\r\n                  handleChange={(v) => handleDivisoresChange(idx, v)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    setDivisores(divisores.splice(idx, 1));\r\n                    console.log(divisores);\r\n                  }}\r\n                  aria-label=\"delete\"\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => setDivisores(divisores.concat(''))}\r\n          >\r\n            Add divider\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => handleDivision()}\r\n            disabled={!divisores.every((item) => item !== '' && item !== '0')}\r\n          >\r\n            Divide\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => handleBase()}\r\n            disabled={!divisores.every((item) => item !== '' && item !== '0')}\r\n          >\r\n            Groebner Base\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        TODO\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}