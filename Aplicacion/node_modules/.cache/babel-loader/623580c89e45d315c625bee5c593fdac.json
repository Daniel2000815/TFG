{"ast":null,"code":"import { deepMap } from '../../utils/collection.js';\nimport { factory } from '../../utils/factory.js';\nimport { notNumber } from '../../plain/number/index.js';\nvar name = 'not';\nvar dependencies = ['typed'];\nexport var createNot = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n  /**\r\n   * Logical `not`. Flips boolean value of a given parameter.\r\n   * For matrices, the function is evaluated element wise.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.not(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.not(2)      // returns false\r\n   *    math.not(0)      // returns true\r\n   *    math.not(true)   // returns false\r\n   *\r\n   *    a = [2, -7, 0]\r\n   *    math.not(a)      // returns [false, false, true]\r\n   *\r\n   * See also:\r\n   *\r\n   *    and, or, xor\r\n   *\r\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\r\n   * @return {boolean | Array | Matrix}\r\n   *            Returns true when input is a zero or empty value.\r\n   */\n\n  return typed(name, {\n    'null | undefined': function nullUndefined() {\n      return true;\n    },\n    number: notNumber,\n    Complex: function Complex(x) {\n      return x.re === 0 && x.im === 0;\n    },\n    BigNumber: function BigNumber(x) {\n      return x.isZero() || x.isNaN();\n    },\n    Unit: typed.referToSelf(function (self) {\n      return function (x) {\n        return typed.find(self, x.valueType())(x.value);\n      };\n    }),\n    'Array | Matrix': typed.referToSelf(function (self) {\n      return function (x) {\n        return deepMap(x, self);\n      };\n    })\n  });\n});","map":{"version":3,"names":["deepMap","factory","notNumber","name","dependencies","createNot","_ref","typed","number","Complex","x","re","im","BigNumber","isZero","isNaN","Unit","referToSelf","self","find","valueType","value"],"sources":["C:/Users/daniz/TFG/Aplicacion/node_modules/mathjs/lib/esm/function/logical/not.js"],"sourcesContent":["import { deepMap } from '../../utils/collection.js';\r\nimport { factory } from '../../utils/factory.js';\r\nimport { notNumber } from '../../plain/number/index.js';\r\nvar name = 'not';\r\nvar dependencies = ['typed'];\r\nexport var createNot = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed\r\n  } = _ref;\r\n\r\n  /**\r\n   * Logical `not`. Flips boolean value of a given parameter.\r\n   * For matrices, the function is evaluated element wise.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.not(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.not(2)      // returns false\r\n   *    math.not(0)      // returns true\r\n   *    math.not(true)   // returns false\r\n   *\r\n   *    a = [2, -7, 0]\r\n   *    math.not(a)      // returns [false, false, true]\r\n   *\r\n   * See also:\r\n   *\r\n   *    and, or, xor\r\n   *\r\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\r\n   * @return {boolean | Array | Matrix}\r\n   *            Returns true when input is a zero or empty value.\r\n   */\r\n  return typed(name, {\r\n    'null | undefined': () => true,\r\n    number: notNumber,\r\n    Complex: function Complex(x) {\r\n      return x.re === 0 && x.im === 0;\r\n    },\r\n    BigNumber: function BigNumber(x) {\r\n      return x.isZero() || x.isNaN();\r\n    },\r\n    Unit: typed.referToSelf(self => x => typed.find(self, x.valueType())(x.value)),\r\n    'Array | Matrix': typed.referToSelf(self => x => deepMap(x, self))\r\n  });\r\n});"],"mappings":"AAAA,SAASA,OAAT,QAAwB,2BAAxB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,IAAIC,IAAI,GAAG,KAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,CAAnB;AACA,OAAO,IAAIC,SAAS,GAAG,eAAeJ,OAAO,CAACE,IAAD,EAAOC,YAAP,EAAqB,UAAAE,IAAI,EAAI;EACxE,IACEC,KADF,GAEID,IAFJ,CACEC,KADF;EAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,OAAOA,KAAK,CAACJ,IAAD,EAAO;IACjB,oBAAoB;MAAA,OAAM,IAAN;IAAA,CADH;IAEjBK,MAAM,EAAEN,SAFS;IAGjBO,OAAO,EAAE,SAASA,OAAT,CAAiBC,CAAjB,EAAoB;MAC3B,OAAOA,CAAC,CAACC,EAAF,KAAS,CAAT,IAAcD,CAAC,CAACE,EAAF,KAAS,CAA9B;IACD,CALgB;IAMjBC,SAAS,EAAE,SAASA,SAAT,CAAmBH,CAAnB,EAAsB;MAC/B,OAAOA,CAAC,CAACI,MAAF,MAAcJ,CAAC,CAACK,KAAF,EAArB;IACD,CARgB;IASjBC,IAAI,EAAET,KAAK,CAACU,WAAN,CAAkB,UAAAC,IAAI;MAAA,OAAI,UAAAR,CAAC;QAAA,OAAIH,KAAK,CAACY,IAAN,CAAWD,IAAX,EAAiBR,CAAC,CAACU,SAAF,EAAjB,EAAgCV,CAAC,CAACW,KAAlC,CAAJ;MAAA,CAAL;IAAA,CAAtB,CATW;IAUjB,kBAAkBd,KAAK,CAACU,WAAN,CAAkB,UAAAC,IAAI;MAAA,OAAI,UAAAR,CAAC;QAAA,OAAIV,OAAO,CAACU,CAAD,EAAIQ,IAAJ,CAAX;MAAA,CAAL;IAAA,CAAtB;EAVD,CAAP,CAAZ;AAYD,CA1C4C,CAAtC"},"metadata":{},"sourceType":"module"}