{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\daniz\\\\TFG\\\\Aplicacion\\\\src\\\\GrobnerPage\\\\GrobnerPage.js\";\nimport React, { useState, useEfect } from \"react\";\nimport Grid from '@mui/material/Grid';\nimport Divider from '@mui/material/Divider';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport newId from '../uniqueIdHook';\nimport Button from '@mui/material/Button';\n\nvar nerdamer = require('nerdamer');\n\nrequire('nerdamer/Algebra'); // [variable, exponent] both strings\n// function exp (p) {\n//     const v = ['x', 'y', 'z'];\n//     const degs = [nerdamer(`deg(${p}, x)`).toString(), nerdamer(`deg(${p}, y)`).toString(), nerdamer(`deg(${p}, z)`).toString()];\n//     const max = Math.max(...degs).toString();\n//     return [ v[degs.indexOf(max)] , max];\n// }\n\n\nfunction lexify(p) {\n  var simplified = '';\n\n  try {\n    simplified = nerdamer(\"expand(\".concat(p, \")\")).toString();\n  } catch (error) {\n    console.log(error);\n    return;\n  }\n\n  console.log(simplified);\n  return simplified;\n}\n\nfunction expGrater(a, b) {\n  return a[0] > b[0] || a[0] == b[0] && a[1] > b[1] || a[0] == b[0] && a[1] == b[1] && a[2] > a[2];\n}\n\nfunction exp(p) {\n  var split = p.split(/[-+]+/); // separa por + o -\n\n  var res = ['0', '0', '0'];\n  split.forEach(function (element) {\n    if (element === '') return;\n    var degs = [Number(nerdamer(\"deg(\".concat(element, \", x)\")).toString()), Number(nerdamer(\"deg(\".concat(element, \", y)\")).toString()), Number(nerdamer(\"deg(\".concat(element, \", z)\")).toString())];\n    if (expGrater(degs, res)) res = degs;\n  });\n  console.log(\"\\texp(\".concat(p, \") = \").concat(res));\n  return res;\n}\n\nfunction expEq(e1, e2) {\n  return e1[0] == e2[0] && e1[1] == e2[1] && e1[2] == e2[2];\n}\n\nfunction lc(f, variable) {\n  var res = \"0\";\n  var split = f.split(/[-+]+/);\n  split.forEach(function (element) {\n    if (element.includes(variable)) {\n      if (isNaN(element[0])) res = '1';else res = element.match(/\\d+/);\n      return;\n    }\n  });\n  return res;\n  console.log(\"CALCULANDO LC DE \".concat(f, \" CON VARIABLE \").concat(variable)); // const coeffs = nerdamer.coeffs(`${f}`, `${variable}`);\n  // let lc = '';\n  // coeffs.each(function(e, i) {\n  //     console.log(`(${variable})^${i}: ${e.toString()}`);\n  //     lc = e.toString();\n  //  });\n  //  return lc;\n} // function lc(p){\n//     const split = p.split(/[-+]+/); // separa por + o -\n//     const expP = exp(p);\n//     split.forEach(element => {\n//         let expI = exp(nerdamer(`${element}`).toString());\n//         if(expEq(expP, expI))\n//             return \n//     });\n// }\n\n\nfunction expMinus(a, b) {\n  return [a[0] - b[0], a[1] - b[1], a[2] - b[2]];\n} // monomio lider\n\n\nfunction lm(f) {\n  return '';\n}\n\nfunction monomial(exp) {\n  return nerdamer(\"x^(\".concat(exp[0], \")y^(\").concat(exp[1], \")z^(\").concat(exp[2], \")\")).toString();\n}\n\nfunction division(f, dividers) {\n  console.log(\"INIT\");\n  var s = dividers.length;\n  var p = f;\n  var r = 0;\n  var q = new Array(s).fill(0);\n\n  while (p !== '0') {\n    var i = 0;\n    var step = 0;\n    console.log(\"========= p = \".concat(p, \" ==============\"));\n    var exp_p = exp(p);\n\n    while (i < s && step === 0) {\n      var exp_fi = exp(dividers[i]);\n      var gamma = expMinus(exp_p, exp_fi);\n      console.log(\"PROBANDO DIVISION POR \".concat(dividers[i]));\n\n      if (gamma.every(function (item) {\n        return item >= 0;\n      })) {\n        console.log(\"\\tPODEMOS\");\n        var xGamma = monomial(gamma);\n        var lcp = lc(p, monomial(exp_p));\n        var lcfi = lc(dividers[i], monomial(exp_fi));\n        var coef = nerdamer(\"(\".concat(lcp, \")/(\").concat(lcfi, \") * \").concat(xGamma)).toString();\n        console.log(\"\\t\\tRESTAMOS (\".concat(coef, \") * (\").concat(dividers[i], \")\"));\n        q[i] = nerdamer(\"\".concat(q[i], \" + \").concat(coef)).expand().toString();\n        p = nerdamer(\"\".concat(p, \" - (\").concat(coef, \") * (\").concat(dividers[i], \")\")).expand().toString();\n        step = 1;\n      } else {\n        console.log(\"\\tNO PODEMOS\");\n        i++;\n      }\n    }\n\n    if (step === 0) {\n      console.log(\"LC: \".concat(nerdamer(\"\".concat(lc(p, monomial(exp_p)))).toString()));\n      console.log(\"X: \".concat(monomial(exp_p).toString()));\n      var lt = nerdamer(\"\".concat(lc(p, monomial(exp_p)), \"*\").concat(monomial(exp_p))).toString();\n      console.log(\"NO HEMOS PODIDO DIVIDIR POR NADA, QUITAMOS LT: \".concat(lt));\n      r = nerdamer(\"\".concat(r, \" + \").concat(lt)).toString();\n      p = nerdamer(\"\".concat(p, \" - \").concat(lt)).toString();\n    }\n  }\n\n  console.log(\"Qs: \".concat(q));\n  console.log(\"R: \".concat(r));\n  console.log(\"COMPROBANDO...\");\n  var mult = \"\";\n  q.forEach(function (qi, i) {\n    mult += nerdamer(\"(\".concat(qi, \")*(\").concat(dividers[i], \")\")).toString();\n    if (i < q.length - 1) mult += \"+\";\n  });\n  console.log(\"q1f1 + \\xB7\\xB7\\xB7 + qsfs = \".concat(mult));\n  var check = nerdamer(\"(\".concat(mult, \")-(\").concat(f, \") + \").concat(r)).expand().toString();\n  console.log(\"(\".concat(mult, \")-(\").concat(f, \") + \").concat(r, \" = \").concat(check));\n  return [].concat(_toConsumableArray(q), [r]);\n}\n\nfunction PolynomialInput(props) {\n  return /*#__PURE__*/React.createElement(TextField, {\n    sx: {\n      width: '100%'\n    },\n    value: props.val,\n    onChange: function onChange(e) {\n      return props.handleChange(e.target.value);\n    },\n    id: props.label,\n    error: props.val === '',\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, props.label, \" = \")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default function GrobnerPage() {\n  var _useState = useState(\"x^2*y + x*y^2 + y^2\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      dividendo = _useState2[0],\n      setDividendo = _useState2[1];\n\n  var _useState3 = useState([\"y^2-1\", \"x*y-1\"]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      divisores = _useState4[0],\n      setDivisores = _useState4[1];\n\n  var handleDivisoresChange = function handleDivisoresChange(idx, val) {\n    var newDivisores = _toConsumableArray(divisores);\n\n    newDivisores[idx] = val;\n    setDivisores(newDivisores);\n  };\n\n  var handleDividendoChange = function handleDividendoChange(val) {\n    setDividendo(val);\n    lexify(val);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    spacing: 10,\n    padding: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, \"AL ESCRIBIR POLINOMIOS INDICAR TODAS LAS MULTIPLICACIONES: NO xy, SINO x*y\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PolynomialInput, {\n    label: \"f\",\n    val: dividendo,\n    handleChange: function handleChange(v) {\n      return handleDividendoChange(v);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, \"DIVIDERS\"), divisores.map(function (divisor, idx) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: \"dividerInput_\".concat(idx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(PolynomialInput, {\n      label: \"f\".concat(idx + 1),\n      val: divisor,\n      handleChange: function handleChange(v) {\n        return handleDivisoresChange(idx, v);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 29\n      }\n    })));\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: function onClick() {\n      return division(dividendo, divisores);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, \"Divide\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, \"TODO\"));\n}","map":{"version":3,"names":["React","useState","useEfect","Grid","Divider","TextField","InputAdornment","newId","Button","nerdamer","require","lexify","p","simplified","toString","error","console","log","expGrater","a","b","exp","split","res","forEach","element","degs","Number","expEq","e1","e2","lc","f","variable","includes","isNaN","match","expMinus","lm","monomial","division","dividers","s","length","r","q","Array","fill","i","step","exp_p","exp_fi","gamma","every","item","xGamma","lcp","lcfi","coef","expand","lt","mult","qi","check","PolynomialInput","props","width","val","e","handleChange","target","value","label","startAdornment","GrobnerPage","dividendo","setDividendo","divisores","setDivisores","handleDivisoresChange","idx","newDivisores","handleDividendoChange","v","map","divisor"],"sources":["C:/Users/daniz/TFG/Aplicacion/src/GrobnerPage/GrobnerPage.js"],"sourcesContent":["import React, { useState, useEfect } from \"react\";\r\nimport Grid from '@mui/material/Grid';\r\nimport Divider from '@mui/material/Divider';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport newId from '../uniqueIdHook';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst nerdamer = require('nerdamer');\r\nrequire('nerdamer/Algebra');\r\n\r\n// [variable, exponent] both strings\r\n// function exp (p) {\r\n//     const v = ['x', 'y', 'z'];\r\n//     const degs = [nerdamer(`deg(${p}, x)`).toString(), nerdamer(`deg(${p}, y)`).toString(), nerdamer(`deg(${p}, z)`).toString()];\r\n//     const max = Math.max(...degs).toString();\r\n\r\n//     return [ v[degs.indexOf(max)] , max];\r\n// }\r\n\r\nfunction lexify(p){\r\n    let simplified = '';\r\n    \r\n    try{\r\n        simplified = nerdamer(`expand(${p})`).toString();\r\n    }catch(error){\r\n        console.log(error);\r\n        return;\r\n    }\r\n    console.log(simplified);\r\n    return simplified;\r\n}\r\n\r\nfunction expGrater(a,b){\r\n    return a[0]>b[0] || (a[0]==b[0] && a[1]>b[1]) || (a[0]==b[0] && a[1]==b[1] && a[2]>a[2]);\r\n}\r\n\r\nfunction exp(p){\r\n    const split = p.split(/[-+]+/); // separa por + o -\r\n    let res = ['0', '0', '0'];\r\n    split.forEach(element => {\r\n        if(element === '')\r\n            return;\r\n\r\n        let degs = [\r\n            Number(nerdamer(`deg(${element}, x)`).toString()), \r\n            Number(nerdamer(`deg(${element}, y)`).toString()),\r\n            Number(nerdamer(`deg(${element}, z)`).toString())\r\n        ];\r\n\r\n        if(expGrater(degs,res))\r\n            res = degs;\r\n    });\r\n\r\n    console.log(`\\texp(${p}) = ${res}`);\r\n    return res;\r\n}\r\n\r\nfunction expEq(e1,e2){\r\n    return e1[0]==e2[0] && e1[1]==e2[1] && e1[2]==e2[2];\r\n}\r\n\r\nfunction lc(f, variable){\r\n    let res = \"0\";\r\n\r\n    const split = f.split(/[-+]+/);\r\n    split.forEach(element => {\r\n        if(element.includes(variable)){\r\n            if(isNaN(element[0]))\r\n                res = '1';\r\n            else\r\n                res = element.match(/\\d+/);\r\n            return;\r\n       }\r\n    });\r\n\r\n    return res;\r\n\r\n\r\n\r\n    console.log(`CALCULANDO LC DE ${f} CON VARIABLE ${variable}`);\r\n    // const coeffs = nerdamer.coeffs(`${f}`, `${variable}`);\r\n    // let lc = '';\r\n    // coeffs.each(function(e, i) {\r\n    //     console.log(`(${variable})^${i}: ${e.toString()}`);\r\n    //     lc = e.toString();\r\n    //  });\r\n\r\n    //  return lc;\r\n}\r\n\r\n// function lc(p){\r\n//     const split = p.split(/[-+]+/); // separa por + o -\r\n//     const expP = exp(p);\r\n\r\n//     split.forEach(element => {\r\n//         let expI = exp(nerdamer(`${element}`).toString());\r\n//         if(expEq(expP, expI))\r\n//             return \r\n//     });\r\n// }\r\n\r\nfunction expMinus(a,b){\r\n    return [a[0]-b[0], a[1]-b[1], a[2]-b[2]];\r\n}\r\n\r\n// monomio lider\r\nfunction lm(f){\r\n    return ''\r\n}\r\n\r\nfunction monomial(exp){\r\n    return nerdamer(`x^(${exp[0]})y^(${exp[1]})z^(${exp[2]})`).toString();\r\n}\r\n\r\nfunction division(f, dividers){\r\n    console.log(\"INIT\");\r\n\r\n    const s = dividers.length;\r\n    let p = f;\r\n    let r = 0;\r\n    let q = new Array(s).fill(0);\r\n    \r\n    while(p!=='0'){\r\n        let i = 0;\r\n        let step = 0;\r\n        console.log(`========= p = ${p} ==============`);\r\n        const exp_p = exp(p);\r\n\r\n        while(i<s && step===0){\r\n            \r\n            const exp_fi = exp(dividers[i]);\r\n            const gamma = expMinus(exp_p, exp_fi);\r\n\r\n            console.log(`PROBANDO DIVISION POR ${dividers[i]}`);\r\n\r\n            if( gamma.every(item => item >= 0)  ){\r\n                console.log(`\\tPODEMOS`); \r\n                const xGamma = monomial(gamma);\r\n                const lcp = lc(p, monomial(exp_p));\r\n                const lcfi = lc(dividers[i], monomial(exp_fi));\r\n                \r\n                const coef = nerdamer(`(${lcp})/(${lcfi}) * ${xGamma}`).toString();\r\n                \r\n                console.log(`\\t\\tRESTAMOS (${coef}) * (${dividers[i]})`);\r\n                \r\n                q[i] = nerdamer(`${q[i]} + ${coef}`).expand().toString();\r\n                p = nerdamer(`${p} - (${coef}) * (${dividers[i]})`).expand().toString();\r\n                step = 1;\r\n            }\r\n            else{\r\n                console.log(`\\tNO PODEMOS`) \r\n                i++;\r\n            }\r\n        }\r\n        if(step === 0){\r\n            \r\n            console.log(`LC: ${nerdamer(`${lc(p, monomial(exp_p))}`).toString()}`);\r\n            console.log(`X: ${monomial(exp_p).toString()}`);\r\n            const lt = nerdamer(`${lc(p, monomial(exp_p))}*${monomial(exp_p)}`).toString();\r\n\r\n            console.log(`NO HEMOS PODIDO DIVIDIR POR NADA, QUITAMOS LT: ${lt}`); \r\n            r = nerdamer(`${r} + ${lt}`).toString();\r\n            p = nerdamer(`${p} - ${lt}`).toString();\r\n        }\r\n    }\r\n\r\n    console.log(`Qs: ${q}`);\r\n    console.log(`R: ${r}`);\r\n\r\n    console.log(\"COMPROBANDO...\");\r\n\r\n    let mult = \"\";\r\n    q.forEach((qi, i) => {\r\n        mult += nerdamer(`(${qi})*(${dividers[i]})`).toString();\r\n        if(i<q.length-1)\r\n            mult += \"+\";\r\n    });\r\n\r\n    console.log(`q1f1 + ··· + qsfs = ${mult}`);\r\n    const check = nerdamer(`(${mult})-(${f}) + ${r}`).expand().toString();\r\n    console.log(`(${mult})-(${f}) + ${r} = ${check}`);\r\n    return [...q, r];\r\n}\r\n\r\n\r\nfunction PolynomialInput(props) {\r\n    return (\r\n        <TextField\r\n            sx={{ width: '100%' }}\r\n            value={props.val}\r\n            onChange={(e) => props.handleChange(e.target.value)}\r\n            id={props.label}\r\n            error={props.val === ''}\r\n            InputProps={{\r\n                startAdornment: (\r\n                    <InputAdornment position=\"start\">{props.label} = </InputAdornment>\r\n                ),\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default function GrobnerPage() {\r\n    const [dividendo, setDividendo] = useState(\"x^2*y + x*y^2 + y^2\");\r\n    const [divisores, setDivisores] = useState([\"y^2-1\", \"x*y-1\"]);\r\n\r\n    const handleDivisoresChange = (idx, val) => {\r\n        let newDivisores = [...divisores];\r\n        newDivisores[idx] = val;\r\n        setDivisores(newDivisores);\r\n    }\r\n\r\n    const handleDividendoChange = (val) => {\r\n        setDividendo(val);\r\n        lexify(val);\r\n    }\r\n\r\n    return <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n        spacing={10}\r\n        padding={2}\r\n    >\r\n        <Grid item xs={12}>\r\n        {/* Hola:{exp('2x^2 + y^3').toString()}\r\n        coefs: {nerdamer.coeffs('x^2 -99x^2+6x-9x^6+y^3+ xy', 'x').toString()   }\r\n        lc: {lc('9x^9+6y^8', 'y')} */}\r\n\r\n        AL ESCRIBIR POLINOMIOS INDICAR TODAS LAS MULTIPLICACIONES: NO xy, SINO x*y\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n            <PolynomialInput label={`f`} val={dividendo} handleChange={(v) => handleDividendoChange(v)} />\r\n            <Divider>DIVIDERS</Divider>\r\n            {divisores.map(function (divisor, idx) {\r\n                return (\r\n                    <div key={`dividerInput_${idx}`}>\r\n                        <Grid item xs={12}>\r\n                            <PolynomialInput label={`f${idx + 1}`} val={divisor} handleChange={(v) => handleDivisoresChange(idx, v)} />\r\n                        </Grid>\r\n                    </div>\r\n                );\r\n            })}\r\n\r\n            <Grid item>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    onClick={()=>division(dividendo,divisores)}\r\n                >\r\n                    Divide\r\n                </Button>\r\n\r\n            </Grid>\r\n\r\n        </Grid>\r\n        <Grid item xs={6}>TODO</Grid>\r\n    </Grid >;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}