{"version":3,"sources":["Shader.js","primitives.js","fragmentShader.js","FloatInput.js","Dropdown.js","GraphContext.js","CustomHandle.js","PrimitiveNode.js","BooleanNode.js","Graph.js","App.js","fragmentShaderMovable.js","index.js"],"names":["Shader","props","useEffect","shader","uniforms","style","ratio","fs","key","sdf","FloatInput","FormControl","sx","m","size","InputLabel","label","OutlinedInput","value","val","type","onChange","ev","handleChange","parseFloat","target","Dropdown","React","useState","open","setOpen","onClick","minWidth","Select","autoWidth","items","map","item","MenuItem","GraphContext","createContext","GraphProvider","Provider","CustomHandle","id","width","height","position","onConnect","params","Primitives","BooleanOperations","initialNodes","x","y","data","children","sdfs","nodeTypes","primitiveNode","primitive","setPrimitive","setSdf","showCanvas","setShowCanvas","input1","setInput1","input2","input3","sharedFunctions","useContext","updateNodeSdf","console","log","toFixed","className","connectSdf","source","color","margin","Button","variant","endIcon","booleanNode","operation","setOperation","operationSdf","setOperationSdf","length","inputs","Object","keys","join","left","updateBooleanPrimitive","onInit","reactFlowInstance","Graph","useNodesState","nodes","setNodes","onNodesChange","useEdgesState","edges","setEdges","onEdgesChange","setId","newSdf","nds","node","forEach","child","newSdfs","sourceId","targetId","sourceNode","find","n","useCallback","eds","addEdge","animated","markerEnd","MarkerType","Arrow","newChildren","push","tabIndex","onKeyDown","e","onEdgeClick","edge","filter","snapToGrid","fitView","gap","NavBarExample","Navbar","appearance","Header","Body","Nav","Item","eventKey","pullRight","icon","Icon","MainContent","Grid","fluid","Row","Col","xs","borderRight","layoutStyles","display","flexDirection","App","Content","flexGrow","Footer","Panel","bordered","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.37517f35.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport Ratio from \"react-ratio\";\r\nimport ShadertoyReact from \"shadertoy-react\";\r\n\r\nexport default function Shader(props) {\r\n  useEffect(() => {}, [props.shader, props.uniforms]);\r\n\r\n  return (\r\n    <div style={props.style}>\r\n      <Ratio ratio={1}>\r\n        <ShadertoyReact\r\n          fs={props.shader}\r\n          key={props.shader}\r\n          uniforms={props.uniforms}\r\n        />\r\n      </Ratio>\r\n    </div>\r\n  );\r\n}\r\n","export const primitives = () => `\r\n    float sphere( vec3 p, float s )\r\n    {\r\n    return length(p)-s;\r\n    }\r\n\r\n    float box( vec3 p, vec3 b )\r\n    {\r\n    vec3 q = abs(p) - b;\r\n    return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\r\n    }\r\n`","import { primitives } from \"./primitives\";\r\n\r\nexport const fs = (sdf) => {\r\n  return `\r\n  // https://thebookofshaders.com/03/?lan=es\r\n// https://thebookofshaders.com/03/\r\n// http://jamie-wong.com/2016/07/15/ray-marching-signed-distance-functions/#putting-it-all-together\r\n// https://www.shadertoy.com/view/llt3R4\r\n\r\n// camera\r\n// https://www.scratchapixel.com/lessons/3d-basic-rendering/introduction-to-ray-tracing/how-does-it-work\r\n// http://www.codinglabs.net/article_world_view_projection_matrix.aspx\r\n// https://iopscience.iop.org/article/10.1088/0031-9155/52/12/006/meta\r\n// https://www.ingebook.com/ib/NPcd/IB_BooksVis?cod_primaria=1000187&codigo_libro=6575\r\n\r\n#ifdef GL_ES\r\nprecision mediump float;\r\n#endif\r\n\r\nconst int AA = 3;\r\nconst int MAX_MARCHING_STEPS = 255;\r\nconst float EPSILON = 0.0001;\r\nconst float MIN_DIST = 0.0;\r\nconst float MAX_DIST = 100.0;\r\n\r\n${primitives()}\r\n\r\nstruct Material\r\n{\r\n    vec3 specular;\r\n    vec3 diffuse;\r\n    vec3 ambient;\r\n    float smoothness;\r\n};\r\n\r\nfloat map( in vec3 p )\r\n{\r\n    return ${sdf};\r\n}\r\n\r\nvec3 rayDirection(vec2 size, vec2 fragCoord) {\r\n    const float fov = 45.0;\r\n\r\n    vec2 xy = fragCoord - size / 2.0;\r\n    float z = size.y / tan(radians(fov) / 2.0);\r\n\r\n    return normalize(vec3(xy, -z));\r\n}\r\n\r\nvec3 normal(vec3 p) {\r\n    return normalize(vec3(\r\n        map(vec3(p.x + EPSILON, p.y, p.z)) - map(vec3(p.x - EPSILON, p.y, p.z)),\r\n        map(vec3(p.x, p.y + EPSILON, p.z)) - map(vec3(p.x, p.y - EPSILON, p.z)),\r\n        map(vec3(p.x, p.y, p.z  + EPSILON)) - map(vec3(p.x, p.y, p.z - EPSILON))\r\n    ));\r\n}\r\n\r\nvec3 lighting(vec3 p, vec3 n, vec3 eye, Material mat){\r\n    vec3 ambient = vec3(0.5);\r\n\r\n    vec3 lights_pos[2];\r\n    lights_pos[0] = vec3(4.0, 2.0, 2.0);\r\n    lights_pos[1] = vec3(-4.0, -2.0, -2.0);\r\n\r\n    vec3 lights_color[2];\r\n    lights_color[0] = vec3(1.0, 1.0, 1.0);\r\n    lights_color[1] = vec3(1.0, 1.0, 1.0);\r\n\r\n    vec3 Ip = mat.ambient * ambient;\r\n\r\n    for(int i=0; i<2; i++){\r\n        vec3 Lm = normalize(lights_pos[i] - p);\r\n        vec3 Rm = normalize(2.0*(dot(Lm,n))*n - Lm);    // reflect(-Lm, n)\r\n        vec3 V  = normalize(eye - p);\r\n\r\n        float LN = dot(Lm, n);\r\n        float RV = dot(Rm, V);\r\n\r\n        if (LN < 0.0)   // Light not visible\r\n            Ip += vec3(0.0, 0.0, 0.0);\r\n        else if (RV < 0.0)  // opposite direction as viewer, apply only diffuse\r\n            Ip += lights_color[i] * (mat.diffuse * LN);\r\n        else\r\n            Ip += lights_color[i] * (mat.diffuse*LN + mat.specular*pow(RV, mat.smoothness));\r\n    }\r\n\r\n    return Ip;\r\n}\r\n\r\nmat4 viewMatrix(vec3 eye, vec3 center, vec3 up) {\r\n    // Based on gluLookAt man page\r\n    vec3 f = normalize(center - eye);\r\n    vec3 s = normalize(cross(f, up));\r\n    vec3 u = cross(s, f);\r\n    return mat4(\r\n        vec4(s, 0.0),\r\n        vec4(u, 0.0),\r\n        vec4(-f, 0.0),\r\n        vec4(0.0, 0.0, 0.0, 1)\r\n    );\r\n}\r\n\r\nfloat clamp(float val){\r\n    if(val < 0.0)   return 0.0;\r\n    if(val >1.0)    return 1.0;\r\n\r\n    return val;\r\n}\r\n\r\nvoid main() {\r\n    Material mat_red = Material(\r\n        vec3(1.0, 1.0, 1.0),    // specular\r\n        vec3(color.xyz),        // diffuse\r\n        vec3(0.2),              // ambient\r\n        10.0                    // shiness\r\n    );\r\n    vec3 eye                    = vec3(10.0*cos(iTime), 1.0, 10.0*sin(iTime));\r\n    const vec3 backGroundColor  = vec3(0.7);\r\n\r\n    for( int m=0; m<AA; m++ ){\r\n        for( int n=0; n<AA; n++ ){\r\n            float depth = MIN_DIST;\r\n\r\n            // create view ray\r\n            vec3 ray = rayDirection(iResolution.xy, gl_FragCoord.xy);\r\n            mat4 viewToWorld = viewMatrix(eye, vec3(0.0, 0.0, 0.0), vec3(0.0, 1.0, 0.0));\r\n            vec3 worldDir = (viewToWorld * vec4(ray, 0.0)).xyz;\r\n\r\n            // raytracing\r\n            for (int i = 0; i < MAX_MARCHING_STEPS; i++) {\r\n                float dist = map(eye + depth * worldDir);\r\n                if (dist < EPSILON) {\r\n                    vec3 p = eye + depth * worldDir;\r\n                    vec3 n = normal(p);\r\n\r\n                    gl_FragColor =  vec4(lighting(p, n, eye, mat_red), 1.0);\r\n                    \r\n                    return;\r\n                }\r\n\r\n                depth += dist;\r\n\r\n                if (depth >= MAX_DIST) {\r\n                    gl_FragColor = vec4(backGroundColor.xyz, 1.0);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n`;\r\n};\r\n","import React from 'react';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\n\r\nexport default function FloatInput(props) {\r\n  return (\r\n    <FormControl sx={{ m: 1 }}size=\"small\">\r\n      <InputLabel>{props.label}</InputLabel>\r\n      <OutlinedInput\r\n        value={props.val}\r\n        type=\"number\"\r\n        onChange={(ev) => props.handleChange(parseFloat(ev.target.value))}\r\n        label={props.label}\r\n      />\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\n\r\nexport default function Dropdown(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <FormControl onClick={() => setOpen(!open)} sx={{ m: 1, minWidth: 80 }}>\r\n      <InputLabel>{props.label}</InputLabel>\r\n      <Select\r\n        value={props.value}\r\n        onChange={(ev) => props.onChange(ev.target.value)}\r\n        autoWidth\r\n        open={open}\r\n        label=\"Primitive\"\r\n      >\r\n        {props.items.map((item) => (\r\n          <MenuItem value={item}>{item}</MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from 'react';\r\nconst GraphContext = React.createContext({});\r\nexport const GraphProvider = GraphContext.Provider;\r\nexport default GraphContext;","import React from \"react\";\r\nimport { Handle } from \"react-flow-renderer\";\r\n\r\nexport default function CustomHandle(props) {\r\n  return (\r\n    <>\r\n    {props.type === \"source\" ?\r\n        <Handle\r\n        type=\"source\"\r\n        id={props.id}\r\n        style={{ ...props.style, width: \"12px\", height: \"12px\" }}\r\n        position=\"bottom\"\r\n        onConnect={(params) => props.onConnect(params)}\r\n        />\r\n        :\r\n        <Handle\r\n        type=\"target\"\r\n        id={props.id ? props.id : \"0\"}\r\n        style={{ ...props.style, width: \"12px\", height: \"12px\" }}\r\n        position=\"top\"\r\n        onConnect={(params) => props.onConnect(params)}\r\n        />\r\n    }\r\n    </>\r\n  );\r\n}\r\n","import React, {useContext} from \"react\";\r\nimport Shader from \"./Shader.js\";\r\nimport { fs } from \"./fragmentShader.js\";\r\nimport { useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\nimport FloatInput from \"./FloatInput.js\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport GraphContext from \"./GraphContext.js\";\r\nimport CustomHandle from \"./CustomHandle.js\";\r\n\r\nconst Primitives = {\r\n  Sphere: \"Sphere\",\r\n  Box: \"Box\",\r\n};\r\n\r\nexport default function PrimitiveNode({ data, id }) {\r\n  const [primitive, setPrimitive] = React.useState(Primitives.Sphere);\r\n  const [sdf, setSdf] = React.useState(data.sdf);\r\n  const [showCanvas, setShowCanvas] = React.useState(true);\r\n  const [input1, setInput1] = React.useState(1.0);\r\n  const [input2, setInput2] = React.useState(1.0);\r\n  const [input3, setInput3] = React.useState(1.0);\r\n\r\n  const sharedFunctions = useContext(GraphContext);\r\n\r\n  const handleChange = (newPrimitive, newSdf) => {\r\n    if (newPrimitive == Primitives.Sphere) {\r\n      console.log(\"YES\");\r\n    }\r\n    setPrimitive(newPrimitive);\r\n    setSdf(newSdf);\r\n  };\r\n\r\n  useEffect(() => {\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    sharedFunctions.updateNodeSdf(id, sdf);\r\n  }, [sdf]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"ACTUALIZADO SDF\");\r\n    if (primitive == Primitives.Sphere) {\r\n      setSdf(`sphere(p, ${input1.toFixed(4)})`);\r\n    } else if (primitive == Primitives.Box) {\r\n      setSdf(\r\n        `box(p, vec3(${input1.toFixed(4)}, ${input2.toFixed(\r\n          4\r\n        )}, ${input3.toFixed(4)}))`\r\n      );\r\n    }\r\n  }, [primitive, input1, input2, input3]);\r\n\r\n  return (\r\n    <div className=\"custom-node\">\r\n      <div className=\"custom-node-header\">Primitive</div>\r\n\r\n      <Dropdown value={primitive} onChange={setPrimitive} items={[Primitives.Sphere, Primitives.Box]} label=\"Primitives\"/> \r\n      <FloatInput val={input1} handleChange={setInput1} label=\"Radius\" />\r\n      {input1}\r\n      {id}\r\n      {data.sdf}\r\n      {\"CHILDREN: \"}\r\n      {data.children}\r\n\r\n      <CustomHandle type=\"source\" onConnect={(params) => sharedFunctions.connectSdf(params.source, params.target, params)}/>\r\n\r\n      {showCanvas ? (\r\n        <Shader\r\n          shader={fs(sdf)}\r\n          uniforms={{ color: { type: \"3fv\", value: [1.0, 1.0, 0.0] } }}\r\n          style={{ margin: \"10px\" }}\r\n        />\r\n      ) : null}\r\n\r\n      <Button\r\n        onClick={() => setShowCanvas(!showCanvas)}\r\n        variant=\"contained\"\r\n        className=\"custom-node-creater\"\r\n        size=\"small\"\r\n        endIcon={\r\n          showCanvas ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />\r\n        }\r\n      >\r\n        {showCanvas ? \"Hide canvas\" : \"Show canvas\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Handle } from \"react-flow-renderer\";\r\nimport Shader from \"./Shader\";\r\nimport { fs } from \"./fragmentShader\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport CustomHandle from \"./CustomHandle\";\r\n\r\nconst BooleanOperations = {\r\n  Union: \"Union\",\r\n  Difference: \"Difference\",\r\n  Intersection: \"Intersection\",\r\n};\r\n\r\nexport default function BooleanNode({ data, id }) {\r\n  const [operation, setOperation] = React.useState(BooleanOperations.Union);\r\n  const [operationSdf, setOperationSdf] = React.useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(`SE HAN MODIFICADO LOS SDF EN NODO BOOLEANO. AHORA HAY ${data.sdfs.length}`);\r\n    const inputs = `${Object.keys(data.sdfs).map(key => `${data.sdfs[key]}`).join(', ')}`;\r\n\r\n    if(operation===BooleanOperations.Union)\r\n      setOperationSdf(`min(${inputs})`)\r\n    else if(operation===BooleanOperations.Intersection)\r\n      setOperationSdf(`max(${inputs})`)\r\n    else if(operation===BooleanOperations.Difference)\r\n      setOperationSdf(`max(-${inputs})`)\r\n\r\n  }, [data, operation]);\r\n\r\n  return (\r\n    <div className=\"custom-node\">\r\n      <div className=\"custom-node-header\">Boolean</div>\r\n      {operationSdf}\r\n      <Dropdown\r\n        value={operation}\r\n        onChange={setOperation}\r\n        items={[\r\n          BooleanOperations.Union,\r\n          BooleanOperations.Difference,\r\n          BooleanOperations.Intersection,\r\n        ]}\r\n        label=\"Operation\"\r\n      />\r\n\r\n      <CustomHandle id={\"0\"} type=\"target\" onConnect={(params) => console.log(\"handle ss\", params)} style={{ left: \"30%\" }}/>\r\n      <CustomHandle id={\"1\"} type=\"target\" onConnect={(params) => data.updateBooleanPrimitive(params.source, params.target)} style={{ left: \"60%\" }}/>\r\n      <CustomHandle id={\"2\"} type=\"source\" onConnect={(params) => console.log(\"handle onsConnect\", params)} style={{ left: \"50%\" }}/>\r\n\r\n      {/* <Handle\r\n        type=\"target\"\r\n        id={\"0\"}\r\n        style={{ left: \"30%\" }}\r\n        position=\"top\"\r\n        onConnect={(params) => console.log(\"handle ss\", params)}\r\n      />\r\n      <Handle\r\n        type=\"target\"\r\n        id={\"1\"}\r\n        style={{ left: \"60%\" }}\r\n        position=\"top\"\r\n        onConnect={(params) =>\r\n          data.updateBooleanPrimitive(params.source, params.target)\r\n        }\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        id={2}\r\n        style={{ left: \"50%\" }}\r\n        position=\"bottom\"\r\n        onConnect={(params) => console.log(\"handle onsConnect\", params)}\r\n      /> */}\r\n\r\n      <Shader\r\n        shader={fs(`${operationSdf}`)}\r\n        uniforms={{ color: { type: \"3fv\", value: [1.0, 1.0, 0.0] } }}\r\n        style={{ margin: \"10px\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  useNodesState,\r\n  useEdgesState,\r\n  MarkerType,\r\n} from \"react-flow-renderer\";\r\nimport PrimitiveNode from \"./PrimitiveNode.js\";\r\nimport BooleanNode from \"./BooleanNode.js\";\r\n\r\nimport \"./styles.css\";\r\nimport { GraphProvider } from \"./GraphContext.js\";\r\n\r\nconst initialNodes = [\r\n  {\r\n    id: \"node-0\",\r\n    type: \"primitiveNode\",\r\n    position: { x: -100, y: 50 },\r\n    data: { sdf: \"sphere(1.0)\", children: [] },\r\n  },\r\n  {\r\n    id: \"node-1\",\r\n    type: \"primitiveNode\",\r\n    position: { x: 100, y: 50 },\r\n    data: { sdf: \"box(1.0, 1.0, 1.0)\", children: [] },\r\n  },\r\n  {\r\n    id: \"node-2\",\r\n    type: \"booleanNode\",\r\n    position: { x: 0, y: 550 },\r\n    data: { sdfs: {}, children: [] },\r\n  },\r\n];\r\n\r\nconst initialEdges = [];\r\n\r\nconst nodeTypes = { primitiveNode: PrimitiveNode, booleanNode: BooleanNode };\r\n\r\nconst onInit = (reactFlowInstance) =>\r\n  console.log(\"flow loaded:\", reactFlowInstance);\r\n\r\nexport default function Graph() {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [id, setId] = React.useState(3);\r\n\r\n  const updateNodeSdf = (id, newSdf) => {\r\n    console.log(\"ACTUALIZADO SDF\");\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === id) {\r\n          node.data = {\r\n            ...node.data,\r\n            sdf: newSdf,\r\n          };\r\n\r\n          node.data.children.forEach(child => {\r\n            nds.map((node) => {\r\n              if (node.id === child){\r\n                console.log(node);\r\n            var newSdfs = node.data.sdfs;\r\n            newSdfs[`${id}`] = newSdf;\r\n            console.log(\"HIJO: \" + child);\r\n            node.data = {\r\n               ...node.data,\r\n               sdfs: newSdfs\r\n              }\r\n              }\r\n            })\r\n            \r\n          });\r\n        }\r\n\r\n        return node;\r\n      })\r\n    );\r\n\r\n    \r\n  };\r\n\r\n  const connectSdf = (sourceId, targetId, params) => {\r\n    const sourceNode = nodes.find(n => n.id===sourceId);\r\n    var newSdfs = nodes.find(n => n.id===targetId).data.sdfs;\r\n    newSdfs[`${sourceId}`] = sourceNode.data.sdf;\r\n    \r\n    console.log(newSdfs);\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === targetId) {\r\n          console.log(\"FOUND\");\r\n          node.data = {\r\n            ...node.data,\r\n            sdfs: newSdfs,\r\n          };\r\n        }\r\n\r\n        onNodesChange([node]);\r\n        return node;\r\n      })\r\n    );\r\n  };\r\n\r\n  const sharedFunctions = {\r\n    updateNodeSdf,\r\n    connectSdf,\r\n  };\r\n\r\n  const onConnect = useCallback((params) => {\r\n    const sourceNode = nodes.find((n) => n.id === params.source);\r\n\r\n    setEdges((eds) =>\r\n      addEdge(\r\n        {\r\n          ...params,\r\n          animated: true,\r\n          markerEnd: { type: MarkerType.Arrow, color: \"#000\" },\r\n          data: {},\r\n        },\r\n        eds\r\n      )\r\n    );\r\n\r\n    var newChildren = nodes.find(n => n.id===params.target).data.children;\r\n    newChildren.push(params.target);\r\n\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === params.source) {\r\n          console.log(`AÑADIDO HIJO ${params.target} A ${params.source}`);\r\n          node.data = {\r\n             ...node.data,\r\n             children: newChildren,\r\n           };\r\n        }\r\n\r\n        onNodesChange([node]);\r\n        return node;\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"NODOS ACTUALIZADOS\");\r\n    console.log(nodes);\r\n  }, [nodes]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"NUEVO EDGE:\");\r\n    console.log(edges);\r\n  }, [edges]);\r\n\r\n  const newPrimitiveNode = () => {\r\n    setId(id + 1);\r\n    return {\r\n      id: `node-${id}`,\r\n      type: \"primitiveNode\",\r\n      position: { x: 0, y: 0 },\r\n      data: { sdf: \"sphere(1.0)\", children: [] }\r\n    };\r\n  };\r\n\r\n  const newBooleanNode = () => {\r\n    setId(id + 1);\r\n    return {\r\n      id: `node-${id}`,\r\n      type: \"booleanNode\",\r\n      position: { x: 0, y: 0 },\r\n      data: { sdfs: {}, children: [] }\r\n    };\r\n  };\r\n\r\n  const handleKey = (e) => {\r\n    // SPACE BAR\r\n    if (e.key === \"p\") {\r\n      const node = newPrimitiveNode();\r\n      nodes.push(node);\r\n\r\n      onNodesChange([node]); // Para actualizar\r\n    } else if (e.key === \"b\") {\r\n      const node = newBooleanNode();\r\n      nodes.push(node);\r\n\r\n      onNodesChange([node]); // Para actualizar\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }} tabIndex=\"0\" onKeyDown={handleKey}>\r\n      <GraphProvider value={sharedFunctions}>\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          // onDisconnect={onDisconnect}\r\n\r\n          nodeTypes={nodeTypes}\r\n          onInit={onInit}\r\n          onEdgeClick={(ev, edge) =>\r\n            setEdges(edges.filter((e) => e.id != edge.id))\r\n          }\r\n          snapToGrid={true}\r\n          fitView\r\n        >\r\n          <Background color=\"#aaa\" gap={10} />\r\n        </ReactFlow>\r\n      </GraphProvider>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\n\nimport {\n  Header,\n  Content,\n  Footer,\n  Navbar,\n  Nav,\n  Icon,\n  Panel,\n  Grid,\n  Row, Col,\n} from \"rsuite\";\n\nimport Graph from \"./Graph\";\nimport \"rsuite/dist/styles/rsuite-default.css\";\n\nimport \"./styles.css\";\nimport Shader from \"./Shader\";\nimport {fs} from \"./fragmentShaderMovable\";\n\nconst NavBarExample = () => {\n  return (\n    <Navbar appearance=\"inverse\">\n      <Navbar.Header>\n        <a className=\"navbar-brand logo\">3D Visualizer</a>\n      </Navbar.Header>\n      <Navbar.Body>\n        <Nav>\n          <Nav.Item eventKey=\"1\">Tab 1</Nav.Item>\n          <Nav.Item eventKey=\"2\">Tab 2</Nav.Item>\n          <Nav.Item eventKey=\"3\">Tab 3</Nav.Item>\n        </Nav>\n        <Nav pullRight>\n          <Nav.Item icon={<Icon icon=\"cog\" />}>Settings</Nav.Item>\n        </Nav>\n      </Navbar.Body>\n    </Navbar>\n  );\n};\n\n\nfunction MainContent(){ \n  return(\n    <>\n    <Grid fluid>\n      <Row>\n        <Col xs={6}>\n          <Shader \n            style={{height: \"100vh\"}}\n            shader={fs()} \n            uniforms={{ color: { type: \"3fv\", value: [1.0, 1.0, 0.0] } }}\n          />\n        </Col>\n        <Col xs={1}>\n          <div style={{borderRight: \"2px solid grey\",  height: \"100vh\"}} />\n        </Col>\n        <Col xs={17}>\n          {/* <ContextMenu/> */}\n          \n          <Graph/>\n        </Col>\n      </Row>\n      \n    </Grid>\n    </>\n  );\n}\n\nconst layoutStyles = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  height: \"100vh\"\n};\n\nexport default function App() {\n  return (\n    <div style={layoutStyles}>\n      <Header>\n        <NavBarExample />\n      </Header>\n      <Content style={{ flexGrow: 1 }}>\n        <MainContent />\n      </Content>\n      <Footer>\n        <Panel bordered>\n          <p>Daniel Zufrí Quesada</p>\n        </Panel>\n      </Footer>\n    </div>\n  );\n}\n","export const fs = (sdf) => {\r\n    return `\r\n    \r\n    // https://thebookofshaders.com/03/?lan=es\r\n  // https://thebookofshaders.com/03/\r\n  // http://jamie-wong.com/2016/07/15/ray-marching-signed-distance-functions/#putting-it-all-together\r\n  // https://www.shadertoy.com/view/llt3R4\r\n  \r\n  // camera\r\n  // https://www.scratchapixel.com/lessons/3d-basic-rendering/introduction-to-ray-tracing/how-does-it-work\r\n  // http://www.codinglabs.net/article_world_view_projection_matrix.aspx\r\n  // https://iopscience.iop.org/article/10.1088/0031-9155/52/12/006/meta\r\n  // https://www.ingebook.com/ib/NPcd/IB_BooksVis?cod_primaria=1000187&codigo_libro=6575\r\n  \r\n  #ifdef GL_ES\r\n  precision mediump float;\r\n  #endif\r\n  \r\n  const int AA = 3;\r\n  const int MAX_MARCHING_STEPS = 255;\r\n  const float EPSILON = 0.0001;\r\n  const float MIN_DIST = 0.0;\r\n  const float MAX_DIST = 100.0;\r\n\r\n  uniform bool leftClick;\r\n\r\n  struct Material\r\n  {\r\n      vec3 specular;\r\n      vec3 diffuse;\r\n      vec3 ambient;\r\n      float smoothness;\r\n  };\r\n  \r\n  float sdfCube(vec3 p, vec3 dim){\r\n      vec3 d = abs(p) - dim;\r\n  \r\n      float insideDistance = min(max(d.x, max(d.y, d.z)), 0.0);\r\n      float outsideDistance = length(max(d, 0.0));\r\n      \r\n      return insideDistance + outsideDistance;\r\n  }\r\n  \r\n  float map( in vec3 pos )\r\n  {\r\n      return  sdfCube(pos, vec3(1.0));\r\n  }\r\n  \r\n  \r\n  vec3 rayDirection(vec2 size, vec2 fragCoord) {\r\n      const float fov = 45.0;\r\n  \r\n      vec2 xy = fragCoord - size / 2.0;\r\n      float z = size.y / tan(radians(fov) / 2.0);\r\n  \r\n      return normalize(vec3(xy, -z));\r\n  }\r\n  \r\n  vec3 normal(vec3 p) {\r\n      return normalize(vec3(\r\n          map(vec3(p.x + EPSILON, p.y, p.z)) - map(vec3(p.x - EPSILON, p.y, p.z)),\r\n          map(vec3(p.x, p.y + EPSILON, p.z)) - map(vec3(p.x, p.y - EPSILON, p.z)),\r\n          map(vec3(p.x, p.y, p.z  + EPSILON)) - map(vec3(p.x, p.y, p.z - EPSILON))\r\n      ));\r\n  }\r\n  \r\n  vec3 lighting(vec3 p, vec3 n, vec3 eye, Material mat){\r\n      vec3 ambient = vec3(0.5);\r\n  \r\n      vec3 lights_pos[2];\r\n      lights_pos[0] = vec3(4.0, 2.0, 2.0);\r\n      lights_pos[1] = vec3(-4.0, -2.0, -2.0);\r\n  \r\n      vec3 lights_color[2];\r\n      lights_color[0] = vec3(1.0, 1.0, 1.0);\r\n      lights_color[1] = vec3(1.0, 1.0, 1.0);\r\n  \r\n      vec3 Ip = mat.ambient * ambient;\r\n  \r\n      for(int i=0; i<2; i++){\r\n          vec3 Lm = normalize(lights_pos[i] - p);\r\n          vec3 Rm = normalize(2.0*(dot(Lm,n))*n - Lm);    // reflect(-Lm, n)\r\n          vec3 V  = normalize(eye - p);\r\n  \r\n          float LN = dot(Lm, n);\r\n          float RV = dot(Rm, V);\r\n  \r\n          if (LN < 0.0)   // Light not visible\r\n              Ip += vec3(0.0, 0.0, 0.0);\r\n          else if (RV < 0.0)  // opposite direction as viewer, apply only diffuse\r\n              Ip += lights_color[i] * (mat.diffuse * LN);\r\n          else\r\n              Ip += lights_color[i] * (mat.diffuse*LN + mat.specular*pow(RV, mat.smoothness));\r\n      }\r\n  \r\n      return Ip;\r\n  }\r\n  \r\n  mat4 viewMatrix(vec3 eye, vec3 center, vec3 up) {\r\n      // Based on gluLookAt man page\r\n      vec3 f = normalize(center - eye);\r\n      vec3 s = normalize(cross(f, up));\r\n      vec3 u = cross(s, f);\r\n      return mat4(\r\n          vec4(s, 0.0),\r\n          vec4(u, 0.0),\r\n          vec4(-f, 0.0),\r\n          vec4(0.0, 0.0, 0.0, 1)\r\n      );\r\n  }\r\n  \r\n  void main() {\r\n      Material mat_red = Material(\r\n          vec3(1.0, 1.0, 1.0),    // specular\r\n          vec3(1.0, 1.0,0.0),        // diffuse\r\n          vec3(0.2),              // ambient\r\n          10.0                    // shiness\r\n      );\r\n      vec3 cameraPos                    = vec3(10.0, 1.0, 10.0);\r\n      const vec3 backGroundColor  = vec3(0.7);\r\n      vec2 mouseStartPos, mouseCurrPos;\r\n      vec2 mouse = iMouse.xy / iResolution.xy;\r\n\r\n      if(iMouse.z > 0.0){\r\n        \r\n        vec3 cameraAt \t= vec3(0.0);\r\n\r\n        float angleX = 6.28 * mouse.x;\r\n        float angleY =  mouse.y * 6.28 ;\r\n        cameraPos\t= 12.0 * (vec3(sin(angleX)*cos(angleY), sin(angleY), cos(angleX)*cos(angleY)));\r\n      }\r\n\r\n      for( int m=0; m<AA; m++ ){\r\n          for( int n=0; n<AA; n++ ){\r\n              float depth = MIN_DIST;\r\n  \r\n              // create view ray\r\n              vec3 ray = rayDirection(iResolution.xy, gl_FragCoord.xy);\r\n              mat4 viewToWorld = viewMatrix(cameraPos, vec3(0.0, 0.0, 0.0), vec3(0.0, 1.0, 0.0));\r\n              vec3 worldDir = (viewToWorld * vec4(ray, 0.0)).xyz;\r\n  \r\n              // raytracing\r\n              for (int i = 0; i < MAX_MARCHING_STEPS; i++) {\r\n                  float dist = map(cameraPos + depth * worldDir);\r\n                  if (dist < EPSILON) {\r\n                      vec3 p = cameraPos + depth * worldDir;\r\n                      vec3 n = normal(p);\r\n  \r\n                      gl_FragColor = vec4(lighting(p, n, cameraPos, mat_red), 1.0);\r\n                      return;\r\n                  }\r\n  \r\n                  depth += dist;\r\n  \r\n                  if (depth >= MAX_DIST) {\r\n                      gl_FragColor = vec4(backGroundColor.xyz, 1.0);\r\n                      return;\r\n                  }\r\n              }\r\n          }\r\n      }\r\n  }\r\n\r\n  \r\n  `;\r\n  };\r\n  ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n)\n"],"sourceRoot":""}