{"version":3,"sources":["Shader.js","defaultShader.js","primitives.js","fragmentShaderMovable.js","Dropdown.js","CustomHandle.js","GraphContext.js","CustomNode.js","FloatInput.js","PrimitiveNode.js","BooleanNode.js","CustomControls.js","Graph.js","ButtonEdge.js","App.js","index.js"],"names":["Shader","props","useEffect","shader","uniforms","useState","zoom","setZoom","style","timeout","wheelConfig","preventScroll","upHandler","e","downHandler","ratio","onWheel","console","log","fs","key","distance","type","value","sdf","Dropdown","React","open","setOpen","FormControl","onClick","sx","m","minWidth","InputLabel","label","Select","defaultValue","onChange","ev","target","autoWidth","items","map","item","MenuItem","CustomHandle","id","width","height","position","GraphContext","createContext","GraphProvider","Provider","CustomNode","showCanvas","setShowCanvas","sharedFunctions","useContext","updateNodeSdf","dropdownOptions","className","title","Object","keys","data","children","join","onChangeOption","onConnect","params","top","updateBooleanPrimitive","source","body","color","margin","Button","variant","size","endIcon","FloatInput","TextField","val","handleChange","parseFloat","placeholder","paddingLeft","InputProps","startAdornment","InputAdornment","backgroundColor","labelColor","padding","borderTopLeftRadius","theme","shape","borderRadius","borderBottomLeftRadius","Primitives","Sphere","Box","Torus","Cylinder","BooleanOperations","Union","Difference","Intersection","CustomControls","save","load","nodeTypes","primitiveNode","primitive","setPrimitive","setSdf","inputs","setInputs","inputLabels","setInputLabels","inputsActive","setInputsActive","prepareInputs","label1","label2","label3","toFixed","values","newVal","booleanNode","operation","setOperation","length","edgeTypes","buttonEdge","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","edgePath","getBezierPath","getEdgeCenter","edgeCenterX","edgeCenterY","d","x","foreignObjectSize","y","requiredExtensions","removeEdge","initialNodes","dragHandle","Graph","useNodesState","nodes","setNodes","onNodesChange","useEdgesState","edges","setEdges","onEdgesChange","rfInstance","setRfInstance","setId","newSdf","parent","nodesCopy","find","node","child","newInputs","edgeId","edge","newEdges","filter","nds","newChildren","c","onLoad","flow","JSON","parse","localStorage","getItem","viewport","tabIndex","onKeyDown","toLowerCase","xPos","yPos","nodeId","newPrimitiveNode","push","newBooleanNode","sourceNode","n","eds","addEdge","animated","markerEnd","MarkerType","Arrow","onInit","snapToGrid","fitView","gap","toObject","setItem","stringify","NavBarExample","Navbar","appearance","Header","Body","Nav","Item","eventKey","pullRight","icon","Icon","MainContent","Grid","fluid","Row","Col","xs","borderRight","layoutStyles","display","flexDirection","App","flexGrow","Footer","Panel","bordered","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3863ad41.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport Ratio from \"react-ratio\";\r\nimport ShadertoyReact from \"shadertoy-react\";\r\nimport { defaultShader } from \"./defaultShader\";\r\nimport ReactScrollWheelHandler from \"react-scroll-wheel-handler\";\r\n\r\nexport default function Shader(props) {\r\n  useEffect(() => {}, [props.shader, props.uniforms]);\r\n\r\n  const [zoom, setZoom] = useState(10.0);\r\n  const zoomIncrement = 0.5;\r\n  return (\r\n    <div style={props.style}  >\r\n      <ReactScrollWheelHandler\r\n      timeout=\"0\"\r\n      wheelConfig= {[100, 1000, 0.05]}\r\n      preventScroll=\"true \"\r\n  upHandler={(e) => setZoom(zoom + zoomIncrement)}\r\n  downHandler={(e) => setZoom(zoom - zoomIncrement)}\r\n>\r\n      <Ratio ratio={1} onWheel={(e) => console.log(e)}>\r\n        <ShadertoyReact\r\n          fs={props.shader ? props.shader : defaultShader()}\r\n          key={props.shader}\r\n          uniforms={{\r\n            ...props.uniforms, \r\n            distance: { type: \"1f\"  , value: zoom}\r\n          }}\r\n        />\r\n      </Ratio>\r\n      </ReactScrollWheelHandler>\r\n    </div>\r\n  );\r\n}\r\n","export const defaultShader = () => `\r\n#define T_MAX 30.0\r\n\r\nstruct point_light\r\n{\r\n    vec3 p;\r\n    vec3 i;\r\n};\r\n\r\nfloat sdBox( vec3 p, vec3 b )\r\n{\r\n  vec3 d = abs(p) - b;\r\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\r\n}\r\n\r\nvec3 opRep( in vec3 p, in vec3 c)\r\n{\r\n    vec3 q = mod(p,c)-0.5*c;\r\n    return q;\r\n}\r\n\r\nfloat sdf(in vec3 p, out int matid)\r\n{\r\n    float sphere_sdf = length(p - vec3(0, 1, 0)) - 1.0;\r\n    float box_sdf = sdBox(p - vec3(0, 1, 0), vec3(0.8));\r\n    float obj_sdf = max(-sphere_sdf, box_sdf);\r\n    float floor_sdf = abs(p.y);\r\n    \r\n    float sdf = min(obj_sdf, floor_sdf);\r\n    if (sdf == obj_sdf)\r\n    {\r\n        matid = 1;\r\n    }\r\n    else\r\n    {\r\n        matid = 0;\r\n    }\r\n    \r\n    return sdf;\r\n}\r\n\r\nvec3 sdf_n(in vec3 p)\r\n{\r\n    vec3 res = vec3(0);\r\n    \r\n    int ignored;\r\n    res.x = sdf(p + vec3(0.001, 0, 0), ignored) - sdf(p, ignored);\r\n    res.y = sdf(p + vec3(0, 0.001, 0), ignored) - sdf(p, ignored);\r\n    res.z = sdf(p + vec3(0, 0, 0.001), ignored) - sdf(p, ignored);\r\n    \r\n    return normalize(res);\r\n}\r\n\r\nfloat intersect(in vec3 ro, in vec3 rd, out int matid)\r\n{\r\n\tfloat t = 0.0;\r\n    matid = -1;\r\n    for (int i = 0; i < 256; ++i)\r\n    {\r\n        if (t > T_MAX)\r\n        {\r\n            break;\r\n        }\r\n        \r\n        int curr_matid = -1;\r\n\t\tfloat d = sdf(ro + t*rd, curr_matid);\r\n        if (d < 0.0001)\r\n        {\r\n            matid = curr_matid;\r\n            break;\r\n        }\r\n        t += d;\r\n    }\r\n    return t;\r\n}\r\n\r\nfloat dir_shadow(in vec3 p, in vec3 l)\r\n{\r\n    float t = 0.15;\r\n    float t_max = 20.0;\r\n    \r\n    float res = 1.0;\r\n    for (int i = 0; i < 256; ++i)\r\n    {\r\n        if (t > t_max) break;\r\n        \r\n        int ignored;\r\n        float d = sdf(p + t*l, ignored);\r\n        if (d < 0.01)\r\n        {\r\n            return 0.0;\r\n        }\r\n        t += d;\r\n        res = min(res, 8.0 * d / t);\r\n    }\r\n    \r\n    return res;\r\n}\r\n\r\nfloat point_shadow(in vec3 p, in vec3 light_p)\r\n{\r\n    vec3 l = normalize(light_p - p);\r\n        \r\n    float t = 0.15;\r\n    float t_max = distance(light_p, p);\r\n    \r\n    float res = 1.0;\r\n    for (int i = 0; i < 256; ++i)\r\n    {\r\n        if (t > t_max) break;\r\n        \r\n        int ignored;\r\n        float d = sdf(p + t*l, ignored);\r\n        if (d < 0.01)\r\n        {\r\n            return 0.0;\r\n        }\r\n        t += d;\r\n        res = min(res, 64.0 * d / t);\r\n    }\r\n    \r\n    return res;\r\n}\r\n\r\nfloat ao(in vec3 p, in vec3 n)\r\n{\r\n    float e = 0.1;\r\n    float res = 0.0;\r\n    \r\n#define AO_ITER 5\r\n    \r\n    int ignored;\r\n    float weight = 0.5;\r\n    for (int i = 1; i <= AO_ITER; ++i)\r\n    {\r\n        float d = e * float(i);\r\n        res += weight * (1.0 - (d - sdf(p + d * n, ignored)));\r\n        weight *= 0.5;\r\n    }\r\n    \r\n    return res;\r\n}\r\n\r\nvec3 render(in vec2 fragCoord)\r\n{\r\n   \tvec2 uv = 2.0 * fragCoord / iResolution.xy - 1.0;\r\n    uv.x *= iResolution.x / iResolution.y;\r\n     \r\n    float cam_d = 3.0;\r\n    float time = 0.6;\r\n    vec3 ro = vec3(cam_d*sin(time), 2.5, cam_d*cos(time));\r\n    vec3 at = vec3(0, 1, 0);\r\n    vec3 cam_z = normalize(at - ro);\r\n    vec3 cam_x = normalize(cross(vec3(0,1,0), cam_z));\r\n    vec3 cam_y = cross(cam_z, cam_x);\r\n    vec3 rd = normalize(uv.x * cam_x + uv.y * cam_y + 1.73 * cam_z);\r\n\t\r\n    vec3 sky = vec3(0.02);\r\n    vec3 col = vec3(0);\r\n    \r\n    int matid = -1;\r\n    float t = intersect(ro, rd, matid);\r\n    if (matid != -1)\r\n    { \r\n        vec3 p = ro + t*rd;\r\n        vec3 n = sdf_n(p);\r\n        \r\n#define PLIGHT_COUNT 1 \r\n        point_light plights[PLIGHT_COUNT];\r\n        plights[0] = point_light(vec3(2, 1, 1), vec3(20));\r\n\r\n        vec3 direct_light = vec3(0);\r\n        for (int plight_index = 0; plight_index < PLIGHT_COUNT; ++plight_index)\r\n        {\r\n            vec3 light_i = plights[plight_index].i;\r\n            vec3 light_p = plights[plight_index].p;\r\n        \tfloat light_r = dot(light_p - p, light_p - p);\r\n        \tvec3 l = normalize(light_p - p);\r\n        \r\n        \tdirect_light += point_shadow(p, light_p) * max(0.0, dot(n, l)) * light_i / (light_r * light_r);\r\n        }\r\n\r\n        vec3 indirect_light = ao(p, n) * sky;\r\n        \r\n        vec3 albedo = vec3(0.9);      \r\n\t\tcol = albedo * (0.7 * direct_light + indirect_light);\r\n        \r\n        col = mix(col, vec3(0), clamp(pow(t / T_MAX, 2.0), 0.0, 1.0));\r\n    }\r\n    \r\n    return col;\r\n}\r\n\r\nvec3 tonemap(in vec3 col)\r\n{\r\n    return col / (1.0 + col);\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n#if 0\r\n    vec3 col = tonemap(render(fragCoord));\r\n#else\r\n    vec3 col = vec3(0);\r\n    col += tonemap(render(fragCoord + vec2(0.25, 0.25)));\r\n    col += tonemap(render(fragCoord + vec2(0.25, -0.25)));\r\n    col += tonemap(render(fragCoord + vec2(-0.25, -0.25)));\r\n    col += tonemap(render(fragCoord + vec2(-0.25, 0.25)));\r\n    col /= 4.0;\r\n#endif\r\n    \r\n    col = sqrt(col);\r\n    fragColor = vec4(col, 1.0);\r\n}\r\n`;\r\n","export const primitives = () => `\r\n    float sphere( vec3 p, float radius )\r\n    {\r\n    return length(p)-radius;\r\n    }\r\n\r\n    float box( vec3 p, vec3 size )\r\n    {\r\n    vec3 q = abs(p) - size;\r\n    return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\r\n    }\r\n\r\n    float torus( vec3 p, vec2 size )\r\n    {\r\n    vec2 q = vec2(length(p.xz)-size.x,p.y);\r\n    return length(q)-size.y;\r\n    }\r\n\r\n    float cylinder( vec3 p, float h, float r )\r\n    {\r\n    vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\r\n    return min(max(d.x,d.y),0.0) + length(max(d,0.0));\r\n    }\r\n\r\n    float line(in vec3 p, in vec3 start, in vec3 end, in float thickness) {\r\n        vec3 ba = end - start;\r\n        vec3 pa = p - start;\r\n        float h = clamp(dot(pa, ba) / dot(ba, ba), 0., 1.);\r\n        return length(pa - h * ba) - thickness;\r\n    }\r\n\r\n`","import { primitives } from \"./primitives\";\r\n\r\nexport const fs = (sdf) => {\r\n  return `\r\n    \r\n    // https://thebookofshaders.com/03/?lan=es\r\n  // https://thebookofshaders.com/03/\r\n  // http://jamie-wong.com/2016/07/15/ray-marching-signed-distance-functions/#putting-it-all-together\r\n  // https://www.shadertoy.com/view/llt3R4\r\n  \r\n  // camera\r\n  // https://www.scratchapixel.com/lessons/3d-basic-rendering/introduction-to-ray-tracing/how-does-it-work\r\n  // http://www.codinglabs.net/article_world_view_projection_matrix.aspx\r\n  // https://iopscience.iop.org/article/10.1088/0031-9155/52/12/006/meta\r\n  // https://www.ingebook.com/ib/NPcd/IB_BooksVis?cod_primaria=1000187&codigo_libro=6575\r\n  \r\n  #ifdef GL_ES\r\n  precision mediump float;\r\n  #endif\r\n  \r\n  const int AA = 3;\r\n  const int MAX_MARCHING_STEPS = 255;\r\n  const float EPSILON = 0.0001;\r\n  const float MIN_DIST = 0.0;\r\n  const float MAX_DIST = 100.0;\r\n\r\n  vec3 cameraPos                    = vec3(10.0, 1.0, 10.0);\r\n  ${primitives()}\r\n\r\n  struct Material\r\n  {\r\n      vec3 specular;\r\n      vec3 diffuse;\r\n      vec3 ambient;\r\n      float smoothness;\r\n  };\r\n  \r\n  float map( in vec3 p )\r\n  {\r\n    return ${sdf};\r\n  }\r\n  \r\n  \r\n  vec3 rayDirection(vec2 size, vec2 fragCoord) {\r\n      const float fov = 45.0;\r\n  \r\n      vec2 xy = fragCoord - size / 2.0;\r\n      float z = size.y / tan(radians(fov) / 2.0);\r\n  \r\n      return normalize(vec3(xy, -z));\r\n  }\r\n  \r\n  vec3 normal(vec3 p) {\r\n      return normalize(vec3(\r\n          map(vec3(p.x + EPSILON, p.y, p.z)) - map(vec3(p.x - EPSILON, p.y, p.z)),\r\n          map(vec3(p.x, p.y + EPSILON, p.z)) - map(vec3(p.x, p.y - EPSILON, p.z)),\r\n          map(vec3(p.x, p.y, p.z  + EPSILON)) - map(vec3(p.x, p.y, p.z - EPSILON))\r\n      ));\r\n  }\r\n  \r\n  vec3 lighting(vec3 p, vec3 n, vec3 eye, Material mat){\r\n      vec3 ambient = vec3(0.5);\r\n  \r\n      vec3 lights_pos[2];\r\n      lights_pos[0] = vec3(4.0, 2.0, 2.0);\r\n      lights_pos[1] = vec3(-4.0, -2.0, -2.0);\r\n  \r\n      vec3 lights_color[2];\r\n      lights_color[0] = vec3(1.0, 1.0, 1.0);\r\n      lights_color[1] = vec3(1.0, 1.0, 1.0);\r\n  \r\n      vec3 Ip = mat.ambient * ambient;\r\n  \r\n      for(int i=0; i<2; i++){\r\n          vec3 Lm = normalize(lights_pos[i] - p);\r\n          vec3 Rm = normalize(2.0*(dot(Lm,n))*n - Lm);    // reflect(-Lm, n)\r\n          vec3 V  = normalize(eye - p);\r\n  \r\n          float LN = dot(Lm, n);\r\n          float RV = dot(Rm, V);\r\n  \r\n          if (LN < 0.0)   // Light not visible\r\n              Ip += vec3(0.0, 0.0, 0.0);\r\n          else if (RV < 0.0)  // opposite direction as viewer, apply only diffuse\r\n              Ip += lights_color[i] * (mat.diffuse * LN);\r\n          else\r\n              Ip += lights_color[i] * (mat.diffuse*LN + mat.specular*pow(RV, mat.smoothness));\r\n      }\r\n  \r\n      return Ip;\r\n  }\r\n  \r\n  mat4 viewMatrix(vec3 eye, vec3 center, vec3 up) {\r\n      // Based on gluLookAt man page\r\n      vec3 f = normalize(center - eye);\r\n      vec3 s = normalize(cross(f, up));\r\n      vec3 u = cross(s, f);\r\n      return mat4(\r\n          vec4(s, 0.0),\r\n          vec4(u, 0.0),\r\n          vec4(-f, 0.0),\r\n          vec4(0.0, 0.0, 0.0, 1)\r\n      );\r\n  }\r\n  \r\n  float clamp(float val){\r\n    if(val < 0.0)   return 0.0;\r\n    if(val >1.0)    return 1.0;\r\n\r\n    return val;\r\n}\r\n\r\n  void main() {\r\n      Material mat_yellow = Material(\r\n          vec3(1.0, 1.0, 1.0),    // specular\r\n          vec3(1.0, 1.0,0.0),        // diffuse\r\n          vec3(0.2),              // ambient\r\n          10.0                    // shiness\r\n      );\r\n      \r\n      const vec3 backGroundColor  = vec3(0.7);\r\n      vec2 mouseStartPos, mouseCurrPos;\r\n      vec2 mouse = iMouse.xy / iResolution.xy;\r\n\r\n      if(iMouse.z > 0.0){\r\n        \r\n        vec3 cameraAt \t= vec3(0.0);\r\n\r\n        float angleX = 6.28 * mouse.x;\r\n        float angleY =  mouse.y * 6.28 ;\r\n        cameraPos\t= distance * (vec3(sin(angleX)*cos(angleY), sin(angleY), cos(angleX)*cos(angleY)));\r\n      }\r\n\r\n      \r\n\r\n      for( int m=0; m<AA; m++ ){\r\n          for( int n=0; n<AA; n++ ){\r\n              float depth = MIN_DIST;\r\n  \r\n              // create view ray\r\n              vec3 ray = rayDirection(iResolution.xy, gl_FragCoord.xy);\r\n              mat4 viewToWorld = viewMatrix(cameraPos, vec3(0.0, 0.0, 0.0), vec3(0.0, 1.0, 0.0));\r\n              vec3 worldDir = (viewToWorld * vec4(ray, 0.0)).xyz;\r\n  \r\n              // raytracing\r\n              for (int i = 0; i < MAX_MARCHING_STEPS; i++) {\r\n                  float dist = map(cameraPos + depth * worldDir);\r\n                  if (dist < EPSILON) {\r\n                      vec3 p = cameraPos + depth * worldDir;\r\n                      vec3 n = normal(p);\r\n  \r\n                      gl_FragColor = vec4(lighting(p, n, cameraPos, mat_yellow), 1.0);\r\n                      return;\r\n                  }\r\n  \r\n                  depth += dist;\r\n  \r\n                  if (depth >= MAX_DIST) {\r\n                      gl_FragColor = vec4(backGroundColor.xyz, 1.0);\r\n                      return;\r\n                  }\r\n              }\r\n          }\r\n      }\r\n  }\r\n\r\n  \r\n  `;\r\n};\r\n","import React from \"react\";\r\n\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\n\r\nexport default function Dropdown(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <FormControl onClick={() => setOpen(!open)} sx={{ m: 1, minWidth: 80 }}>\r\n      <InputLabel>{props.label}</InputLabel>\r\n      <Select\r\n        defaultValue={props.defaultValue}\r\n        value={props.value}\r\n        onChange={(ev) => props.onChange(ev.target.value)}\r\n        autoWidth\r\n        open={open}\r\n        label=\"Primitive\"\r\n      >\r\n        {props.items.map((item) => (\r\n          <MenuItem key={item} value={item}>\r\n            {item}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Handle } from \"react-flow-renderer\";\r\n\r\nexport default function CustomHandle(props) {\r\n  return (\r\n    <>\r\n    {props.type === \"source\" ?\r\n        <Handle\r\n        type=\"source\"\r\n        id={props.id}\r\n        style={{ ...props.style, width: \"12px\", height: \"12px\" }}\r\n        position=\"right\"\r\n        />\r\n        :\r\n        <Handle\r\n        type=\"target\"\r\n        id={props.id ? props.id : \"0\"}\r\n        style={{ ...props.style, width: \"12px\", height: \"12px\" }}\r\n        position=\"left\"\r\n        />\r\n    }\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nconst GraphContext = React.createContext({});\r\nexport const GraphProvider = GraphContext.Provider;\r\nexport default GraphContext;","import React, { useEffect, useContext } from \"react\";\r\nimport Shader from \"./Shader\";\r\nimport { fs } from \"./fragmentShaderMovable\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport CustomHandle from \"./CustomHandle\";\r\nimport GraphContext from \"./GraphContext.js\";\r\nimport Button from \"@mui/material/Button\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\n\r\n\r\nexport default function CustomNode(props) {\r\n  const [showCanvas, setShowCanvas] = React.useState(false);\r\n\r\n  const sharedFunctions = useContext(GraphContext);\r\n\r\n  useEffect(() => {\r\n    console.log(`SDF DE ${props.id} MODIFICADO`);\r\n    sharedFunctions.updateNodeSdf(props.id, props.sdf);\r\n    console.log(props.dropdownOptions[0]);\r\n  }, [props.sdf]);\r\n\r\n  return (\r\n    <div className=\"custom-node\">\r\n      <div className=\"custom-node-header\">{props.title}</div>\r\n      <p>{`ID: ${props.id}`}</p>\r\n      <p>\r\n        CHILDREN:{\" \"}\r\n        {Object.keys(props.data.children)\r\n          .map((key) => `${props.data.children[key]}`)\r\n          .join(\", \")}\r\n      </p>\r\n      <p>{`SDF: ${props.sdf}`}</p>\r\n      {props.dropdownOptions ? (\r\n        <Dropdown\r\n          defaultValue={props.dropdownOptions[0]}\r\n          onChange={props.onChangeOption}\r\n          items={props.dropdownOptions}\r\n          label={props.title}\r\n        />\r\n      ) : null}\r\n\r\n      <CustomHandle\r\n        id={\"0\"}\r\n        type=\"target\"\r\n        onConnect={(params) => console.log(\"handle ss\", params)}\r\n        style={{ top: \"45%\" }}\r\n      />\r\n      <CustomHandle\r\n        id={\"1\"}\r\n        type=\"target\"\r\n        onConnect={(params) =>\r\n          props.data.updateBooleanPrimitive(params.source, params.target)\r\n        }\r\n        style={{ top: \"55%\" }}\r\n      />\r\n      <CustomHandle\r\n        id={\"2\"}\r\n        type=\"source\"\r\n        onConnect={(params) => console.log(\"handle onsConnect\", params)}\r\n        style={{ top: \"50%\" }}\r\n      />\r\n\r\n        {props.body}\r\n      {showCanvas ? (\r\n        <Shader\r\n          shader={fs(props.sdf)}\r\n          uniforms={{ \r\n            color:    { type: \"3fv\" , value: [1.0, 1.0, 0.0] },\r\n            \r\n           }}\r\n          style={{ margin: \"10px\", height:\"100%\" }}\r\n        />\r\n      ) : null}\r\n\r\n      <Button\r\n        onClick={() => setShowCanvas(!showCanvas)}\r\n        variant=\"contained\"\r\n        className=\"custom-node-creater\"\r\n        size=\"small\"\r\n        endIcon={\r\n          showCanvas ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />\r\n        }\r\n      >\r\n        {showCanvas ? \"Hide canvas\" : \"Show canvas\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\n\r\nexport default function FloatInput(props) {\r\n  return (\r\n    \r\n    <TextField\r\n      value={props.val}\r\n        type=\"number\"\r\n        onChange={(ev) => props.handleChange(parseFloat(ev.target.value))}\r\n          placeholder={props.label}\r\n          sx={{\r\n            '& .MuiOutlinedInput-root': {\r\n              paddingLeft: 0,\r\n              m:1,\r\n              height:\"30px\"\r\n            },\r\n          }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment\r\n                sx={{\r\n                  backgroundColor: props.labelColor ? props.labelColor : \"gray\",\r\n                  padding: '15px 14px',\r\n                  borderTopLeftRadius: (theme) => theme.shape.borderRadius + 'px',\r\n                  borderBottomLeftRadius: (theme) => theme.shape.borderRadius + 'px',\r\n                }}\r\n                position=\"start\"\r\n              >\r\n                {props.label}\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport CustomNode from \"./CustomNode\";\r\nimport FloatInput from \"./FloatInput.js\";\r\n\r\nconst Primitives = {\r\n  Sphere: \"Sphere\",\r\n  Box: \"Box\",\r\n  Torus: \"Torus\",\r\n  Cylinder: \"Cylinder\",\r\n};\r\n\r\nexport default function PrimitiveNode({ data, id }) {\r\n  const [primitive, setPrimitive] = React.useState(Primitives.Sphere);\r\n  const [sdf, setSdf] = React.useState(\"\");\r\n  const [inputs, setInputs] = React.useState([1.0, 1.0, 1.0]);\r\n  const [inputLabels, setInputLabels] = React.useState([\"Radius\", \"\", \"\"]);\r\n  const [inputsActive, setInputsActive] = React.useState([true, false, false]);\r\n\r\n  const prepareInputs = (label1, label2 = \"\", label3 = \"\") => {\r\n    setInputLabels([label1, label2, label3]);\r\n    setInputsActive([label1, label2, label3]);\r\n  };\r\n  useEffect(() => {\r\n    console.log(\"ACTUALIZADO SDF\");\r\n    if (primitive == Primitives.Sphere) {\r\n      setSdf(`sphere(p, ${inputs[0].toFixed(4)})`);\r\n      prepareInputs(\"radius\");\r\n    } else if (primitive == Primitives.Box) {\r\n      setSdf(\r\n        `box(p, vec3(\r\n          ${inputs[0].toFixed(4)}, \r\n          ${inputs[1].toFixed(4)}, \r\n          ${inputs[2].toFixed(4)}\r\n          )\r\n        )`\r\n      );\r\n      prepareInputs(\"sx\", \"sy\", \"sz\");\r\n    } else if (primitive == Primitives.Torus) {\r\n      setSdf(\r\n        `torus(p, vec2(\r\n          ${inputs[0].toFixed(4)}, \r\n          ${inputs[1].toFixed(4)}\r\n          )\r\n        )`\r\n      );\r\n      prepareInputs(\"hole\", \"thickness\");\r\n    } else if (primitive == Primitives.Cylinder) {\r\n      setSdf(\r\n        `cylinder(p, \r\n          ${inputs[0].toFixed(4)}, \r\n          ${inputs[1].toFixed(4)}\r\n        )`\r\n      );\r\n      prepareInputs(\"height\", \"radius\");\r\n    }\r\n  }, [primitive, inputs]);\r\n\r\n  return (\r\n    <CustomNode\r\n      title={\"!Primitive\"}\r\n      id={id}\r\n      data={data}\r\n      dropdownOptions={Object.values(Primitives)}\r\n      body={\r\n        <>\r\n          {inputsActive[0] ? (\r\n            <FloatInput\r\n              val={inputs[0]}\r\n              handleChange={(newVal) =>\r\n                setInputs([newVal, inputs[1], inputs[2]])\r\n              }\r\n              label={inputLabels[0]}\r\n            />\r\n          ) : null}\r\n          {inputsActive[1] ? (\r\n            <FloatInput\r\n              val={inputs[1]}\r\n              handleChange={(newVal) =>\r\n                setInputs([inputs[0], newVal, inputs[2]])\r\n              }\r\n              label={inputLabels[1]}\r\n            />\r\n          ) : null}\r\n          {inputsActive[2] ? (\r\n            <FloatInput\r\n              val={inputs[2]}\r\n              handleChange={(newVal) =>\r\n                setInputs([inputs[0], inputs[1], newVal])\r\n              }\r\n              label={inputLabels[2]}\r\n            />\r\n          ) : null}\r\n        </>\r\n      }\r\n      onChangeOption={setPrimitive}\r\n      sdf={sdf}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport CustomNode from \"./CustomNode\";\r\n\r\nconst BooleanOperations = {\r\n    Union: \"Union\",\r\n    Difference: \"Difference\",\r\n    Intersection: \"Intersection\",\r\n  };\r\n  \r\n  export default function BooleanNode({ data, id }) {\r\n    const [operation, setOperation] = React.useState(BooleanOperations.Union);\r\n    const [sdf, setSdf] = React.useState(\"\");\r\n  \r\n    useEffect(() => {\r\n      console.log(\r\n        `SE HAN MODIFICADO LOS SDF EN NODO BOOLEANO. AHORA HAY ${\r\n          Object.keys(data.inputs).length\r\n        }`\r\n      );\r\n      const inputs = `${Object.keys(data.inputs)\r\n        .map((key) => `${data.inputs[key]}`)\r\n        .join(\", \")}`;\r\n      console.log(inputs);\r\n      if (operation === BooleanOperations.Union) setSdf(`min(${inputs})`);\r\n      else if (operation === BooleanOperations.Intersection)\r\n        setSdf(`max(${inputs})`);\r\n      else if (operation === BooleanOperations.Difference)\r\n        setSdf(`max(-${inputs})`);\r\n    }, [data, operation]);\r\n  \r\n    return (\r\n      <CustomNode\r\n      title={\"!Boolean Operator\"}\r\n        id={id}\r\n        data={data}\r\n        dropdownOptions={Object.values(BooleanOperations)}\r\n        onChangeOption={setOperation}\r\n        sdf={sdf}\r\n      />\r\n    );\r\n  }","import React from 'react';\r\nimport { Controls, ControlButton } from 'react-flow-renderer';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport FileOpenIcon from '@mui/icons-material/FileOpen';\r\n\r\nexport default function CustomControls(props) {\r\n  return (\r\n    <Controls>\r\n      <ControlButton onClick={() => props.save()}>\r\n        <SaveIcon />\r\n      </ControlButton>\r\n      <ControlButton onClick={() => props.load()}>\r\n        <FileOpenIcon />\r\n      </ControlButton>\r\n    </Controls>\r\n  );\r\n}","import React, {useState} from \"react\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  Background,\r\n  useNodesState,\r\n  useEdgesState,\r\n  MarkerType,\r\n} from \"react-flow-renderer\";\r\nimport PrimitiveNode from \"./PrimitiveNode.js\";\r\nimport BooleanNode from \"./BooleanNode.js\";\r\nimport ButtonEdge from \"./ButtonEdge\";\r\nimport ShaderNode from \"./ShaderNode.js\";\r\nimport TestNode from \"./TestNode.js\";\r\nimport CustomControls from \"./CustomControls.js\";\r\nimport \"./styles.css\";\r\nimport { GraphProvider } from \"./GraphContext.js\";\r\n\r\nconst flowKey = \"savedGraph\";\r\nconst nodeTypes = { primitiveNode: PrimitiveNode, booleanNode: BooleanNode };\r\nconst edgeTypes = { buttonEdge: ButtonEdge };\r\n\r\nconst initialNodes = [\r\n  {\r\n    id: `prim-0`,\r\n    type: \"primitiveNode\",\r\n    position: { x: -50, y: -150 },\r\n    dragHandle: \".custom-node-header\",\r\n    data: { inputs: {}, sdf: \"\", children: [] },\r\n  },\r\n  {\r\n    id: `prim-1`,\r\n    type: \"primitiveNode\",\r\n    dragHandle: \".custom-node-header\",\r\n    position: { x: -50, y: 200 },\r\n    data: { inputs: {}, sdf: \"\", children: [] },\r\n  },\r\n  {\r\n    id: `prim-2`,\r\n    type: \"primitiveNode\",\r\n    position: { x: -50, y: 550 },\r\n    dragHandle: \".custom-node-header\",\r\n    data: { inputs: {}, sdf: \"\", children: [] },\r\n  },\r\n  {\r\n    id: `bool-0`,\r\n    type: \"booleanNode\",\r\n    dragHandle: \".custom-node-header\",\r\n    position: { x: 200, y: 25 },\r\n    data: { inputs: {}, sdf: \"\", children: [] },\r\n  },\r\n  {\r\n    id: `bool-1`,\r\n    type: \"booleanNode\",\r\n    dragHandle: \".custom-node-header\",\r\n    position: { x: 200, y: 325 },\r\n    data: { inputs: {}, sdf: \"\", children: [] },\r\n  },\r\n  {\r\n    id: `bool-2`,\r\n    type: \"booleanNode\",\r\n    dragHandle: \".custom-node-header\",\r\n    position: { x: 450, y: 150 },\r\n    data: { inputs: {}, sdf: \"\", children: [] },\r\n  },\r\n];\r\n\r\nconst onInit = (reactFlowInstance) =>\r\n  console.log(\"flow loaded:\", reactFlowInstance);\r\n\r\nexport default function Graph() {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [rfInstance, setRfInstance] = useState(null);\r\n  const [id, setId] = React.useState(3);\r\n\r\n  const updateNodeSdf = (id, newSdf, parent) => {\r\n    console.log(\"ACTUALIZADONDO SDF DE \" + id);\r\n    var nodesCopy = [...nodes];\r\n    var parent = nodesCopy.find((node) => node.id === id);\r\n    parent.data = {\r\n      ...parent.data,\r\n      sdf: newSdf,\r\n    };\r\n\r\n    for (var child of parent.data.children) {\r\n      for (var node of nodesCopy) {\r\n        if (node.id === child) {\r\n          var newInputs = node.data.inputs;\r\n          newInputs[`${id}`] = newSdf;\r\n\r\n          node.data = {\r\n            ...node.data,\r\n            inputs: newInputs,\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    setNodes(nodesCopy);\r\n  };\r\n\r\n  const removeChild = (parent, child) => {\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === parent) {\r\n          console.log(`ELIMINANDO HIJO ${child} DE ${parent}`);\r\n\r\n          var newChildren = node.data.children;\r\n          newChildren = newChildren.filter(function (c) {\r\n            return c.id != child;\r\n          });\r\n\r\n          node.data = {\r\n            ...node.data,\r\n            children: newChildren,\r\n          };\r\n        }\r\n        if (node.id === child) {\r\n          console.log(`ACTUALIZANDO ${child}`);\r\n          var newInputs = node.data.inputs;\r\n          newInputs[`${parent}`] = \"\";\r\n          node.data = {\r\n            ...node.data,\r\n            inputs: newInputs,\r\n          };\r\n        }\r\n\r\n        onNodesChange([node]);\r\n        return node;\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeEdge = (edgeId) => {\r\n    console.log(\"WDGES: \");\r\n    console.log(edges);\r\n    const edge = edges.find((e) => e.id === edgeId);\r\n\r\n    var newEdges = edges.filter((edge) => {\r\n      console.log(edge.source);\r\n      return edge.id != edgeId;\r\n    });\r\n\r\n    setEdges(newEdges);\r\n    removeChild(edge.source, edge.target);\r\n  };\r\n\r\n  const sharedFunctions = {\r\n    updateNodeSdf,\r\n    removeEdge,\r\n  };\r\n\r\n  const onConnect = (params) => {\r\n    const sourceNode = nodes.find((n) => n.id === params.source);\r\n\r\n    // CREAMOS EDGE\r\n    setEdges((eds) =>\r\n      addEdge(\r\n        {\r\n          ...params,\r\n          type: \"buttonEdge\",\r\n          animated: true,\r\n          markerEnd: { type: MarkerType.Arrow, color: \"#000\" },\r\n        },\r\n        eds\r\n      )\r\n    );\r\n\r\n    // AÑADIMOS HIJO AL PADRE\r\n    var newChildren = sourceNode.data.children;\r\n    newChildren.push(params.target);\r\n\r\n    setNodes((nds) =>\r\n      nds.map((node) => {\r\n        if (node.id === params.source) {\r\n          console.log(`AÑADIENDO HIJO ${params.target} A ${params.source}`);\r\n\r\n          // var newChildren = node.data.children;\r\n          // console.log(typeof newChildren);\r\n          // console.log(newChildren);\r\n          // newChildren.push(params.target);\r\n          console.log(newChildren);\r\n          node.data = {\r\n            ...node.data,\r\n            children: newChildren,\r\n          };\r\n        }\r\n        if (node.id === params.target) {\r\n          console.log(`INICIALIZANDO ${params.source}`);\r\n          var newInputs = node.data.inputs;\r\n          newInputs[`${params.source}`] = sourceNode.data.sdf;\r\n          node.data = {\r\n            ...node.data,\r\n            inputs: newInputs,\r\n          };\r\n        }\r\n\r\n        onNodesChange([node]);\r\n        return node;\r\n      })\r\n    );\r\n\r\n    // INICIAMOS HIJO\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"NODOS ACTUALIZADOS\");\r\n    console.log(nodes);\r\n  }, [nodes]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"NUEVO EDGE:\");\r\n    console.log(edges);\r\n  }, [edges]);\r\n\r\n  const onSave = () => {\r\n    if (rfInstance) {\r\n      const flow = rfInstance.toObject();\r\n      localStorage.setItem(flowKey, JSON.stringify(flow));\r\n    }\r\n  };\r\n\r\n  const onLoad = async () => {\r\n    const flow = JSON.parse(localStorage.getItem(flowKey));\r\n\r\n    if (flow) {\r\n      console.log(\"FLOW\");\r\n      console.log(flow);\r\n      const { x = 0, y = 0, zoom = 1 } = flow.viewport;\r\n      setNodes(flow.nodes || []);\r\n      setEdges(flow.edges || []);\r\n    }\r\n  };\r\n\r\n  const newPrimitiveNode = (xPos = 0, yPos = 0) => {\r\n    setId(id + 1);\r\n    const nodeId = `node-${id}`;\r\n    return {\r\n      id: nodeId,\r\n      type: \"primitiveNode\",\r\n      dragHandle: \".custom-node-header\",\r\n      position: { x: xPos, y: yPos },\r\n      data: {\r\n        inputs: {},\r\n        sdf: \"\",\r\n        children: [],\r\n      },\r\n    };\r\n  };\r\n\r\n  const newBooleanNode = (xPos = 0, yPos = 0) => {\r\n    setId(id + 1);\r\n    return {\r\n      id: `node-${id}`,\r\n      type: \"booleanNode\",\r\n      dragHandle: \".custom-node-header\",\r\n      position: { x: xPos, y: yPos },\r\n      data: { inputs: {}, sdf: \"\", children: [] },\r\n    };\r\n  };\r\n\r\n  const handleKey = (e) => {\r\n    // SPACE BAR\r\n    if (e.key.toLowerCase() === \"p\") {\r\n      const node = newPrimitiveNode();\r\n      nodes.push(node);\r\n\r\n      onNodesChange([node]); // Para actualizar\r\n    } else if (e.key.toLowerCase() === \"b\") {\r\n      const node = newBooleanNode();\r\n      nodes.push(node);\r\n\r\n      onNodesChange([node]); // Para actualizar\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }} tabIndex=\"0\" onKeyDown={handleKey}>\r\n      <GraphProvider value={sharedFunctions}>\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          // onDisconnect={onDisconnect}\r\n\r\n          nodeTypes={nodeTypes}\r\n          edgeTypes={edgeTypes}\r\n          onInit={setRfInstance}\r\n          // onEdgeClick={(ev, edge) =>\r\n          //   setEdges(edges.filter((e) => e.id != edge.id))\r\n          // }\r\n          snapToGrid={true}\r\n          fitView\r\n        >\r\n          <Background color=\"#aaa\" gap={10} />\r\n          <CustomControls save={onSave} load={onLoad}/>\r\n        </ReactFlow>\r\n      </GraphProvider>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { getBezierPath, getEdgeCenter } from 'react-flow-renderer';\r\nimport GraphContext from \"./GraphContext.js\";\r\n\r\nimport './styles.css';\r\n\r\nconst foreignObjectSize = 40;\r\n\r\nexport default function CustomEdge({\r\n  id,\r\n  sourceX,\r\n  sourceY,\r\n  targetX,\r\n  targetY,\r\n  sourcePosition,\r\n  targetPosition,\r\n  style = {},\r\n  data,\r\n}) {\r\n  const edgePath = getBezierPath({\r\n    sourceX,\r\n    sourceY,\r\n    sourcePosition,\r\n    targetX,\r\n    targetY,\r\n    targetPosition,\r\n  });\r\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\r\n    sourceX,\r\n    sourceY,\r\n    targetX,\r\n    targetY,\r\n  });\r\n\r\n  const [showButton, setShowButton] = React.useState(false);\r\n  const sharedFunctions = useContext(GraphContext);\r\n\r\n  return (\r\n    <>\r\n      <path\r\n        id={id}\r\n        style={style}\r\n        className=\"react-flow__edge-path\"\r\n        d={edgePath}\r\n        \r\n      />\r\n      <foreignObject\r\n        width={foreignObjectSize}\r\n        height={foreignObjectSize}\r\n        x={edgeCenterX - foreignObjectSize / 2}\r\n        y={edgeCenterY - foreignObjectSize / 2}\r\n        \r\n        className=\"edgebutton-foreignobject\"\r\n        requiredExtensions=\"http://www.w3.org/1999/xhtml\"\r\n      >\r\n        {true ?\r\n          <body>\r\n            <button className=\"edgebutton\" onClick={() => {console.log(\"SI: \" + id); sharedFunctions.removeEdge(id)}}>\r\n              ×\r\n            </button>\r\n          </body> \r\n          : \r\n          null\r\n        }\r\n      </foreignObject>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\n\nimport {\n  Header,\n  Content,\n  Footer,\n  Navbar,\n  Nav,\n  Icon,\n  Panel,\n  Grid,\n  Row, Col,\n} from \"rsuite\";\n\nimport Graph from \"./Graph\";\nimport \"rsuite/dist/styles/rsuite-default.css\";\n\nimport \"./styles.css\";\nimport Shader from \"./Shader\";\nimport {fs} from \"./fragmentShaderMovable\";\n\nconst NavBarExample = () => {\n  return (\n    <Navbar appearance=\"inverse\">\n      <Navbar.Header>\n        <a className=\"navbar-brand logo\">3D Visualizer</a>\n      </Navbar.Header>\n      <Navbar.Body>\n        <Nav>\n          <Nav.Item eventKey=\"1\">Tab 1</Nav.Item>\n          <Nav.Item eventKey=\"2\">Tab 2</Nav.Item>\n          <Nav.Item eventKey=\"3\">Tab 3</Nav.Item>\n        </Nav>\n        <Nav pullRight>\n          <Nav.Item icon={<Icon icon=\"cog\" />}>Settings</Nav.Item>\n        </Nav>\n      </Navbar.Body>\n    </Navbar>\n  );\n};\n\n\nfunction MainContent(){ \n  return(\n    <>\n    <Grid fluid>\n      <Row>\n        <Col xs={6}>\n          <Shader \n            style={{height: \"100vh\"}}\n            shader={fs(\"box(p, vec3(1.0))\")} \n            uniforms={{ color: { type: \"3fv\", value: [1.0, 1.0, 0.0] } }}\n          />\n        </Col>\n        <Col xs={1}>\n          <div style={{borderRight: \"2px solid grey\",  height: \"100vh\"}} />\n        </Col>\n        <Col xs={17}>\n          {/* <ContextMenu/> */}\n          \n          <Graph/>\n        </Col>\n      </Row>\n      \n    </Grid>\n    </>\n  );\n}\n\nconst layoutStyles = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  height: \"100vh\"\n};\n\nexport default function App() {\n  return (\n    <div style={layoutStyles}>\n      <Header>\n        <NavBarExample />\n      </Header>\n      <Content style={{ flexGrow: 1 }}>\n        <MainContent />\n      </Content>\n      <Footer>\n        <Panel bordered>\n          <p>Daniel Zufrí Quesada</p>\n        </Panel>\n      </Footer>\n    </div>\n  );\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n)\n"],"sourceRoot":""}